1:"$Sreact.fragment"
2:I[9229,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","448","static/chunks/448-33e6d0825603c686.js","177","static/chunks/app/layout-2ef854914d2ef86c.js"],"default"]
3:I[2943,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","448","static/chunks/448-33e6d0825603c686.js","177","static/chunks/app/layout-2ef854914d2ef86c.js"],"SidebarProvider"]
4:I[6226,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","448","static/chunks/448-33e6d0825603c686.js","177","static/chunks/app/layout-2ef854914d2ef86c.js"],"default"]
5:I[323,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","448","static/chunks/448-33e6d0825603c686.js","177","static/chunks/app/layout-2ef854914d2ef86c.js"],"default"]
6:I[831,[],""]
7:I[8307,[],""]
8:I[70,["70","static/chunks/70-d82343500dd0d9ac.js","345","static/chunks/app/not-found-8b0af7c225bbe321.js"],""]
9:I[8092,["507","static/chunks/app/posts/%5Bid%5D/layout-6a37c5d18e0b4ffc.js"],"default"]
b:I[9757,[],"MetadataBoundary"]
d:I[9757,[],"OutletBoundary"]
10:I[8475,[],"AsyncMetadataOutlet"]
12:I[4299,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","880","static/chunks/app/posts/%5Bid%5D/page-d9f0a2d13d9ca4de.js"],"Image"]
13:I[9757,[],"ViewportBoundary"]
15:I[7882,["219","static/chunks/app/global-error-e65e17ac78cfa06a.js"],"default"]
:HL["https://codefug.github.io/_next/static/media/518331124efecf5c-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["https://codefug.github.io/_next/static/css/c04e84a4e442b7aa.css","style"]
:HL["https://codefug.github.io/_next/static/css/7b1838e6bdc2260c.css","style"]
:HL["https://codefug.github.io/_next/static/css/fc37ac2b1a278e8c.css","style"]
0:{"P":null,"b":"dteosDFjZEfIqGAVTGW2C","p":"https://codefug.github.io","c":["","posts","2024-11-10"],"i":false,"f":[[["",{"children":["posts",{"children":[["id","2024-11-10","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/c04e84a4e442b7aa.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/7b1838e6bdc2260c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__className_7ee20e antialiased","children":["$","$L2",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"children":["$","$L3",null,{"defaultOpen":false,"children":[["$","$L4",null,{"totalFrontMatterList":[{"id":"2024-11-10","title":"Asynchronous JavaScript","excerpt":"microtask queue, macrotask queue, call stack, web api와 관련된 비동기 동작 방식, 비동기 관련 역사와 비동기 코드의 다양한 활용법들을 알아보자.","date":"2024-11-10","categories":["javascript"],"header":{"teaser":"/images/logos/JS.svg"}},{"id":"2024-09-14-4","title":"(꼼꼼 프로젝트) streaming 방식의 tanstack query","excerpt":"infinite scroll, optimistic update 그리고 streaming 방식이 결합된 쿼리 처리 ( useSuspenseQuery, useSuspenseInfiniteQuery )","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/tanstackQuery.png"}},{"id":"2024-09-14-3","title":"(꼼꼼 프로젝트) 클라이언트와 서버 둘다 호환되는 fetch 구현","excerpt":"서버 액션을 활용한 refresh token rotation, 커링 함수를 이용한 리팩토링","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/fetch.png"}},{"id":"2024-09-14-2","title":"(꼼꼼 프로젝트) startTransition, progress bar 구현에 대한 고민","excerpt":"progress bar 로직 연구하기(startTransition), next-nprogress-bar","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/nprogress.png"}},{"id":"2024-09-14-1","title":"(꼼꼼 프로젝트) toss slash 분석, zustand와 연결된 커스텀 overlay 훅 구현","excerpt":"stacking context, compound pattern, 전역 상태를 활용한다는 것의 의미, 토스 개발자 실력 흡수하기","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/toss.png"}},{"id":"2024-09-11","title":"(꼼꼼 프로젝트) 공통 버튼 컴포넌트의 종류를 쉽게 관리하고 누구나 쉽게 확인할 수 있게 하는 방법","excerpt":"tailwind로 조건부 처리를 간편하게 하는 방법, 비개발자도 스타일을 쉽게 확인할 수 있도록 storybook 연동","date":"2024-09-11","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/storybook.png"}},{"id":"2024-07-22-2","title":"(급페이 프로젝트) 개발환경에만 집중하기 위한 여정","excerpt":"접근 제한을 위한 미들웨어 처리, vercel CLI을 이용한 organization 무료 자동 배포, 프리뷰","date":"2024-07-22","categories":["gheuppay"],"header":{"teaser":"/images/logos/vercel.png"}},{"id":"2024-07-22-1","title":"(급페이 프로젝트) 알림창 무한 스크롤을 위한 여정 (mock fetching을 위한 MSW 도입기)","excerpt":"msw를 활용해서 프론트엔드 개발이 다 되어있지 않은 상태에서도 무한 스크롤 구현을 확인할 수 있게 되었습니다.","date":"2024-07-22","categories":["gheuppay"],"header":{"teaser":"/images/logos/msw.png"}},{"id":"2024-07-21","title":"(급페이 프로젝트) 카드 렌더링을 최적화하여 UX를 향상시키기 위한 머나먼 여정","excerpt":"server component 설계를 이용한 suspense 적극 활용, 이를 위해서 next cookie를 사용하면서 겪은 문제들을 적은 글입니다.","date":"2024-07-21","categories":["gheuppay"],"header":{"teaser":"/images/logos/next-cookie.png"}},{"id":"2024-06-18","title":"React Testing","excerpt":"React Testing Library, Vitest, Jest","date":"2024-06-18","categories":["reactdeepdive"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-06-17","title":"로그인 구현 (zustand, zod + react-hook-form, RTR)","excerpt":"zustand를 이용한 로그인 상태 전역 관리, zod를 이용한 간단한 스키마 전개, react-hook-form을 이용한 간단한 validation, axios를 이용한 간단한 api 요청 처리","date":"2024-06-17","categories":["react"],"header":{"teaser":"/images/logos/zod.png"}},{"id":"2024-06-15","title":"Dev tool","excerpt":"리액트 과거, 현재, 미래","date":"2024-06-15","categories":["web"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-06-14","title":"마이그레이션 중 발생한 Vite 환경 변수 처리","excerpt":"Vite_ENV","date":"2024-06-14","categories":["react"],"header":{"teaser":"/images/logos/react.png"}},{"id":"2024-06-10","title":"React Debugging","excerpt":"react-dev-tools 정리, 실습","date":"2024-06-10","categories":["react"],"header":{"teaser":"/images/logos/react.png"}},{"id":"2024-06-08","title":"자잘한 Next.js 트러블 슈팅들","excerpt":"react-responsive를 사용하지 못하는 상황, dotenv 사용시 문제 발생","date":"2024-06-08","categories":["nextjs"],"header":{"teaser":"/images/logos/Nextjs.png"}},{"id":"2024-05-31","title":"Next는 왜 쓸까","excerpt":"CSR SSG SSR","date":"2024-05-31","categories":["nextjs"],"header":{"teaser":"/images/logos/Nextjs.png"}},{"id":"2024-05-23","title":"리액트는 왜 쓸까","excerpt":"리액트 과거, 현재, 미래","date":"2024-05-23","categories":["react"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-05-22","title":"TS는 왜 쓸까 (위대한 TS)","excerpt":"JS를 완벽하게 하기 위한 여정","date":"2024-05-22","categories":["typescript"],"header":{"teaser":"/images/logos/TS.png"}},{"id":"2024-05-20","title":"Fandom-k 프로젝트 회고3","excerpt":"Github Actions, 최종 결과","date":"2024-05-20","categories":["fandomk"],"header":{"teaser":"/images/logos/githubActions.png"}},{"id":"2024-05-19","title":"Fandom-k 프로젝트 회고2","excerpt":"fetch, scroll to Top, infinite scroll 라이브러리 제거","date":"2024-05-19","categories":["fandomk"],"header":{"teaser":"/images/logos/fetch.png"}},{"id":"2024-05-18","title":"Fandom-k 프로젝트 회고1","excerpt":"팀 프로젝트 세팅, infinite scroll, skeleton","date":"2024-05-18","categories":["fandomk"],"header":{"teaser":"/images/logos/infinite-scroll.png"}}]}],["$","$L5",null,{"children":["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"children":[["$","h2",null,{"children":"Not Found"}],["$","p",null,{"children":"잘못된 페이지에요!"}],["$","$L8",null,{"href":"/","children":"홈으로 돌아가기"}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]}]}]}]]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["id","2024-11-10","d"],["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/fc37ac2b1a278e8c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","div",null,{"className":"prose mx-auto overflow-auto dark:prose-invert","children":[["$","$L6",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}],["$","$L9",null,{}]]}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$La",["$","$Lb",null,{"children":"$Lc"}],null,["$","$Ld",null,{"children":["$Le","$Lf",["$","$L10",null,{"promise":"$@11"}]]}]]}],{},null,false]},null,false]},null,false]},[["$","div","l",{"className":"flex h-full items-center justify-center","children":["$","div",null,{"className":"flex flex-col items-center","children":[["$","div",null,{"className":"scale-[1.15] animate-pulse transition-transform","children":["$","$L12",null,{"src":"/images/main-logo.png","alt":"로딩 중...","width":120,"height":120,"className":"drop-shadow-lg"}]}],["$","p",null,{"className":"mt-6 animate-pulse text-lg font-bold text-gray-600","children":"Codefug Blog"}]]}]}],[],[]],false],["$","$1","h",{"children":[null,["$","$1","OeBjA2iMc6eJBd9XlLXAU",{"children":[["$","$L13",null,{"children":"$L14"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$15",[]],"s":false,"S":true}
16:"$Sreact.suspense"
17:I[8475,[],"AsyncMetadata"]
c:["$","$16",null,{"fallback":null,"children":["$","$L17",null,{"promise":"$@18"}]}]
f:null
14:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
e:null
18:{"metadata":[["$","title","0",{"children":"Codefug Blog"}],["$","meta","1",{"name":"description","content":"project experiences and development notes"}],["$","meta","2",{"property":"og:title","content":"Codefug Blog"}],["$","meta","3",{"property":"og:description","content":"project experiences and development notes"}],["$","meta","4",{"property":"og:url","content":"https://codefug-blog.vercel.app"}],["$","meta","5",{"property":"og:image","content":"http://localhost:3000/images/main-logo.png"}],["$","meta","6",{"property":"og:image:alt","content":"Codefug Blog"}],["$","meta","7",{"property":"og:type","content":"website"}],["$","meta","8",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","9",{"name":"twitter:title","content":"Codefug Blog"}],["$","meta","10",{"name":"twitter:description","content":"project experiences and development notes"}],["$","meta","11",{"name":"twitter:image","content":"http://localhost:3000/images/main-logo.png"}],["$","meta","12",{"name":"twitter:image:alt","content":"Codefug Blog"}],["$","link","13",{"rel":"icon","href":"/icon.ico?f00882ffa3186f37","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
11:{"metadata":"$18:metadata","error":null,"digest":"$undefined"}
a:["$","section",null,{"children":[["$","header",null,{"className":"mb-8","children":[["$","div",null,{"className":"relative mb-6 h-[300px] w-full overflow-hidden rounded-xl sm:h-[400px] md:h-[450px]","children":[["$","$L12",null,{"src":"/images/logos/JS.svg","alt":"Asynchronous JavaScript","fill":true,"sizes":"(max-width: 768px) 100vw, 1200px","priority":true,"className":"object-cover object-center transition-transform duration-500 hover:scale-105"}],["$","div",null,{"className":"absolute inset-0 bg-gradient-to-b from-transparent to-black/70"}],["$","div",null,{"className":"absolute left-4 top-4 flex flex-wrap gap-2 sm:left-6 sm:top-6","children":[["$","div","javascript",{"className":"inline-flex items-center rounded-md border px-2.5 py-0.5 transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-white/90 text-xs font-medium text-gray-800 hover:bg-white sm:text-sm","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag mr-1 h-3 w-3","children":[["$","path","vktsd0",{"d":"M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z"}],["$","circle","kqv944",{"cx":"7.5","cy":"7.5","r":".5","fill":"currentColor"}],"$undefined"]}]," ","javascript"]}]]}]]}],["$","div",null,{"className":"mb-6 space-y-4","children":[["$","h1",null,{"className":"mb-0 text-3xl font-bold tracking-tight text-gray-900 dark:text-gray-50 sm:text-4xl md:text-5xl","children":"Asynchronous JavaScript"}],["$","div",null,{"className":"flex items-center justify-end gap-4 text-sm text-gray-600 dark:text-gray-400","children":["$","div",null,{"className":"flex items-center","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar-days mr-2 h-4 w-4","children":[["$","path","1cmpym",{"d":"M8 2v4"}],["$","path","4m81vk",{"d":"M16 2v4"}],["$","rect","1hopcy",{"width":"18","height":"18","x":"3","y":"4","rx":"2"}],["$","path","8toen8",{"d":"M3 10h18"}],["$","path","6423bh",{"d":"M8 14h.01"}],["$","path","1etili",{"d":"M12 14h.01"}],["$","path","1gbofw",{"d":"M16 14h.01"}],["$","path","lrp35t",{"d":"M8 18h.01"}],["$","path","mhygvu",{"d":"M12 18h.01"}],["$","path","kzsmim",{"d":"M16 18h.01"}],"$undefined"]}],["$","time",null,{"dateTime":"2024-11-10","children":"2024-11-10"}]]}]}],["$","p",null,{"className":"text-lg leading-relaxed text-gray-600 dark:text-gray-300 md:text-xl","children":"microtask queue, macrotask queue, call stack, web api와 관련된 비동기 동작 방식, 비동기 관련 역사와 비동기 코드의 다양한 활용법들을 알아보자."}]]}],["$","div",null,{"className":"border-b border-gray-200 dark:border-gray-800"}]]}],["$","section",null,{"className":"lg:flex lg:items-baseline","children":["$L19",["$","section",null,{"className":"max-w-full","children":[["$","p",null,{"children":["$","img",null,{"src":"https://velog.velcdn.com/images/codefug/post/1863b8a0-6521-495b-85f2-22b0f35b6380/image.png","alt":""}]}],"\n",["$","h1",null,{"id":"0비동기 통신의 이해","children":["$","mark",null,{"style":{"background":"#FF5582A6"},"children":"비동기 통신의 이해"}]}],"\n",["$","p",null,{"children":"JS는 Single Thread에서 작동한다. 즉 한 번에 하나의 작업만 동기 방식으로 처리할 수 있다."}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"동기(synchronous) : 직렬 방식으로 작업을 처리하는 것, 요청이 시작하고 응답을 받은 후에야 다음 작업 처리"}],"\n"]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"비동기(Asynchronous) : 병렬 방식으로 작업을 처리하는 것, 요청이 시작한 후 응답과 관계 없이 다음 작업 처리"}],"\n"]}],"\n",["$","p",null,{"children":"사용자가 검색어를 입력해 검색을 위한 네트워크 요청이 발생한 순간에도 다른 작업을 처리할 수 있다. (비동기적 작업 방식)"}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"리액트에서는 16 버전에 접어들면서 비동기식으로 작동하는 방법이 소개 되었다."}],"\n"]}],"\n",["$","h2",null,{"id":"1싱글 스레드 자바스크립트","children":["$","mark",null,{"style":{"background":"#FFB86CA6"},"children":"싱글 스레드 자바스크립트"}]}],"\n",["$","p",null,{"children":["과거, 프로그램을 실행하는 단위가 오직 ",["$","strong",null,{"children":"Process"}]," 뿐이었다."]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Process"}]}],"\n",["$","p",null,{"children":"프로그램을 구동해 프로그램의 상태가 메모리 상에서 실행되는 작업 단위"}],"\n"]}],"\n",["$","p",null,{"children":["현재, 하나의 프로그램에 여러가지 작업이 필요해졌고 더 작은 실행 단위인 ",["$","strong",null,{"children":"thread"}],"가 탄생했다."]}],"\n",["$","p",null,{"children":"thread: 하나의 process에는 여러 개의 thread를 만들 수 있고, thread 끼리 메모리를 공유할 수 있다. 여러 작업을 동시 수행"}],"\n",["$","p",null,{"children":"JavaScript는 기본적으로 싱글 쓰레드 이다."}],"\n",["$","h2",null,{"id":"2JS가 멀티 쓰레드가 아닌 이유","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"JS가 멀티 쓰레드가 아닌 이유"}]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"멀티 쓰레드는 내부적으로 처리가 복잡하며 같은 자원에 대해 여러 번 수정하는 등 동시성 문제가 발생할 수 있기에 이에 대한 처리가 필요하다."}],"\n",["$","li",null,{"children":["각각 격리되어 있는 ",["$","strong",null,{"children":"Process"}],"와 다르게 하나의 ",["$","strong",null,{"children":"Thread"}],"가 문제가 생기면 다른 ",["$","strong",null,{"children":"Thread"}],"도 문제가 발생할 수 있다."]}],"\n",["$","li",null,{"children":["JS이 ",["$","strong",null,{"children":"멀티 스레딩"}],"을 지원해서 동시에 여러 쓰레드가 DOM을 조작할 수 있었다면 메모리 공유로 인해 동시에 같은 자원에 접근하게 되고 이 때문에 타이밍 이슈가 발생할 수 있고 DOM 표시에 큰 문제를 발생시킬 수 있다."]}],"\n"]}],"\n",["$","h2",null,{"id":"3Event Loop","children":["$","mark",null,{"style":{"background":"#FFB86CA6"},"children":"Event Loop"}]}],"\n",["$","p",null,{"children":["비동기 동작과 뗄 수 없는 개념은 ",["$","code",null,{"children":"Event Loop"}],"이다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Node.js"}],"와 마찬가지로 브라우저 측 자바스크립트 실행 흐름도 ",["$","code",null,{"children":"Event Loop"}],"에 기반을 둔다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Event Loop"}],"를 잘 알고 있어야 올바른 아키텍처 설계가 가능하다."]}],"\n",["$","h3",null,{"id":"4자바스크립트 엔진 동작 방식","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"자바스크립트 엔진 동작 방식"}]}],"\n",["$","p",null,{"children":"자바스크립트 엔진은 다음의 알고리즘을 갖고 있다."}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["처리해야 할 task가 있는 경우","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"먼저 들어온 task부터 차례대로 처리한다."}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["처리해야 할 task가 없는 경우","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"잠들어 있다가 새로운 task가 추가되면 다시 1번 과정으로 돌아간다."}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":"자바스크립트 엔진은 대부분 시간을 아무런 일도 하지 않고 쉬다가 스크립트나 핸들러, 이벤트가 활성화될 때만 돌아간다."}],"\n",["$","p",null,{"children":"자바스크립트 엔진을 활성화하는 task는 다음과 같다."}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["외부 스크립트 ",["$","code",null,{"children":"<script src=\"...\">"}],"가 로드될 때, 이 스크립트를 실행하는 것"]}],"\n",["$","li",null,{"children":["사용자가 마우스를 움직일 때 ",["$","code",null,{"children":"mousemove"}]," 이벤트와 이벤트 핸들러를 실행하는 것"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"setTimeout"}],"에서 설정한 시간이 다 된 경우, 콜백 함수를 실행하는 것"]}],"\n",["$","li",null,{"children":"기타 등등"}],"\n"]}],"\n",["$","p",null,{"children":"task는 하나의 집합을 이룬다. 자바스크립트 엔진은 해당 task를 차례대로 처리하며 새로운 task가 추가될 때까지 기다린다. task를 기다리는 동안 CPU 자원 소비는 0에 가까워지고 엔진은 잠들게 된다."}],"\n",["$","p",null,{"children":["엔진이 바쁠 때 task가 추가되면 해당 task는 ",["$","strong",null,{"children":"Macrotask queue"}],"에 추가된다."]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["참고로 ",["$","code",null,{"children":"task queue"}],"의 구조는 ",["$","code",null,{"children":"queue"}],"가 아닌 ",["$","code",null,{"children":"set"}],"이다. 선택된 큐에서 실행 가능한 가장 오래된 task를 가져와야 하기 때문이다.\n무조건 먼저 들어온 첫번째 큐를 ",["$","code",null,{"children":"dequeue"}],"하는 것이 아니라 실행 가능한 것들 중에 가장 오래된 task를 차례대로 실행시킨다."]}],"\n",["$","p",null,{"children":["$","a",null,{"href":"https://html.spec.whatwg.org/multipage/webappapis.html#definitions-3","children":"https://html.spec.whatwg.org/multipage/webappapis.html#definitions-3"}]}],"\n"]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241108212123.png","alt":""}]}],"\n",["$","p",null,{"children":["(",["$","code",null,{"children":"script"}],"를 처리하는데 중간에 ",["$","code",null,{"children":"mousemove"}]," 핸들러도 실행되고 ",["$","code",null,{"children":"setTimeout"}],"에서 설정한 시간이 지나서 콜백이 들어온 경우의 상태를 그림으로 나타냄)"]}],"\n",["$","p",null,{"children":"JavaScript 엔진은 이들을 차례대로 처리한다."}],"\n",["$","p",null,{"children":"이때 알아야 할 두가지는"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"엔진이 task를 처리하는 동안은 렌더링이 일어나지 않는다. 처리를 완료하면 DOM 변경을 화면에 반영한다."}],"\n",["$","li",null,{"children":"task에 긴 시간이 걸리면 task를 처리하는 동안 발생한 새로운 task를 처리하지 못한다. ( 응답 없는 페이지라는 alert 창은 페이지 전체와 함께 현재 task를 최소시킬지 말지를 선택하게 한다. )"}],"\n"]}],"\n",["$","h3",null,{"id":"5예시 1: CPU 소모가 많은 task 쪼개기","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"예시 1: CPU 소모가 많은 task 쪼개기"}]}],"\n",["$","p",null,{"children":"CPU 소모가 아주 많은 task 하나가 있다고 가정해보자."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," i = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," start = ",["$","span",null,{"className":"hljs-title class_","children":"Date"}],".",["$","span",null,{"className":"hljs-title function_","children":"now"}],"();\n\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"count"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// CPU 소모가 많은 무거운 작업을 수행"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"for"}]," (",["$","span",null,{"className":"hljs-keyword","children":"let"}]," j = ",["$","span",null,{"className":"hljs-number","children":"0"}],"; j < ",["$","span",null,{"className":"hljs-number","children":"1e9"}],"; j++) {\n    i++;\n  }\n\n  ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"처리에 걸린 시간: \""}]," + (",["$","span",null,{"className":"hljs-title class_","children":"Date"}],".",["$","span",null,{"className":"hljs-title function_","children":"now"}],"() - start) + ",["$","span",null,{"className":"hljs-string","children":"\"ms\""}],");\n}\n\n",["$","span",null,{"className":"hljs-title function_","children":"count"}],"();\n"]}]}],"\n",["$","p",null,{"children":"1e9 (0이 9개)을 센 다음 alert를 하는 코드인데 해당 count()가 실행되는 동안 브라우저는 사용자 이벤트 처리나 DOM 관련 작업을 완전히 멈추게 되는 것을 확인할 수 있다.\n( 실행시키고 페이지에 마우스 우클릭을 하면 alert가 나올때까지 아무것도 안 보이다가 alert가 나오고 마우스 우클릭시 나오는 메뉴가 나온다. )"}],"\n",["$","p",null,{"children":"코드를 쪼개서 이를 개선해보자."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," i = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," start = ",["$","span",null,{"className":"hljs-title class_","children":"Date"}],".",["$","span",null,{"className":"hljs-title function_","children":"now"}],"();\n\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"count"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// 무거운 작업을 쪼갠 후 이를 수행 (*)"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"do"}]," {\n    i++;\n    ",["$","span",null,{"className":"hljs-comment","children":"// 2* 1e6, 3* 1e6 등 1e6의 배수에서 do while 문을 나가게 된다."}],"\n  } ",["$","span",null,{"className":"hljs-keyword","children":"while"}]," (i % ",["$","span",null,{"className":"hljs-number","children":"1e6"}]," != ",["$","span",null,{"className":"hljs-number","children":"0"}],");\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (i == ",["$","span",null,{"className":"hljs-number","children":"1e9"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// 위의 do while문을 1e3번 반복하면 도착"}],"\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"처리에 걸린 시간: \""}]," + (",["$","span",null,{"className":"hljs-title class_","children":"Date"}],".",["$","span",null,{"className":"hljs-title function_","children":"now"}],"() - start) + ",["$","span",null,{"className":"hljs-string","children":"\"ms\""}],");\n  } ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," {\n    ",["$","span",null,{"className":"hljs-comment","children":"// 1e6의 배수이지만 1e9가 아닐 경우"}],"\n    ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(count); ",["$","span",null,{"className":"hljs-comment","children":"// 새로운 호출을 스케줄링 (**)"}],"\n  }\n}\n\n",["$","span",null,{"className":"hljs-title function_","children":"count"}],"();\n"]}]}],"\n",["$","p",null,{"children":"do while문을 1e3번 반복해서 alert가 나오게 되는데 그 이전까지 setTimeout으로 count를 넘기기 때문에 동기적인 코드들은 돌아갈 수 있게 되고 이 때문에 이벤트 핸들러, DOM 관련 동작 들을 해결할 수 있게 된다."}],"\n",["$","p",null,{"children":"위 코드는 사실 조금의 시간차가 존재한다. 다음처럼 setTimeout을 앞으로 끌어오면 이를 해결할 수 있다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," i = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," start = ",["$","span",null,{"className":"hljs-title class_","children":"Date"}],".",["$","span",null,{"className":"hljs-title function_","children":"now"}],"();\n\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"count"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// 스케줄링 코드를 함수 앞부분으로 옮김"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (i < ",["$","span",null,{"className":"hljs-number","children":"1e9"}]," - ",["$","span",null,{"className":"hljs-number","children":"1e6"}],") {\n    ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(count); ",["$","span",null,{"className":"hljs-comment","children":"// 새로운 호출을 스케줄링함"}],"\n  }\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"do"}]," {\n    i++;\n  } ",["$","span",null,{"className":"hljs-keyword","children":"while"}]," (i % ",["$","span",null,{"className":"hljs-number","children":"1e6"}]," != ",["$","span",null,{"className":"hljs-number","children":"0"}],");\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (i == ",["$","span",null,{"className":"hljs-number","children":"1e9"}],") {\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"처리에 걸린 시간: \""}]," + (",["$","span",null,{"className":"hljs-title class_","children":"Date"}],".",["$","span",null,{"className":"hljs-title function_","children":"now"}],"() - start) + ",["$","span",null,{"className":"hljs-string","children":"\"ms\""}],");\n  }\n}\n\n",["$","span",null,{"className":"hljs-title function_","children":"count"}],"();\n"]}]}],"\n",["$","p",null,{"children":["부분 카운팅 (",["$","code",null,{"children":"do...while"}],")이 일어나기 전에 부분 재스케줄링(",["$","code",null,{"children":"setTimeout"}],")이 일어나게 된다."]}],"\n",["$","p",null,{"children":"setTimeout 호출이 많은 경우, 브라우저 최소 대기 시간이 4밀리초이기 때문에 숫자 세기 전에 스케줄링을 하면 숫자를 세면서 대기 시간을 소모하기 때문에 실행이 더 빨라진다.\n(setTimeout 로직이 뒤쪽에 있으면 setTimeout(count) 실행되고 바로 다음 macrotask로 count 함수가 실행돼야 되는데 안 가고 4ms 있다가 실행된다는 뜻)"}],"\n",["$","h3",null,{"id":"6예시 2: Progress bar","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"예시 2: Progress bar"}]}],"\n",["$","p",null,{"children":["task를 여러 개로 쪼갤 때의 장점은 진행 상태를 나타내주는 ",["$","code",null,{"children":"progress bar"}],"를 만들 때도 드러난다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":["<div id=",["$","span",null,{"className":"hljs-string","children":"\"progress\""}],"></div>\n\n",["$","span",null,{"className":"xml","children":[["$","span",null,{"className":"hljs-tag","children":["<",["$","span",null,{"className":"hljs-name","children":"script"}],">"]}],["$","span",null,{"className":"javascript","children":["\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"count"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"for"}]," (",["$","span",null,{"className":"hljs-keyword","children":"let"}]," i = ",["$","span",null,{"className":"hljs-number","children":"0"}],"; i < ",["$","span",null,{"className":"hljs-number","children":"1e6"}],"; i++) {\n      i++;\n      progress.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}]," = i;\n    }\n  }\n\n  ",["$","span",null,{"className":"hljs-title function_","children":"count"}],"();\n"]}],["$","span",null,{"className":"hljs-tag","children":["</",["$","span",null,{"className":"hljs-name","children":"script"}],">"]}]]}],"\n"]}]}],"\n",["$","p",null,{"children":"브라우저는 시간이 오래 걸리든 아니든 상관 없이 현재 작업 중인 task가 끝나야 DOM 변경분을 화면에 렌더링한다."}],"\n",["$","p",null,{"children":["그래서 위의 코드는 ",["$","code",null,{"children":"progress bar"}],"의 기능을 완수하지 못한다. i가 전부 지나가야(현재 작업 중인 task가 끝나야) DOM을 렌더링하기 때문이다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":["<div id=",["$","span",null,{"className":"hljs-string","children":"\"progress\""}],"></div>\n\n",["$","span",null,{"className":"xml","children":[["$","span",null,{"className":"hljs-tag","children":["<",["$","span",null,{"className":"hljs-name","children":"script"}],">"]}],["$","span",null,{"className":"javascript","children":["\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," i = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"count"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n\n    ",["$","span",null,{"className":"hljs-comment","children":"// 무거운 작업을 쪼갠 후 이를 수행"}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"do"}]," {\n      i++;\n      progress.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}]," = i;\n    } ",["$","span",null,{"className":"hljs-keyword","children":"while"}]," (i % ",["$","span",null,{"className":"hljs-number","children":"1e3"}]," != ",["$","span",null,{"className":"hljs-number","children":"0"}],");\n\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (i < ",["$","span",null,{"className":"hljs-number","children":"1e7"}],") {\n      ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(count);\n    }\n\n  }\n\n  ",["$","span",null,{"className":"hljs-title function_","children":"count"}],"();\n"]}],["$","span",null,{"className":"hljs-tag","children":["</",["$","span",null,{"className":"hljs-name","children":"script"}],">"]}]]}],"\n"]}]}],"\n",["$","p",null,{"children":["위처럼 코드를 분할하게 되면 i가 변화하는 과정을 출력해 줄 수 있다, ",["$","code",null,{"children":"setTimeout"}],"으로 ",["$","code",null,{"children":"count"}],"를 넘기기 때문에 count와 count 함수 사이에서 동기적인 동작들을 수행할 수 있게 되고 결론적으로 ",["$","code",null,{"children":"progress.innerHTML"}],"이 변경되었다는 DOM 변경 동작이 일어나게 된다."]}],"\n",["$","h3",null,{"id":"7예시 3: 이벤트 처리가 끝난 이후에 작업","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"예시 3: 이벤트 처리가 끝난 이후에 작업"}]}],"\n",["$","p",null,{"children":["이벤트 핸들러를 만들 때 특정 액션을 모든 이벤트 버블링이 끝나고 실행시키고 싶다면 ",["$","code",null,{"children":"ms"}],"가 0인 ",["$","code",null,{"children":"setTimeout"}],"을 사용하면 된다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":["menu.",["$","span",null,{"className":"hljs-property","children":"onclick"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// ..."}],"\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// 클릭한 메뉴 내 항목 정보가 담긴 커스텀 이벤트 생성"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," customEvent = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"CustomEvent"}],"(",["$","span",null,{"className":"hljs-string","children":"\"menu-open\""}],", {\n    ",["$","span",null,{"className":"hljs-attr","children":"bubbles"}],": ",["$","span",null,{"className":"hljs-literal","children":"true"}],",\n  });\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// 비동기로 커스텀 이벤트를 디스패칭"}],"\n  ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," menu.",["$","span",null,{"className":"hljs-title function_","children":"dispatchEvent"}],"(customEvent));\n};\n"]}]}],"\n",["$","p",null,{"children":"위를 살펴보면 \"menu-open\" 이라는 커스텀 이벤트를 만든 후 해당 이벤트를 setTimeout으로 넘겼다."}],"\n",["$","p",null,{"children":["이제 menu의 click 이벤트가 완전히 핸들링된 후에 ",["$","code",null,{"children":"menu-open"}]," 이벤트를 dispatching하게 된다."]}],"\n",["$","h2",null,{"id":"8Macrotask와 Microtask","children":["$","mark",null,{"style":{"background":"#FFB86CA6"},"children":"Macrotask와 Microtask"}]}],"\n",["$","h3",null,{"id":"9Microtask","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"Microtask"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Microtask"}],"는 주로 ",["$","code",null,{"children":"Promise"}],"를 사용해 만든다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Promise"}],"와 함께 쓰이는 ",["$","code",null,{"children":".then/catch/finally"}],"의 핸들러 (소비 함수)가 ",["$","code",null,{"children":"Microtask"}],"가 된다. 또는 ",["$","code",null,{"children":"Promise"}],"를 핸들링하는 ",["$","code",null,{"children":"await"}],"를 사용해 만들기도 한다."]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["이 외에도 표준 API인 ",["$","code",null,{"children":"queueMicrotask(func)"}],"를 사용해서 함수 ",["$","code",null,{"children":"func"}],"를 ",["$","code",null,{"children":"Microtask Queue"}],"에 넣어서 처리할 수 있다."]}],"\n"]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["자바스크립트 엔진은 ",["$","strong",null,{"children":"Macrotask"}],"를 하나 처리할 때마다 js 엔진은 다른 ",["$","code",null,{"children":"Macrotask"}],"를 수행하거나 렌더링하는 등의 작업을 하기 전에 ",["$","strong",null,{"children":"Microtask Queue"}],"에 있는 모든 task를 실행한다."]}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"timeout\""}],"));\n\n",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"().",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"promise\""}],"));\n\n",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"code\""}],");\n\n",["$","span",null,{"className":"hljs-comment","children":"// (현재 호출 스택에서 script 태그에 있는 코드를 읽는 Macrotask중이며 코드를 한 줄씩 넣으면서 실행 중에 있음)"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// 1. setTimeout(()=>alert(\"timeout\")) - 호출 스택에서 실행, ms가 지나면 콜백 함수를 Macrotask queue에 등록"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// 2. Promise.resolve().then(()=>alert(\"promise\")) - 콜백 함수를 Microtask Queue에 등록"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// 3. alert(\"code\") - 바로 호출된다. (현재 script 태그를 읽는 Macrotask를 수행 중이다.)"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// 4. script 태그에 있는 코드를 읽는 Macrotask 종료"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// 5. Microtask queue에 있는 then() 콜백 함수 실행 (호출 스택으로 이동해서 실행, 이 과정에서 이벤트 루프는 다 비워질 때까지 안 돌아감)"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// 6. Microtask queue 비워짐"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// 7. ()=>alert(\"timeout\") - 다음 Macrotask 실행 (호출 스택에서 Macrotask 하나 이동)"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// (해당 Macrotask가 끝나면 다시 Microtask 실행해서 Microtask queue 비우고 렌더링 > 다음 Macrotask 실행 반복)"}],"\n"]}]}],"\n",["$","h3",null,{"id":"10처리 로직","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"처리 로직"}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241109193930.png","alt":""}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Macrotask (script, mousemove, setTimeout 등)"}]," 하나가 처리되고 난 후 ",["$","code",null,{"children":"Microtask"}]," 전부가 처리되고 그 이후 렌더링이 진행되는 것을 확인할 수 있다."]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Microtask는 다른 이벤트 핸들러나 렌더링 작업, 혹은 다른 Macrotask가 실행되기 전에 전부 처리된다."}]}],"\n",["$","p",null,{"children":["script 태그에 있는 코드를 읽는 작업도 ",["$","code",null,{"children":"Macrotask"}],"이기 때문에 script 코드를 한 줄씩 호출 스택에 담고 실행하는 과정이 끝난 후에 Microtask들을 실행한다."]}],"\n",["$","p",null,{"children":["이런 처리순서가 아주 중요한 이유는 마우스 좌표 변경이나 네트워크 통신에 의한 데이터 변경같이 애플리케이션 환경에 변화를 주는 작업에 영향을 받지 않고 모든 ",["$","code",null,{"children":"Microtask"}],"를 동일한 환경에서 처리할 수 있기 때문이다."]}],"\n",["$","p",null,{"children":"\"현재 실행 중인 macrotask 실행이 끝나면 > 현재 존재하는 모든 microtask 실행 > 렌더링 > 다음 macrotask 실행\" 의 순서를 가진다."}],"\n",["$","p",null,{"children":["위 과정을 확인하기 위해서 리페인트 전에 콜백 함수를 호출하는 ",["$","strong",null,{"children":"requestAnimationFrame"}],"으로 확인해보자."]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241109221737.png","alt":""}]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"requestAnimationFrame"}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241109214448.png","alt":""}]}],"\n",["$","p",null,{"children":"브라우저 리페인트 전에 애니메이션 처리를 하기 위해 사용하는 윈도우 메소드,"}],"\n",["$","p",null,{"children":"별도의 큐에서 관리되어 프레임 단위로 렌더링할 수 있도록 보장한다. ( 초당 프레임 기준은 모니터 주사율에 의해 설정된다. )"}],"\n",["$","p",null,{"children":"프레임 단위의 렌더링을 보장하기 때문에 애니메이션 동작이 더 부드러워진다."}],"\n"]}],"\n",["$","p",null,{"children":["만약 임의로 특정 함수를 ",["$","code",null,{"children":"Microtask Queue"}],"로 보내고 싶다면 ",["$","code",null,{"children":"queueMicrotask"}]," 함수를 사용하면 된다.\n( ",["$","code",null,{"children":"setTimeout"}],"과 다른 점은 만약 ",["$","code",null,{"children":"ms"}],"가 0초인 ",["$","code",null,{"children":"setTimeout"}],"을 이용할 때는 ",["$","code",null,{"children":"Macrotask queue"}],"로 보내져서 기존의 ",["$","code",null,{"children":"Microtask Queue"}],"가 다 끝나고 다음 ",["$","code",null,{"children":"Macrotask"}],"가 실행될 때 특정 함수가 실행될 것이다.)"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":["<div id=",["$","span",null,{"className":"hljs-string","children":"\"progress\""}],"></div>\n\n",["$","span",null,{"className":"xml","children":[["$","span",null,{"className":"hljs-tag","children":["<",["$","span",null,{"className":"hljs-name","children":"script"}],">"]}],["$","span",null,{"className":"javascript","children":["\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," i = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"count"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// 무거운 작업을 쪼갠 후 이를 수행"}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"do"}]," {\n      i++;\n      progress.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}]," = i;\n    } ",["$","span",null,{"className":"hljs-keyword","children":"while"}]," (i % ",["$","span",null,{"className":"hljs-number","children":"1e3"}]," != ",["$","span",null,{"className":"hljs-number","children":"0"}],");\n\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (i < ",["$","span",null,{"className":"hljs-number","children":"1e6"}],") {\n      ",["$","span",null,{"className":"hljs-title function_","children":"queueMicrotask"}],"(count);\n    }\n  }\n\n  ",["$","span",null,{"className":"hljs-title function_","children":"count"}],"();\n"]}],["$","span",null,{"className":"hljs-tag","children":["</",["$","span",null,{"className":"hljs-name","children":"script"}],">"]}]]}],"\n"]}]}],"\n",["$","p",null,{"children":"렌더링이 되기 전에 Microtask Queue에 있는 count 함수가 재귀 호출을 하며 Microtask Queue에 새로운 count 함수를 추가하는 방식이므로 실제 화면에는 최종값만 보이게 된다. ( microtask queue가 비워져야 브라우저 렌더링이 일어남. )"}],"\n",["$","p",null,{"children":"다음 예제를 통해 확실히 알아가보자."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// sync, macro, micro 원소 안에 숫자가 있고 button으로 이들을 제어한다고 가정."}],"\nbutton.",["$","span",null,{"className":"hljs-title function_","children":"addEventListener"}],"(",["$","span",null,{"className":"hljs-string","children":"\"click\""}],", ",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n  ",["$","span",null,{"className":"hljs-keyword","children":"for"}]," (",["$","span",null,{"className":"hljs-keyword","children":"let"}]," i = ",["$","span",null,{"className":"hljs-number","children":"0"}],"; i <= ",["$","span",null,{"className":"hljs-number","children":"100000"}],"; i++) {\n    sync.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}]," = i;\n\n    ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n      macro.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}]," = i;\n    }, ",["$","span",null,{"className":"hljs-number","children":"0"}],");\n\n    ",["$","span",null,{"className":"hljs-title function_","children":"queueMicrotask"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n      micro.",["$","span",null,{"className":"hljs-property","children":"innerHTML"}]," = i;\n    });\n  }\n});\n"]}]}],"\n",["$","p",null,{"children":"위 핸들러를 실행시키면 다음의 결과가 나온다."}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"sync"}],"는 렌더링이 일어나지 않다가 100,000 상태가 된다."]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"micro"}],"는 렌더링이 일어나지 않다가 100,000 상태가 된다."]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"macro"}],"는 잠시 기다리다가 1부터 100,000까지 차례대로 렌더링된다."]}],"\n"]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/macro%20task,%20micro%20task,%20call%20stack_241110_031903_1.jpg","alt":""}]}],"\n",["$","p",null,{"children":["이때 차례대로 실행되는 코드들(",["$","code",null,{"children":"sync.innerHTML = i"}],", ",["$","code",null,{"children":"setTimeout"}],", ",["$","code",null,{"children":"queryMicrotask"}],") 이 실행되고 있을 때는 브라우저에서 다른 동작을 할 수 없다. ( 콜 스택에 있는거 다 버리고 동작을 진행할 수는 없으니 )"]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":[["$","code",null,{"children":"setTimeout"}],"의 타이밍 함수 (시간을 새서 콜백을 던져주는 함수)같은 WEB API는 ",["$","code",null,{"children":"Macrotask queue"}],"가 할당되는 외부 쓰레드에서 진행된다. 작업을 할당해 처리하는 것은 브라우저나 Node.js의 역할이다."]}],"\n"]}],"\n",["$","p",null,{"children":[["$","img",null,{"src":"/images/2024-11-10/macro%20task,%20micro%20task,%20call%20stack_241110_031903_2.jpg","alt":""}],"\n",["$","img",null,{"src":"/images/2024-11-10/macro%20task,%20micro%20task,%20call%20stack_241110_031903_3.jpg","alt":""}]]}],"\n",["$","p",null,{"children":["단, 만약 중간에 다른 ",["$","code",null,{"children":"Macrotask"}],"(마우스 이벤트 등등)가 ",["$","code",null,{"children":"Macrotask queue"}],"로 들어와서 먼저 실행 가능 상태가 된다면 ",["$","code",null,{"children":"queue"}],"에서는 해당 ",["$","code",null,{"children":"Macrotask"}],"를 처리할 것이다."]}],"\n",["$","p",null,{"children":"이제 \"왜\" 사용하는지 알게 되었으니 비동기 작업을 \"어떻게\" 사용하는지, 그 흐름을 더 자세히 알아보자."}],"\n",["$","h1",null,{"id":"11비동기 작업의 역사와 개념","children":["$","mark",null,{"style":{"background":"#FF5582A6"},"children":"비동기 작업의 역사와 개념"}]}],"\n",["$","h2",null,{"id":"12콜백","children":["$","mark",null,{"style":{"background":"#FFB86CA6"},"children":"콜백"}]}],"\n",["$","p",null,{"children":["호스트 환경이 제공하는 함수를 사용하면 비동기 동작을 스케줄링할 수 있다. ( ",["$","code",null,{"children":"setTimeout"}]," 같은 함수)"]}],"\n",["$","p",null,{"children":"스크립트나 모듈을 로드하는 함수도 비동기라고 할 수 있는데 이를 예시로 살펴보자."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-params","children":"src"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// <script> 태그를 만들고 페이지에 태그를 추가한다."}],"\n  ",["$","span",null,{"className":"hljs-comment","children":"// 태그가 페이지에 추가되면 src에 있는 스크립트를 로딩하고 실행한다."}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," script = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"\"script\""}],");\n  script.",["$","span",null,{"className":"hljs-property","children":"src"}]," = src;\n  ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"head"}],".",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(script);\n}\n\n",["$","span",null,{"className":"hljs-comment","children":"// 해당 경로에 있는 스크립트를 불러오고 실행한다."}],"\n",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/my/script.js\""}],");\n",["$","span",null,{"className":"hljs-comment","children":"// ..."}],"\n"]}]}],"\n",["$","p",null,{"children":"이때 스크립트는 비동기적으로 실행된다."}],"\n",["$","p",null,{"children":"따라서 loadScript 아래 코드들은 loadScript가 끝나는 것을 기다리지 않는다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/my/script.js\""}],"); ",["$","span",null,{"className":"hljs-comment","children":"// script.js엔 \"function newFunction() {…}\"이 있다."}],"\n\n",["$","span",null,{"className":"hljs-comment","children":"// script.js에 있는 newFunction을 사용하려고 하는데"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// 함수가 존재하지 않는다는 에러가 발생한다!"}],"\n",["$","span",null,{"className":"hljs-title function_","children":"newFunction"}],"();\n"]}]}],"\n",["$","p",null,{"children":"여기에 콜백을 추가해보자."}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"콜백 함수"}]}],"\n",["$","p",null,{"children":"주로 함수 안에 전달인자로 다른 함수에 전달되는 함수를 의미한다. 일종의 루틴이나 동작을 완료하기 위해 외부 함수 내부에서 호출된다."}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-params","children":"src, callback"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," script = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"'script'"}],");\n  script.",["$","span",null,{"className":"hljs-property","children":"src"}]," = src;\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// script가 load 이벤트를 일으키면 (load 되면) callback에 script를 담아서 실행시킨다."}],"\n  script.",["$","span",null,{"className":"hljs-property","children":"onload"}]," = ",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"callback"}],"(script);\n\n  ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"head"}],".",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(script);\n}\n\n",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"'/my/script.js'"}],", ",["$","span",null,{"className":"hljs-keyword","children":"function"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// 콜백 함수는 스크립트 로드가 끝나면 실행됩니다."}],"\n  ",["$","span",null,{"className":"hljs-title function_","children":"newFunction"}],"(); ",["$","span",null,{"className":"hljs-comment","children":"// 이제 함수 호출이 제대로 동작합니다."}],"\n  ...\n});\n"]}]}],"\n",["$","p",null,{"children":"위의 방식을 콜백 기반 비동기 프로그래밍이라고 한다."}],"\n",["$","p",null,{"children":"loadScript에 콜백 함수를 전해줘서 newFunction이 비동기 실행과 나란히 일어날 수 있게 해준다."}],"\n",["$","h3",null,{"id":"13에러 핸들링","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"에러 핸들링"}]}],"\n",["$","p",null,{"children":"스크립트 로딩이 실패하는 경우 발생하는 에러를 핸들링할 수 있어야 한다."}],"\n",["$","p",null,{"children":"다음과 같이 개선해보자."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-params","children":"src, callback"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," script = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"\"script\""}],");\n  script.",["$","span",null,{"className":"hljs-property","children":"src"}]," = src;\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// 성공 시 null과 script를 인수에 넣고"}],"\n  script.",["$","span",null,{"className":"hljs-property","children":"onload"}]," = ",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"callback"}],"(",["$","span",null,{"className":"hljs-literal","children":"null"}],", script);\n  ",["$","span",null,{"className":"hljs-comment","children":"// 실패 시 에러 객체를 인수에 넣는다."}],"\n  script.",["$","span",null,{"className":"hljs-property","children":"onerror"}]," = ",["$","span",null,{"className":"hljs-function","children":"() =>"}],"\n    ",["$","span",null,{"className":"hljs-title function_","children":"callback"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":["`",["$","span",null,{"className":"hljs-subst","children":"$${src}"}],"를 불러오는 도중에 에러가 발생했습니다.`"]}],"));\n\n  ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"head"}],".",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(script);\n}\n\n",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/my/script.js\""}],", ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"error, script"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (error) {\n    ",["$","span",null,{"className":"hljs-comment","children":"// 에러 처리"}],"\n  } ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," {\n    ",["$","span",null,{"className":"hljs-comment","children":"// 스크립트 로딩이 성공적으로 끝남"}],"\n  }\n});\n"]}]}],"\n",["$","p",null,{"children":["위 패턴은 ",["$","strong",null,{"children":"오류 우선 콜백"}],"으로 에러를 처리하기 위해 사용되는 흔한 패턴이다."]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"callback의 첫 번째 인수는 에러를 위해 남겨둔다."}],"\n",["$","li",null,{"children":"두 번째 혹은 그 이상의 인수들은 에러가 발생하지 않았을 때 콜백 함수에 넘겨줄 인수들이다."}],"\n"]}],"\n",["$","h3",null,{"id":"14콜백 속 콜백","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"콜백 속 콜백"}]}],"\n",["$","p",null,{"children":"만약 두 개의 스크립트를 차례대로 불러오려 한다면 콜백 안에 콜백을 넣어야 한다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/my/script.js\""}],", ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"script"}],") {\n  ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/my/script2.js\""}],", ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"script"}],") {\n    ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/my/script3.js\""}],", ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"script"}],") {\n      ",["$","span",null,{"className":"hljs-comment","children":"// 세 스크립트 로딩이 끝난 후 실행됨"}],"\n    });\n  });\n});\n"]}]}],"\n",["$","h4",null,{"id":"15콜백 지옥","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"콜백 지옥"}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241107193715.png","alt":""}]}],"\n",["$","p",null,{"children":"위 방식은 멸망의 피라미드, 콜백 지옥이라 부르는 상황을 만든다.\n(코드가 오른쪽으로 점점 옮겨지면서 가독성도 해치고 코드 재사용이 어려운 상황)"}],"\n",["$","p",null,{"children":"이를 해결하기 위해서 논리적으로 다음과 같이 짤 수는 있는데"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"1.js\""}],", step1);\n\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"step1"}],"(",["$","span",null,{"className":"hljs-params","children":"error, script"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (error) {\n    ",["$","span",null,{"className":"hljs-title function_","children":"handleError"}],"(error);\n  } ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," {\n    ",["$","span",null,{"className":"hljs-comment","children":"// ..."}],"\n    ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"2.js\""}],", step2);\n  }\n}\n\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"step2"}],"(",["$","span",null,{"className":"hljs-params","children":"error, script"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (error) {\n    ",["$","span",null,{"className":"hljs-title function_","children":"handleError"}],"(error);\n  } ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," {\n    ",["$","span",null,{"className":"hljs-comment","children":"// ..."}],"\n    ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"3.js\""}],", step3);\n  }\n}\n\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"step3"}],"(",["$","span",null,{"className":"hljs-params","children":"error, script"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (error) {\n    ",["$","span",null,{"className":"hljs-title function_","children":"handleError"}],"(error);\n  } ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," {\n    ",["$","span",null,{"className":"hljs-comment","children":"// 모든 스크립트가 로딩되면 다른 동작을 수행한다."}],"\n  }\n}\n"]}]}],"\n",["$","p",null,{"children":"이는 모양만 개선되었지 내부 로직은 결국 위아래 옮겨 다니면서 파악해야 하고 재사용이 어려운 문제를 그대로 갖고 있다."}],"\n",["$","h3",null,{"id":"16무조건 콜백을 사용하면 안될까?","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"무조건 콜백을 사용하면 안될까?"}]}],"\n",["$","p",null,{"children":"아니다."}],"\n",["$","p",null,{"children":"특정 동작이 끝나는 것이 보장되고 그다음 코드를 실행해야 할 때 사용하면 여전히 유용하다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title function_","children":"showCircle"}],"(",["$","span",null,{"className":"hljs-number","children":"150"}],", ",["$","span",null,{"className":"hljs-number","children":"150"}],", ",["$","span",null,{"className":"hljs-number","children":"100"}],", ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"div"}],") =>"]}]," {\n  div.",["$","span",null,{"className":"hljs-property","children":"classList"}],".",["$","span",null,{"className":"hljs-title function_","children":"add"}],"(",["$","span",null,{"className":"hljs-string","children":"\"message-ball\""}],");\n  div.",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(",["$","span",null,{"className":"hljs-string","children":"\"안녕하세요!\""}],");\n});\n"]}]}],"\n",["$","p",null,{"children":"showCircle(cx, cy, radius, callback)은 천천히 커지는 원을 만드는 함수라고 치자."}],"\n",["$","p",null,{"children":"함수 내부에서 해당 callback을 이용해서 원을 다 만든 후에 요소에 \"안녕하세요!\"를 그리는 함수를 실행하도록 할 수 있다."}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["콜백을 활용하면 해당 task를 Microtask Queue가 아니라 Macrotask queue로 task를 이동시킨다. ( ",["$","code",null,{"children":"setTimeout"}],"의 동작 방식 )\nMicrotask Queue와 Macrotask queue의 차이는 이 글의 하단 부분에서 이해할 수 있다."]}],"\n"]}],"\n",["$","h2",null,{"id":"17Promise","children":["$","mark",null,{"style":{"background":"#FFB86CA6"},"children":"Promise"}]}],"\n",["$","p",null,{"children":"시간이 얼마나 걸리던 상관없이 약속한 결과를 만들어내는 \"제작 코드\"가 준비되었을 때, 모든 \"소비 코드\"가 결과를 사용할 수 있도록 해준다."}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"제작 코드"}]}],"\n",["$","p",null,{"children":"원격에서 스크립트를 불러오는 것 같은 시간이 걸리는 일"}],"\n"]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"소비 코드"}]}],"\n",["$","p",null,{"children":"제작 코드의 결과를 기다렸다가 이를 소비한다. 소비의 주체(함수)는 여럿이 될 수 있다."}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// executor (제작 코드, '가수')"}],"\n});\n\n",["$","span",null,{"className":"hljs-comment","children":"// promise.then/catch/finally 등등"}],"\n"]}]}],"\n",["$","h3",null,{"id":"18executor 함수","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"executor 함수"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"new Promise"}],"에 전달되는 콜백은 executor라고 해서 ",["$","code",null,{"children":"new Promise"}],"가 만들어질 때 자동으로 실행되며 결과를 최종적으로 만들어내는 제작 코드를 포함한다."]}],"\n",["$","p",null,{"children":"executor에서는 resolve, reject를 신경 쓰지 않고 코드를 작성하면 되는데 상황에 따라 resolve, reject 중 하나를 호출해야 한다."}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"resolve(value) - 일이 성공적으로 끝났을 때 그 결과를 나타내는 value와 함께 호출"}],"\n",["$","li",null,{"children":["reject(error) - 에러 발생 시 에러 객체를 나타내는 ",["$","code",null,{"children":"error"}],"와 함께 호출"]}],"\n"]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241107200211.png","alt":""}]}],"\n",["$","p",null,{"children":"new Promise 생성자가 반환하는 promise 객체는 PromiseState, PromiseResult라는 내부 프로퍼티를 가진다."}],"\n",["$","p",null,{"children":"resolve, reject 둘 다 일어나지 않았을 때"}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241107195926.png","alt":""}]}],"\n",["$","p",null,{"children":"resolve일 때"}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241107195831.png","alt":""}]}],"\n",["$","p",null,{"children":"reject일 때"}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241107200104.png","alt":""}]}],"\n",["$","h4",null,{"id":"19executor 예시","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"executor 예시"}]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["executor는 ",["$","code",null,{"children":"new Promise"}],"에 의해 자동으로 그리고 즉각적으로 호출된다."]}],"\n",["$","li",null,{"children":["executor는 인자로 ",["$","code",null,{"children":"resolve"}],"와 ",["$","code",null,{"children":"reject"}]," 함수를 받는다. 이 함수들은 자바스크립트 엔진이 미리 정의한 함수이므로 개발자가 따로 만들 필요가 없다. 다만, ",["$","code",null,{"children":"resolve"}],"나 ",["$","code",null,{"children":"reject"}]," 중 하나는 반드시 호출해야 합니다."]}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// Promise가 만들어지면 executor 함수는 자동으로 실행된다."}],"\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// 1초 뒤에 일이 성공적으로 끝났다는 신호가 전달되면서 result는 '완료'가 된다."}],"\n  ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-string","children":"\"완료\""}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n});\n"]}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241107200545.png","alt":""}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// 1초 뒤에 에러와 함께 실행이 종료되었다는 신호를 보냅니다."}],"\n  ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],")), ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n});\n"]}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241107200740.png","alt":""}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"resolve"}],"나 ",["$","code",null,{"children":"reject"}],"가 완료된 ",["$","code",null,{"children":"Promise"}],"를 ",["$","code",null,{"children":"settled Promise"}]," 라고 부른다."]}],"\n",["$","h3",null,{"id":"20주의사항","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"주의사항"}]}],"\n",["$","h4",null,{"id":"211. 한번 처리된 Promise는 바뀌지 않는다.","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"1. 한번 처리된 Promise는 바뀌지 않는다."}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n  ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-string","children":"\"완료\""}],");\n\n  ",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"…\""}],")); ",["$","span",null,{"className":"hljs-comment","children":"// 무시됨"}],"\n  ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-string","children":"\"…\""}],")); ",["$","span",null,{"className":"hljs-comment","children":"// 무시됨"}],"\n});\n"]}]}],"\n",["$","h4",null,{"id":"222. Error 객체와 함께 reject해야 한다.","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"2. Error 객체와 함께 reject해야 한다."}]}],"\n",["$","h4",null,{"id":"233. 꼭 Promise가 비동기적인 것을 다루지 않아도 된다.","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"3. 꼭 Promise가 비동기적인 것을 다루지 않아도 된다."}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// 일을 끝마치는 데 시간이 들지 않음"}],"\n  ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"123"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// 결과(123)를 즉시 resolve에 전달함"}],"\n});\n"]}]}],"\n",["$","p",null,{"children":"위 방식대로 하면 즉시 이행 상태가 된다."}],"\n",["$","h4",null,{"id":"244. PromiseState와 PromiseResult는 내부 프로퍼티이기 때문에 직접 접근할 수 있다.","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"4. PromiseState와 PromiseResult는 내부 프로퍼티이기 때문에 직접 접근할 수 있다."}]}],"\n",["$","h3",null,{"id":"25소비함수","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"소비함수"}]}],"\n",["$","p",null,{"children":["소비 함수는 ",["$","code",null,{"children":".then"}],", ",["$","code",null,{"children":".catch"}],", ",["$","code",null,{"children":".finally"}]," 메서드를 사용해 등록된다."]}],"\n",["$","h4",null,{"id":"26.then","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":".then"}]}],"\n",["$","p",null,{"children":"Promise fulfilled 혹은 rejected가 완료되면 이후에 실행되는 소비함수"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n  ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-string","children":"\"완료!\""}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n});\n\n",["$","span",null,{"className":"hljs-comment","children":"// resolve 함수는 .then의 첫 번째 함수(인수)를 실행합니다."}],"\npromise.",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(\n  ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"result"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(result), ",["$","span",null,{"className":"hljs-comment","children":"// 1초 후 \"완료!\"를 출력"}],"\n  ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"error"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(error), ",["$","span",null,{"className":"hljs-comment","children":"// 실행되지 않음"}],"\n);\n"]}]}],"\n",["$","p",null,{"children":"성공 처리만 하고 싶다면 두번째 인수를 생략하면 된다."}],"\n",["$","h4",null,{"id":"27.catch","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":".catch"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":".then(null, 에러처리함수)"}]," 형태로 에러만을 처리해도 되지만 ",["$","code",null,{"children":".catch"}],"를 활용해서 간결하게 표현할 수 있다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],")), ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n});\n\n",["$","span",null,{"className":"hljs-comment","children":"// .catch(f)는 promise.then(null, f)과 동일하게 작동합니다"}],"\npromise.",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(alert); ",["$","span",null,{"className":"hljs-comment","children":"// 1초 뒤 \"Error: 에러 발생!\" 출력"}],"\n"]}]}],"\n",["$","h4",null,{"id":"28.finally","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":".finally"}]}],"\n",["$","p",null,{"children":"Promise가 처리되면 항상 실행되는 메소드"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-comment","children":"/* 시간이 걸리는 어떤 일을 수행하고, 그 후 resolve, reject를 호출함 */"}],"\n})\n  ",["$","span",null,{"className":"hljs-comment","children":"// 성공·실패 여부와 상관없이 Promise가 처리되면 실행됨"}],"\n  .",["$","span",null,{"className":"hljs-title function_","children":"finally"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," 로딩 인디케이터 중지)\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":[["$","span",null,{"className":"hljs-params","children":"result"}]," =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(result), ",["$","span",null,{"className":"hljs-function","children":[["$","span",null,{"className":"hljs-params","children":"error"}]," =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(error));\n"]}]}],"\n",["$","p",null,{"children":"finally는 인수가 없으며 자동으로 다음 핸들러에 결과 혹은 에러를 전달한다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-string","children":"\"결과\""}],"), ",["$","span",null,{"className":"hljs-number","children":"2000"}],");\n})\n  .",["$","span",null,{"className":"hljs-title function_","children":"finally"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"Promise가 준비되었습니다.\""}],"))\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"result"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(result)); ",["$","span",null,{"className":"hljs-comment","children":"// <-- .then에서 result를 다룰 수 있음"}],"\n\n",["$","span",null,{"className":"hljs-comment","children":"// 2초 후"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// \"Promise가 준비되었습니다.\""}],"\n",["$","span",null,{"className":"hljs-comment","children":"// \"결과\""}],"\n\n",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-keyword","children":"throw"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],");\n})\n  .",["$","span",null,{"className":"hljs-title function_","children":"finally"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"Promise가 준비되었습니다.\""}],"))\n  .",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"err"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(err)); ",["$","span",null,{"className":"hljs-comment","children":"// <-- .catch에서 에러 객체를 다룰 수 있음"}],"\n\n",["$","span",null,{"className":"hljs-comment","children":"// \"Promise가 준비되었습니다.\""}],"\n",["$","span",null,{"className":"hljs-comment","children":"// \"에러 발생\""}],"\n"]}]}],"\n",["$","h4",null,{"id":"29실제 사용 예시","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"실제 사용 예시"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-params","children":"src, callback"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," script = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"\"script\""}],");\n  script.",["$","span",null,{"className":"hljs-property","children":"src"}]," = src;\n\n  script.",["$","span",null,{"className":"hljs-property","children":"onload"}]," = ",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"callback"}],"(",["$","span",null,{"className":"hljs-literal","children":"null"}],", script);\n  script.",["$","span",null,{"className":"hljs-property","children":"onerror"}]," = ",["$","span",null,{"className":"hljs-function","children":"() =>"}],"\n    ",["$","span",null,{"className":"hljs-title function_","children":"callback"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":["`",["$","span",null,{"className":"hljs-subst","children":"$${src}"}],"를 불러오는 도중에 에러가 발생함`"]}],"));\n\n  ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"head"}],".",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(script);\n}\n"]}]}],"\n",["$","p",null,{"children":"위 코드는 콜백 방식이다. onload와 onerror 안에 직접 callback을 박아 넣어서 구현했다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-params","children":"src"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," script = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"\"script\""}],");\n    script.",["$","span",null,{"className":"hljs-property","children":"src"}]," = src;\n\n    script.",["$","span",null,{"className":"hljs-property","children":"onload"}]," = ",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(script);\n    script.",["$","span",null,{"className":"hljs-property","children":"onerror"}]," = ",["$","span",null,{"className":"hljs-function","children":"() =>"}],"\n      ",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":["`",["$","span",null,{"className":"hljs-subst","children":"$${src}"}],"를 불러오는 도중에 에러가 발생함`"]}],"));\n\n    ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"head"}],".",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(script);\n  });\n}\n"]}]}],"\n",["$","p",null,{"children":"Promise를 사용하면 callback 로직을 밖으로 뺄 수 있다. 안으로 넘겨주는 인자만 받을 수 있으며 다음과 같이 사용할 수 있다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(\n  ",["$","span",null,{"className":"hljs-string","children":"\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.11/lodash.js\""}],",\n);\n\npromise.",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(\n  ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"script"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":["`",["$","span",null,{"className":"hljs-subst","children":"$${script.src}"}],"을 불러왔습니다!`"]}],"),\n  ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"error"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":["`Error: ",["$","span",null,{"className":"hljs-subst","children":"$${error.message}"}],"`"]}],"),\n);\n\npromise.",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"script"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"또 다른 핸들러...\""}],"));\n"]}]}],"\n",["$","p",null,{"children":"이제 then, catch, finally 메소드를 활용해서 소비 함수만 던져주면 저장된 promise에서 알아서 소비 함수 안에 인자를 넣어서 실행시킨다."}],"\n",["$","h3",null,{"id":"30Promise Chaining","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"Promise Chaining"}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241107204412.png","alt":""}]}],"\n",["$","p",null,{"children":"Promise를 연결해서 비동기 작업을 차례대로 처리하는 방법"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n  ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// (*)"}],"\n})\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"result"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// (**)"}],"\n\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(result); ",["$","span",null,{"className":"hljs-comment","children":"// 1"}],"\n\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," result * ",["$","span",null,{"className":"hljs-number","children":"2"}],";\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"result"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// (***)"}],"\n\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(result); ",["$","span",null,{"className":"hljs-comment","children":"// 2"}],"\n\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," result * ",["$","span",null,{"className":"hljs-number","children":"2"}],";\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"result"}],") {\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(result); ",["$","span",null,{"className":"hljs-comment","children":"// 4"}],"\n\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," result * ",["$","span",null,{"className":"hljs-number","children":"2"}],";\n  });\n"]}]}],"\n",["$","p",null,{"children":["위의 코드가 가능한 이유는 ",["$","code",null,{"children":".then"}],"이 Promise를 반환하기 때문이다. ",["$","code",null,{"children":".then"}],"의 리턴값이 해당 Promise의 ",["$","code",null,{"children":"result"}],"가 된다."]}],"\n",["$","h4",null,{"id":"31또 다른 Promise를 소비 함수 안에서 반환하기","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"또 다른 Promise를 소비 함수 안에서 반환하기"}]}],"\n",["$","p",null,{"children":["기본적으로 ",["$","code",null,{"children":".then"}],"이 리턴할 값을 ",["$","code",null,{"children":"Promise"}],"로 만들어서 리턴하지만 ",["$","code",null,{"children":".then"}],"에서 ",["$","code",null,{"children":"Promise"}],"를 만들어서 리턴시킬 수도 있다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n  ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n})\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"result"}],") {\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(result); ",["$","span",null,{"className":"hljs-comment","children":"// 1"}],"\n\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n      ",["$","span",null,{"className":"hljs-comment","children":"// (*)"}],"\n      ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(result * ",["$","span",null,{"className":"hljs-number","children":"2"}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n    });\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"result"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// (**)"}],"\n\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(result); ",["$","span",null,{"className":"hljs-comment","children":"// 2"}],"\n\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n      ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(result * ",["$","span",null,{"className":"hljs-number","children":"2"}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n    });\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"result"}],") {\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(result); ",["$","span",null,{"className":"hljs-comment","children":"// 4"}],"\n  });\n"]}]}],"\n",["$","h4",null,{"id":"32실제 예시","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"실제 예시"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/one.js\""}],")\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"script"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/two.js\""}],");\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"script"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/three.js\""}],");\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"script"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// 불러온 스크립트 안에 정의된 함수를 호출해"}],"\n    ",["$","span",null,{"className":"hljs-comment","children":"// 실제로 스크립트들이 정상적으로 로드되었는지 확인한다."}],"\n    ",["$","span",null,{"className":"hljs-title function_","children":"one"}],"();\n    ",["$","span",null,{"className":"hljs-title function_","children":"two"}],"();\n    ",["$","span",null,{"className":"hljs-title function_","children":"three"}],"();\n  });\n"]}]}],"\n",["$","p",null,{"children":"이제 loadScript를 개선할 수 있다."}],"\n",["$","p",null,{"children":"Promise의 executor는 즉시 실행되고 다음 메소드로 연결된 소비 함수가 실행되기 때문에 위의 Promise를 리턴하는 함수 loadScript에 바로 메소드를 연결해줘도 된다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/one.js\""}],").",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"script1"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/two.js\""}],").",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"script2"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/three.js\""}],").",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"script3"}],") =>"]}]," {\n      ",["$","span",null,{"className":"hljs-comment","children":"// 여기서 script1, script2, script3에 정의된 함수를 사용할 수 있다."}],"\n      ",["$","span",null,{"className":"hljs-title function_","children":"one"}],"();\n      ",["$","span",null,{"className":"hljs-title function_","children":"two"}],"();\n      ",["$","span",null,{"className":"hljs-title function_","children":"three"}],"();\n    });\n  });\n});\n"]}]}],"\n",["$","p",null,{"children":"하지만 이는 다른 콜백지옥을 만들게 된다."}],"\n",["$","p",null,{"children":"이때 가장 내부에 있는 loadScript는 외부 스코프에 전부 접근할 수 있어서 필요에 의해선 위 코드처럼 사용하는 게 좋을 수도 있다."}],"\n",["$","h4",null,{"id":"33참고 사항","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"참고 사항"}]}],"\n",["$","h5",null,{"id":"34thenable","children":["$","mark",null,{"style":{"background":"#ABF7F7A6"},"children":"thenable"}]}],"\n",["$","p",null,{"children":["핸들러(executor, 소비함수 등등)는 Promise가 아닌 ",["$","code",null,{"children":"thenable"}]," 객체를 반환하기도 한다."]}],"\n",["$","p",null,{"children":"thenable 객체는 서드파티 라이브러리가 Promise와 호환 가능한 자체 객체를 구현할 수 있다는 점에서 나오게 되었다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"class"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Thenable"}]," {\n  ",["$","span",null,{"className":"hljs-title function_","children":"constructor"}],"(",["$","span",null,{"className":"hljs-params","children":"num"}],") {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"num"}]," = num;\n  }\n  ",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(resolve); ",["$","span",null,{"className":"hljs-comment","children":"// 아래 코드에서 alert를 넣었으므로 function() { [native code] }이 바로 일단 나온다."}],"\n    ",["$","span",null,{"className":"hljs-comment","children":"// 1초 후 this.num*2와 함께 이행됨"}],"\n    ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"num"}]," * ",["$","span",null,{"className":"hljs-number","children":"2"}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// (**)"}],"\n  }\n}\n\n",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],"))\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"result"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Thenable"}],"(result); ",["$","span",null,{"className":"hljs-comment","children":"// (*)"}],"\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(alert); ",["$","span",null,{"className":"hljs-comment","children":"// 1,000밀리 초 후 2를 보여줌"}],"\n"]}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241110210716.png","alt":""}]}],"\n",["$","h3",null,{"id":"35fetch와 체이닝 함께 응용","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"fetch와 체이닝 함께 응용"}]}],"\n",["$","p",null,{"children":["프론트 단에서 네트워크 요청 시 ",["$","code",null,{"children":"Promise"}],"를 자주 사용한다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(url);\n"]}]}],"\n",["$","p",null,{"children":["위 코드를 실행하면 ",["$","code",null,{"children":"url"}],"에 네트워크 요청을 보내고 ",["$","code",null,{"children":"Promise"}],"를 반환한다."]}],"\n",["$","p",null,{"children":["fetch는 ",["$","code",null,{"children":"resolve"}],"시 ",["$","code",null,{"children":"url"}],"로 연결해서 얻은 자원을 핸들러로 넘겨준다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/user.json\""}],")\n  ",["$","span",null,{"className":"hljs-comment","children":"// 원격 서버가 응답하면 .then 아래 코드가 실행됩니다."}],"\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-comment","children":"// response.text()는 응답 텍스트 전체가 다운로드되면"}],"\n    ",["$","span",null,{"className":"hljs-comment","children":"// 응답 텍스트를 새로운 이행 Promise를 만들고, 이를 반환합니다."}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," response.",["$","span",null,{"className":"hljs-title function_","children":"text"}],"();\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"text"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-comment","children":"// 원격에서 받아온 파일의 내용"}],"\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(text); ",["$","span",null,{"className":"hljs-comment","children":"// {\"name\": \"Violet-Bora-Lee\", \"isAdmin\": true}"}],"\n  });\n"]}]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["원격 서버가 헤더와 함께 응답을 보내면 ",["$","code",null,{"children":"Promise"}],"는 ",["$","code",null,{"children":"response"}]," 객체와 함께 ",["$","code",null,{"children":"fulfilled"}],"된다."]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"response"}]," 전체가 완전히 다운로드되기 전에 Promise는 ",["$","code",null,{"children":"fulfilled"}],"가 된다."]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"response"}],"가 다 다운로드 되고 전체를 읽기 위해서는 ",["$","code",null,{"children":"response.text()"}],"를 호출해야 한다. ( ",["$","code",null,{"children":"response.text()"}],"는 서버에서 전송한 텍스트 전체가 다운로드되면 이 텍스트를 ",["$","code",null,{"children":"result"}],"값으로 갖는 ",["$","code",null,{"children":"fulfilled"}],"된 ",["$","code",null,{"children":"Promise"}],"를 반환한다. )"]}],"\n"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"response.json()"}],"을 사용하면 데이터를 읽고 ",["$","code",null,{"children":"JSON"}],"으로 파싱할 수 있다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// 위 코드와 동일한 기능을 하지만, response.json()은 원격 서버에서 불러온 내용을 JSON으로 변경해줍니다."}],"\n",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/user.json\""}],")\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"())\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"user"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(user.",["$","span",null,{"className":"hljs-property","children":"name"}],")); ",["$","span",null,{"className":"hljs-comment","children":"// Violet-Bora-Lee, 이름만 성공적으로 가져옴"}],"\n"]}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"fetch"}],"를 순차적으로 보내는 예시를 확인해보자."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// user.json에 요청을 보냅니다."}],"\n",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/user.json\""}],")\n  ",["$","span",null,{"className":"hljs-comment","children":"// 응답받은 내용을 json으로 불러옵니다."}],"\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"())\n  ",["$","span",null,{"className":"hljs-comment","children":"// GitHub에 요청을 보냅니다."}],"\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"user"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":["`https://api.github.com/users/",["$","span",null,{"className":"hljs-subst","children":"$${user.name}"}],"`"]}],"))\n  ",["$","span",null,{"className":"hljs-comment","children":"// 응답받은 내용을 json 형태로 불러옵니다."}],"\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"())\n  ",["$","span",null,{"className":"hljs-comment","children":"// 3초간 아바타 이미지(githubUser.avatar_url)를 보여줍니다."}],"\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"githubUser"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," img = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"\"img\""}],");\n    img.",["$","span",null,{"className":"hljs-property","children":"src"}]," = githubUser.",["$","span",null,{"className":"hljs-property","children":"avatar_url"}],";\n    img.",["$","span",null,{"className":"hljs-property","children":"className"}]," = ",["$","span",null,{"className":"hljs-string","children":"\"promise-avatar-example\""}],";\n    ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"body"}],".",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(img);\n\n    ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," img.",["$","span",null,{"className":"hljs-title function_","children":"remove"}],"(), ",["$","span",null,{"className":"hljs-number","children":"3000"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// (*)"}],"\n  });\n"]}]}],"\n",["$","p",null,{"children":["만약 마지막 then에서 무언가를 더 하고 싶다면 ",["$","code",null,{"children":"Promise"}],"를 리턴해주면 된다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/user.json\""}],")\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"())\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"user"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":["`https://api.github.com/users/",["$","span",null,{"className":"hljs-subst","children":"$${user.name}"}],"`"]}],"))\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"())\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(\n    ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"githubUser"}],") =>"]}],"\n      ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n        ",["$","span",null,{"className":"hljs-comment","children":"// (*)"}],"\n        ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," img = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"\"img\""}],");\n        img.",["$","span",null,{"className":"hljs-property","children":"src"}]," = githubUser.",["$","span",null,{"className":"hljs-property","children":"avatar_url"}],";\n        img.",["$","span",null,{"className":"hljs-property","children":"className"}]," = ",["$","span",null,{"className":"hljs-string","children":"\"promise-avatar-example\""}],";\n        ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"body"}],".",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(img);\n\n        ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n          img.",["$","span",null,{"className":"hljs-title function_","children":"remove"}],"();\n          ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(githubUser); ",["$","span",null,{"className":"hljs-comment","children":"// (**)"}],"\n        }, ",["$","span",null,{"className":"hljs-number","children":"3000"}],");\n      }),\n  )\n  ",["$","span",null,{"className":"hljs-comment","children":"// 3초 후 동작함"}],"\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"githubUser"}],") =>"]}],"\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":["`",["$","span",null,{"className":"hljs-subst","children":"$${githubUser.name}"}],"의 이미지를 성공적으로 출력하였습니다.`"]}],"),\n  );\n"]}]}],"\n",["$","p",null,{"children":"위의 코드는 다음과 같이 정리해서 가독성을 높일 수 있다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadJson"}],"(",["$","span",null,{"className":"hljs-params","children":"url"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(url).",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"());\n}\n\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadGithubUser"}],"(",["$","span",null,{"className":"hljs-params","children":"name"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":["`https://api.github.com/users/",["$","span",null,{"className":"hljs-subst","children":"$${name}"}],"`"]}],").",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}],"\n    response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"(),\n  );\n}\n\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"showAvatar"}],"(",["$","span",null,{"className":"hljs-params","children":"githubUser"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," img = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"\"img\""}],");\n    img.",["$","span",null,{"className":"hljs-property","children":"src"}]," = githubUser.",["$","span",null,{"className":"hljs-property","children":"avatar_url"}],";\n    img.",["$","span",null,{"className":"hljs-property","children":"className"}]," = ",["$","span",null,{"className":"hljs-string","children":"\"promise-avatar-example\""}],";\n    ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"body"}],".",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(img);\n\n    ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n      img.",["$","span",null,{"className":"hljs-title function_","children":"remove"}],"();\n      ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(githubUser);\n    }, ",["$","span",null,{"className":"hljs-number","children":"3000"}],");\n  });\n}\n\n",["$","span",null,{"className":"hljs-comment","children":"// 함수를 이용하여 다시 동일 작업 수행"}],"\n",["$","span",null,{"className":"hljs-title function_","children":"loadJson"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/user.json\""}],")\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"user"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadGithubUser"}],"(user.",["$","span",null,{"className":"hljs-property","children":"name"}],"))\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(showAvatar)\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"githubUser"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":["`Finished showing ",["$","span",null,{"className":"hljs-subst","children":"$${githubUser.name}"}],"`"]}],"));\n",["$","span",null,{"className":"hljs-comment","children":"// ..."}],"\n"]}]}],"\n",["$","p",null,{"children":"결론적으로 Promise Chaining은 다음의 구조이다."}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241107212119.png","alt":""}]}],"\n",["$","h3",null,{"id":"36Promise와 Error Handling","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"Promise와 Error Handling"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// 없는 url일 경우"}],"\n",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":"\"https://no-such-server.blabla\""}],") ",["$","span",null,{"className":"hljs-comment","children":"// 거부"}],"\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"())\n  .",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"err"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(err));\n",["$","span",null,{"className":"hljs-comment","children":"// TypeError: failed to fetch ( 출력되는 내용은 다를 수 있음 )"}],"\n"]}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Promise"}],"가 거부되면 제어 흐름이 제일 가까운 ",["$","code",null,{"children":"rejection"}]," 핸들러로 넘어간다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// JSON의 형식이 잘못되면"}],"\n",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/article/promise-chaining/user.json\""}],")\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"())\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"user"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":["`https://api.github.com/users/",["$","span",null,{"className":"hljs-subst","children":"$${user.name}"}],"`"]}],"))\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"())\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(\n    ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"githubUser"}],") =>"]}],"\n      ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n        ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," img = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"\"img\""}],");\n        img.",["$","span",null,{"className":"hljs-property","children":"src"}]," = githubUser.",["$","span",null,{"className":"hljs-property","children":"avatar_url"}],";\n        img.",["$","span",null,{"className":"hljs-property","children":"className"}]," = ",["$","span",null,{"className":"hljs-string","children":"\"promise-avatar-example\""}],";\n        ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"body"}],".",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(img);\n\n        ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n          img.",["$","span",null,{"className":"hljs-title function_","children":"remove"}],"();\n          ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(githubUser);\n        }, ",["$","span",null,{"className":"hljs-number","children":"3000"}],");\n      }),\n  )\n  .",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"error"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(error.",["$","span",null,{"className":"hljs-property","children":"message"}],"));\n"]}]}],"\n",["$","p",null,{"children":"체인 끝에 catch를 붙이면 위쪽 Promise 중 하나라도 거부되면 해당 catch가 에러를 잡게 된다."}],"\n",["$","h4",null,{"id":"37암시적 try...catch","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"암시적 try...catch"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Promise executor"}],"와 ",["$","code",null,{"children":"Promise"}]," 핸들러 코드 주위에는 암시적 ",["$","code",null,{"children":"try...catch"}],"가 존재한다. 예외가 발생하면 암시적 ",["$","code",null,{"children":"try...catch"}],"에서 예외를 잡고 이를 ",["$","code",null,{"children":"reject"}],"처럼 다룬다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// 아래 두 코드는 같은 기능을 한다."}],"\n",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-keyword","children":"throw"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],");\n}).",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(alert); ",["$","span",null,{"className":"hljs-comment","children":"// Error: 에러 발생!"}],"\n\n",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],"));\n}).",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(alert); ",["$","span",null,{"className":"hljs-comment","children":"// Error: 에러 발생!"}],"\n"]}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"throw"}],"를 사용해서 에러를 던지면 이 자체가 거부된 ",["$","code",null,{"children":"Promise"}],"를 의미하게 된다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-string","children":"\"OK\""}],");\n})\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"result"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"throw"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],"); ",["$","span",null,{"className":"hljs-comment","children":"// Promise가 거부됨"}],"\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"error"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(error);\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-number","children":"3"}],";\n  }); ",["$","span",null,{"className":"hljs-comment","children":"// Error: 에러 발생!"}],"\n"]}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241110214430.png","alt":""}]}],"\n",["$","p",null,{"children":["해당 암시적 ",["$","code",null,{"children":"try... catch"}],"는 핸들러 위쪽에서 발생한 비정상 에러 또한 잡는다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-string","children":"\"OK\""}],");\n})\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"result"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-title function_","children":"blabla"}],"(); ",["$","span",null,{"className":"hljs-comment","children":"// 존재하지 않는 함수"}],"\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(alert); ",["$","span",null,{"className":"hljs-comment","children":"// ReferenceError: blabla is not defined"}],"\n"]}]}],"\n",["$","p",null,{"children":["단 동기적 에러가 암시적 ",["$","code",null,{"children":"try...catch"}],"에서 처리되는 것이다. 다음과 같이 비동기 코드가 executor 내부에 존재하고 내부에 에러가 발생한다면 해당 에러를 감지할 수 없다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n  ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"throw"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],");\n  }, ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n}).",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(alert);\n"]}]}],"\n",["$","h4",null,{"id":"38다시 던지기","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"다시 던지기"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":".catch"}],"가 정상적으로 종료되면 ",["$","code",null,{"children":"fulfilled"}],"인 ",["$","code",null,{"children":"Promise"}],"를 리턴할 것이다. 그래서 다음과 같은 로직이 가능하다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// 실행 순서: catch -> then"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-keyword","children":"throw"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],");\n})\n  .",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"error"}],") {\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러가 잘 처리되었습니다. 정상적으로 실행이 이어집니다.\""}],");\n    ",["$","span",null,{"className":"hljs-comment","children":"// catch 이후 리턴되는 fulfilled상태의 Promise가 .then을 만난다."}],"\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"다음 핸들러가 실행됩니다.\""}],"));\n"]}]}],"\n",["$","p",null,{"children":"위를 활용해서 에러 핸들링을 세분화시킬 수 있다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// 실행 순서: catch -> catch"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-keyword","children":"throw"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],");\n})\n  .",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"error"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// (*)"}],"\n\n    ",["$","span",null,{"className":"hljs-comment","children":"// URIError만 처리하는 소비 함수"}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (error ",["$","span",null,{"className":"hljs-keyword","children":"instanceof"}]," ",["$","span",null,{"className":"hljs-title class_","children":"URIError"}],") {\n      ",["$","span",null,{"className":"hljs-comment","children":"// 에러 처리"}],"\n    } ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," {\n      ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"처리할 수 없는 에러\""}],");\n\n      ",["$","span",null,{"className":"hljs-keyword","children":"throw"}]," error; ",["$","span",null,{"className":"hljs-comment","children":"// URIError가 아닐 경우 다음 에러 핸들러로 전달"}],"\n    }\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"/* 여기는 실행되지 않습니다. */"}],"\n  })\n  .",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"error"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-comment","children":"// (**)"}],"\n\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":["`알 수 없는 에러가 발생함: ",["$","span",null,{"className":"hljs-subst","children":"$${error}"}],"`"]}],");\n    ",["$","span",null,{"className":"hljs-comment","children":"// 반환값이 없음 => 실행이 계속됨"}],"\n  });\n"]}]}],"\n",["$","h4",null,{"id":"39처리되지 못한 거부","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"처리되지 못한 거부"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-title function_","children":"noSuchFunction"}],"(); ",["$","span",null,{"className":"hljs-comment","children":"// 존재하지 않는 함수를 호출하기 때문에 에러가 발생함"}],"\n}).",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n  ",["$","span",null,{"className":"hljs-comment","children":"// 성공상태의 Promise를 처리하는 핸들러. 한 개 혹은 여러 개가 있을 수 있음"}],"\n}); ",["$","span",null,{"className":"hljs-comment","children":"// 끝에 .catch가 없음!"}],"\n"]}]}],"\n",["$","p",null,{"children":"예외를 처리해 줄 핸들러가 없으면 에러가 갇혀 버린다."}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"try...catch"}],"에서 일반적인 에러가 발생하고 이를 처리하지 못했을 때 스크립트가 죽고 콘솔 창에 메시지가 출력되는데\n",["$","code",null,{"children":"rejected Promise"}],"가 처리되지 않아도 동일한 일이 발생한다."]}],"\n",["$","p",null,{"children":["JS 엔진은 ",["$","code",null,{"children":"Promise reject"}],"를 추적하다가 에러가 갇힌 걸 확인하면 전역 에러를 생성한다."]}],"\n",["$","p",null,{"children":["브라우저에서는 ",["$","code",null,{"children":"unhandledrejection"}]," 이벤트로 이런 에러를 처리한다. (HTML 명세서에 정의된 표준 이벤트이다.)"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-variable language_","children":"window"}],".",["$","span",null,{"className":"hljs-title function_","children":"addEventListener"}],"(",["$","span",null,{"className":"hljs-string","children":"\"unhandledrejection\""}],", ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"event"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// unhandledrejection 이벤트엔 두 개의 특수 프로퍼티가 있습니다."}],"\n  ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(event.",["$","span",null,{"className":"hljs-property","children":"promise"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// [object Promise] - 에러를 생성하는 Promise"}],"\n  ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(event.",["$","span",null,{"className":"hljs-property","children":"reason"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// Error: 에러 발생! - 처리하지 못한 에러 객체"}],"\n});\n\n",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"throw"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],");\n}); ",["$","span",null,{"className":"hljs-comment","children":"// 에러를 처리할 수 있는 .catch 핸들러가 없음"}],"\n"]}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241107214313.png","alt":""}]}],"\n",["$","h3",null,{"id":"40Promise API","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"Promise API"}]}],"\n",["$","h4",null,{"id":"41Promise.all","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"Promise.all"}]}],"\n",["$","p",null,{"children":"여러 개의 Promise를 동시에 실행시키고 모든 Promise가 준비될 때까지 기다린다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// let promise = Promise.all([...promises...]);"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// Promise인 배열을 받고 새로운 Promise를 반환한다."}],"\n\n",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"all"}],"([\n  ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve"}],") =>"]}]," ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],"), ",["$","span",null,{"className":"hljs-number","children":"3000"}],")), ",["$","span",null,{"className":"hljs-comment","children":"// 1"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve"}],") =>"]}]," ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"2"}],"), ",["$","span",null,{"className":"hljs-number","children":"2000"}],")), ",["$","span",null,{"className":"hljs-comment","children":"// 2"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve"}],") =>"]}]," ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"3"}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],")), ",["$","span",null,{"className":"hljs-comment","children":"// 3"}],"\n]).",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(alert); ",["$","span",null,{"className":"hljs-comment","children":"// Promise 전체가 처리되면 1, 2, 3이 반환됩니다. 각 Promise는 배열을 구성하는 요소가 됩니다."}],"\n"]}]}],"\n",["$","p",null,{"children":"각 Promise 요청이 다 끝나면 배열의 순서에 따라서 결과 값이 또 다른 배열 형태로 소비 함수로 전달된다."}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241108150808.png","alt":""}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"fetch"}],"는 인수에 존재하는 url에 요청을 보내서 ",["$","code",null,{"children":"response"}],"를 ",["$","code",null,{"children":"Promise"}]," 형태로 리턴하는 함수이다. 이를 활용한 예제를 살펴보면"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," urls = [\n  ",["$","span",null,{"className":"hljs-string","children":"\"https://api.github.com/users/iliakan\""}],",\n  ",["$","span",null,{"className":"hljs-string","children":"\"https://api.github.com/users/Violet-Bora-Lee\""}],",\n  ",["$","span",null,{"className":"hljs-string","children":"\"https://api.github.com/users/jeresig\""}],",\n];\n\n",["$","span",null,{"className":"hljs-comment","children":"// fetch를 사용해 url을 Promise로 매핑합니다."}],"\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," requests = urls.",["$","span",null,{"className":"hljs-title function_","children":"map"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"url"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(url));\n\n",["$","span",null,{"className":"hljs-comment","children":"// Promise.all은 모든 작업이 이행될 때까지 기다립니다."}],"\n",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"all"}],"(requests).",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"responses"}],") =>"]}],"\n  responses.",["$","span",null,{"className":"hljs-title function_","children":"forEach"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":["`",["$","span",null,{"className":"hljs-subst","children":"$${response.url}"}],": ",["$","span",null,{"className":"hljs-subst","children":"$${response.status}"}],"`"]}],")),\n);\n"]}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241108151347.png","alt":""}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Promise.all"}],"을 이용해서 요청 응답을 배열로 받은 후 그 배열을 다시 ",["$","code",null,{"children":"Promise.all"}],"을 이용해서 ",["$","code",null,{"children":"json()"}],"으로 파싱, 다음 소비 함수에서 해당 파싱된 데이터를 콘솔 창에 띄우는 로직이다."]}],"\n",["$","p",null,{"children":"결론적으로 다음과 같이 중간에 소비 함수의 로직을 늘릴 수도 있다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," names = [",["$","span",null,{"className":"hljs-string","children":"\"iliakan\""}],", ",["$","span",null,{"className":"hljs-string","children":"\"Violet-Bora-Lee\""}],", ",["$","span",null,{"className":"hljs-string","children":"\"jeresig\""}],"];\n\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," requests = names.",["$","span",null,{"className":"hljs-title function_","children":"map"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"name"}],") =>"]}],"\n  ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":["`https://api.github.com/users/",["$","span",null,{"className":"hljs-subst","children":"$${name}"}],"`"]}],"),\n);\n\n",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"all"}],"(requests)\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"responses"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-comment","children":"// 모든 응답이 성공적으로 이행되었습니다."}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"for"}]," (",["$","span",null,{"className":"hljs-keyword","children":"let"}]," response ",["$","span",null,{"className":"hljs-keyword","children":"of"}]," responses) {\n      ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":["`",["$","span",null,{"className":"hljs-subst","children":"$${response.url}"}],": ",["$","span",null,{"className":"hljs-subst","children":"$${response.status}"}],"`"]}],"); ",["$","span",null,{"className":"hljs-comment","children":"// 모든 url의 응답코드가 200입니다."}],"\n    }\n\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," responses;\n  })\n  ",["$","span",null,{"className":"hljs-comment","children":"// 응답 메시지가 담긴 배열을 response.json()로 매핑해, 내용을 읽습니다."}],"\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"responses"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"all"}],"(responses.",["$","span",null,{"className":"hljs-title function_","children":"map"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"r"}],") =>"]}]," r.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"())))\n  ",["$","span",null,{"className":"hljs-comment","children":"// JSON 형태의 응답 메시지는 파싱 되어 배열 'users'에 저장됩니다."}],"\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"users"}],") =>"]}]," users.",["$","span",null,{"className":"hljs-title function_","children":"forEach"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"user"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(user.",["$","span",null,{"className":"hljs-property","children":"name"}],")));\n"]}]}],"\n",["$","h5",null,{"id":"42Promise.all의 에러 핸들링","children":["$","mark",null,{"style":{"background":"#ABF7F7A6"},"children":"Promise.all의 에러 핸들링"}]}],"\n",["$","p",null,{"children":"내부 배열에서 하나라도 rejected가 일어나면 전체를 에러라고 판단한다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"all"}],"([\n  ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],")),\n  ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}],"\n    ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],")), ",["$","span",null,{"className":"hljs-number","children":"2000"}],"),\n  ),\n  ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"3"}],"), ",["$","span",null,{"className":"hljs-number","children":"3000"}],")),\n]).",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(alert); ",["$","span",null,{"className":"hljs-comment","children":"// Error: 에러 발생!"}],"\n"]}]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Promise reject가 일어나도 호출은 계속 일어난다."}]}],"\n",["$","p",null,{"children":"별도의 처리 (AbortController) 가 없다면 Promise rejected가 일어나도 다른 Promise 처리가 취소되진 않는다. 단, 결과는 무시된다."}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241108152428.png","alt":""}]}],"\n",["$","p",null,{"children":"위 예시는 rejected되는 Promise를 배열에 넣고 Promise.all을 돌린 예시이다.\n첫 번째 인수인 Promise가 rejected되어 전역 에러가 일어났다. (catch 메소드가 뒤에 없으므로)\n이때 네트워크 요청에서 보면 fetch 자체는 일어난 것을 확인할 수 있다."}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241108152443.png","alt":""}]}],"\n"]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Promise.all의 인수에 있는 배열"}]}],"\n",["$","p",null,{"children":"해당 배열은 꼭 Promise 객체가 아니어도 된다. 밑의 예시처럼 숫자를 넣을 수도 있는데 이때는 해당 숫자를 그대로 소비 함수로 전달한다."}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"all"}],"([\n  ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n  }),\n  ",["$","span",null,{"className":"hljs-number","children":"2"}],",\n  ",["$","span",null,{"className":"hljs-number","children":"3"}],",\n]).",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(alert); ",["$","span",null,{"className":"hljs-comment","children":"// 1, 2, 3"}],"\n"]}]}],"\n",["$","h4",null,{"id":"43Promise.allSettled","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"Promise.allSettled"}]}],"\n",["$","p",null,{"children":"Promise.all은 하나라도 에러가 나면 전부 결과를 못 받는다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"all"}],"([\n  ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/template.html\""}],"),\n  ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/style.css\""}],"),\n  ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":"\"/data.json\""}],"),\n]).",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(render); ",["$","span",null,{"className":"hljs-comment","children":"// render 메서드는 fetch 결과 전부가 있어야 제대로 동작합니다."}],"\n"]}]}],"\n",["$","p",null,{"children":"위 예시와 같이 html, css, json이 전부 필요한 render 함수가 소비 함수일 경우 유용하다."}],"\n",["$","p",null,{"children":[["$","code",null,{"children":".allSettled"}],"는 하나가 에러가 나더라도 다른 요청을 받을 수 있게 하려고 태어났다."]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["응답이 성공하였을 때 – ",["$","code",null,{"children":"{status:\"fulfilled\", value:result}"}]]}],"\n",["$","li",null,{"children":["에러가 발생하였을 때 – ",["$","code",null,{"children":"{status:\"rejected\", reason:error}"}]]}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"allSettled"}],"(urls.",["$","span",null,{"className":"hljs-title function_","children":"map"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"url"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(url))).",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"results"}],") =>"]}]," {\n  ",["$","span",null,{"className":"hljs-comment","children":"// (*)"}],"\n  results.",["$","span",null,{"className":"hljs-title function_","children":"forEach"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"result, num"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (result.",["$","span",null,{"className":"hljs-property","children":"status"}]," == ",["$","span",null,{"className":"hljs-string","children":"\"fulfilled\""}],") {\n      ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":["`",["$","span",null,{"className":"hljs-subst","children":"$${urls[num]}"}],": ",["$","span",null,{"className":"hljs-subst","children":"$${result.value.status}"}],"`"]}],");\n      ",["$","span",null,{"className":"hljs-comment","children":"// 응답이 성공하면 결과가 value 프로퍼티 안에 들어가게 된다."}],"\n    }\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (result.",["$","span",null,{"className":"hljs-property","children":"status"}]," == ",["$","span",null,{"className":"hljs-string","children":"\"rejected\""}],") {\n      ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":["`",["$","span",null,{"className":"hljs-subst","children":"$${urls[num]}"}],": ",["$","span",null,{"className":"hljs-subst","children":"$${result.reason}"}],"`"]}],");\n      ",["$","span",null,{"className":"hljs-comment","children":"// 에러가 발생하면 에러 객체가 reason 프로퍼티 안에 들어가게 된다."}],"\n    }\n  });\n});\n"]}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241108154631.png","alt":""}]}],"\n",["$","h4",null,{"id":"44Promise.race","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"Promise.race"}]}],"\n",["$","p",null,{"children":"Promise.all과 유사하게 Promise 배열 전체를 처리하지만 가장 먼저 처리되는 Promise의 결과를 반환한다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"//let promise = Promise.race(iterable);"}],"\n\n",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"race"}],"([\n  ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],")),\n  ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}],"\n    ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],")), ",["$","span",null,{"className":"hljs-number","children":"2000"}],"),\n  ),\n  ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"3"}],"), ",["$","span",null,{"className":"hljs-number","children":"3000"}],")),\n]).",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(alert); ",["$","span",null,{"className":"hljs-comment","children":"// 1"}],"\n"]}]}],"\n",["$","h4",null,{"id":"45Promise.resolve와 Promise.reject","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"Promise.resolve와 Promise.reject"}]}],"\n",["$","p",null,{"children":["resolve와 reject 메소드는 async/ await의 등장으로 잘 사용되지 않는다. 하지만 추후 나올 폴리 필을 이해하기 위해서라도 필요하기에 한번 알아보도록 하자.\n( ",["$","code",null,{"children":"async function"}],"은 리턴값을 무조건 Promise로 꺼내고 내부에 throw Error해주면 rejected 상태의 Promise를 리턴한다. )"]}],"\n",["$","h5",null,{"id":"46Promise.resolve","children":["$","mark",null,{"style":{"background":"#ABF7F7A6"},"children":"Promise.resolve"}]}],"\n",["$","p",null,{"children":"Promise.resolve(value)는 결과값이 value인 fulfilled한 Promise를 생성한다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// let promise = new Promise(resolve => resolve(value));"}],"\n\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," cache = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Map"}],"();\n\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadCached"}],"(",["$","span",null,{"className":"hljs-params","children":"url"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (cache.",["$","span",null,{"className":"hljs-title function_","children":"has"}],"(url)) {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(cache.",["$","span",null,{"className":"hljs-title function_","children":"get"}],"(url));\n  }\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(url)\n    .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"response"}],") =>"]}]," response.",["$","span",null,{"className":"hljs-title function_","children":"text"}],"())\n    .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"text"}],") =>"]}]," {\n      cache.",["$","span",null,{"className":"hljs-title function_","children":"set"}],"(url, text);\n      ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," text;\n    });\n}\n"]}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"loadCached"}],"는 ",["$","code",null,{"children":"fetch"}],"를 할 때 ",["$","code",null,{"children":"cache"}],"에 해당 데이터를 저장해두고 다음에 같은 요청을 보냈을 때 ",["$","code",null,{"children":"cache"}],"에서 꺼내서 전달한다.\n이때 ",["$","code",null,{"children":"Promise.resolve"}],"를 이용해서 ",["$","code",null,{"children":"loadCached"}],"가 항상 ",["$","code",null,{"children":"Promise"}],"를 반환한다는 걸 정해둬서 사용하는 단에서는 ",["$","code",null,{"children":"loadCached"}]," 함수에 ",["$","code",null,{"children":".then/catch"}]," 등의 메소드를 통해서 소비 함수를 넣을 수 있게 된다."]}],"\n",["$","h6",null,{"id":"47Promise.resolve를 이용한 Promise allSettled의 폴리필","children":["$","mark",null,{"style":{"background":"#ADCCFFA6"},"children":"Promise.resolve를 이용한 Promise allSettled의 폴리필"}]}],"\n",["$","p",null,{"children":"allSettled는 나온 지 얼마 안 되어서 구식 브라우저에서는 폴리 필이 필요하다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"if"}]," (!",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-property","children":"allSettled"}],") {\n  ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-property","children":"allSettled"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"promises"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"all"}],"(\n      promises.",["$","span",null,{"className":"hljs-title function_","children":"map"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"p"}],") =>"]}],"\n        ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(p).",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(\n          ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"value"}],") =>"]}]," ({\n            ",["$","span",null,{"className":"hljs-attr","children":"status"}],": ",["$","span",null,{"className":"hljs-string","children":"\"fulfilled\""}],",\n            value,\n          }),\n          ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"reason"}],") =>"]}]," ({\n            ",["$","span",null,{"className":"hljs-comment","children":"// then의 두 번째 인수이다. then의 두 번째 인수는 error 핸들러이다. (catch와 같음.)"}],"\n            ",["$","span",null,{"className":"hljs-attr","children":"status"}],": ",["$","span",null,{"className":"hljs-string","children":"\"rejected\""}],",\n            reason,\n          }),\n        ),\n      ),\n    );\n  };\n}\n"]}]}],"\n",["$","h5",null,{"id":"48Promise.reject","children":["$","mark",null,{"style":{"background":"#ABF7F7A6"},"children":"Promise.reject"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Promise.reject(error)"}],"는 결과값이 ",["$","code",null,{"children":"error"}],"인 ",["$","code",null,{"children":"rejected Promise"}],"를 반환한다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(error);\nㄴ;\n"]}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241108160624.png","alt":""}]}],"\n",["$","h3",null,{"id":"49Fetch: Abort","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"Fetch: Abort"}]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"글 흐름을 위해 Promise 파트에 넣어놓긴 했지만 엄밀히 말하면 Promise API는 아니다."}],"\n"]}],"\n",["$","p",null,{"children":"Promise.all 에서도 에러 발생시 Promise 결과는 무시되나 호출은 막을 수 없다고 하였다.\nAbortController라는 빌트인 객체를 활용하면 Promise 호출 자체를 막을 수 있다."}],"\n",["$","h4",null,{"id":"50AbortController Object","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"AbortController Object"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," controller = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"AbortController"}],"();\n"]}]}],"\n",["$","p",null,{"children":"AbortController는 프로퍼티 하나, 메소드 하나를 갖고 있다."}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241108161157.png","alt":""}]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"signal"}],"은 프로토타입 체인을 가치지 않고 바로 인스턴스에서 찾을 수 있으며 ",["$","code",null,{"children":"event listener"}],"를 세팅할 수 있는 프로퍼티이다."]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"abort"}],"는 프로토타입 체인을 이용해서 ",["$","code",null,{"children":"AbortController"}],"에 있는 메소드를 가져오는 것이며 ",["$","code",null,{"children":"abort"}],"가 실행되면 다음의 과정이 일어난다.","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"instance.signal이 \"abort\" event를 발생시킨다."}],"\n",["$","li",null,{"children":"instance.signal.aborted가 true가 된다."}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":"따라서 signal에 취소 가능한 작업을 리스너로 달아 놓고\nabort() 함수로 취소하는 것이다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," controller = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"AbortController"}],"();\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," signal = controller.",["$","span",null,{"className":"hljs-property","children":"signal"}],";\n\n",["$","span",null,{"className":"hljs-comment","children":"// 취소가능한 작업을 수행하는 곳에 signal 객체를 주고, controller.abort()가 실행되면 실행될 리스너를 세팅한다."}],"\nsignal.",["$","span",null,{"className":"hljs-title function_","children":"addEventListener"}],"(",["$","span",null,{"className":"hljs-string","children":"\"abort\""}],", ",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"abort!\""}],"));\n\n",["$","span",null,{"className":"hljs-comment","children":"// 아래 코드를 어떤 곳에 넣어서 원할 때 실행할 수 있도록 한다."}],"\ncontroller.",["$","span",null,{"className":"hljs-title function_","children":"abort"}],"(); ",["$","span",null,{"className":"hljs-comment","children":"// abort!"}],"\n\n",["$","span",null,{"className":"hljs-comment","children":"// abort event가 트리거되면 aborted가 true로 바뀐다."}],"\n",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(signal.",["$","span",null,{"className":"hljs-property","children":"aborted"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// true"}],"\n"]}]}],"\n",["$","p",null,{"children":["다른 event를 구현해서 동일 기능을 만들어서 fetch와 쓸 수도 있지만, 내부적으로 fetch는 ",["$","code",null,{"children":"AbortController"}],"를 인식하기 때문에 ",["$","code",null,{"children":"AbortController"}],"를 사용하는 것이 좋다."]}],"\n",["$","h4",null,{"id":"51fetch와 함께 사용","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"fetch와 함께 사용"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"fetch"}]," 옵션에 ",["$","code",null,{"children":"signal"}],"이라는 프로퍼티가 존재한다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," controller = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"AbortController"}],"();\n",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(url, {\n  ",["$","span",null,{"className":"hljs-attr","children":"signal"}],": controller.",["$","span",null,{"className":"hljs-property","children":"signal"}],",\n});\n"]}]}],"\n",["$","p",null,{"children":["이제 이전과 같이 ",["$","code",null,{"children":"controller.abort()"}]," 함수로 ",["$","code",null,{"children":"fetch"}]," 요청을 제어해주면 된다."]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"단, fetch가 abort하는 시기보다 더 빨리 끝나면 이미 나온 결과를 없애진 않는다."}],"\n"]}],"\n",["$","h4",null,{"id":"52AbortController는 확장성 있다.","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"AbortController는 확장성 있다."}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," urls = [...]; ",["$","span",null,{"className":"hljs-comment","children":"// a list of urls to fetch in parallel"}],"\n\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," controller = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"AbortController"}],"();\n\n",["$","span",null,{"className":"hljs-comment","children":"// an array of fetch promises"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," fetchJobs = urls.",["$","span",null,{"className":"hljs-title function_","children":"map"}],"(",["$","span",null,{"className":"hljs-function","children":[["$","span",null,{"className":"hljs-params","children":"url"}]," =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(url, {\n  ",["$","span",null,{"className":"hljs-attr","children":"signal"}],": controller.",["$","span",null,{"className":"hljs-property","children":"signal"}],"\n}));\n\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," results = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"all"}],"(fetchJobs);\n\n",["$","span",null,{"className":"hljs-comment","children":"// if controller.abort() is called from elsewhere,"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// it aborts all fetches"}],"\n"]}]}],"\n",["$","p",null,{"children":["위와 같이 ",["$","code",null,{"children":"signal"}],"로 하나의 ",["$","code",null,{"children":"controller"}],"를 등록해두면 등록된 모든 ",["$","code",null,{"children":"fetch"}],"가 하나의 ",["$","code",null,{"children":"controller"}],"의 신호를 따르게 된다."]}],"\n",["$","p",null,{"children":["또한 ",["$","code",null,{"children":"Promise"}],"와 함께 사용할 수 있으며 ",["$","code",null,{"children":"Promise.all"}],"을 통해서 ",["$","code",null,{"children":"fetch"}],"와 해당 ",["$","code",null,{"children":"Promise"}],"를 결합할 수도 있다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," urls = [...];\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," controller = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"AbortController"}],"();\n\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," ourJob = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," { ",["$","span",null,{"className":"hljs-comment","children":"// our task"}],"\n  ...\n  controller.",["$","span",null,{"className":"hljs-property","children":"signal"}],".",["$","span",null,{"className":"hljs-title function_","children":"addEventListener"}],"(",["$","span",null,{"className":"hljs-string","children":"'abort'"}],", reject);\n});\n\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," fetchJobs = urls.",["$","span",null,{"className":"hljs-title function_","children":"map"}],"(",["$","span",null,{"className":"hljs-function","children":[["$","span",null,{"className":"hljs-params","children":"url"}]," =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(url, { ",["$","span",null,{"className":"hljs-comment","children":"// fetches"}],"\n  ",["$","span",null,{"className":"hljs-attr","children":"signal"}],": controller.",["$","span",null,{"className":"hljs-property","children":"signal"}],"\n}));\n\n",["$","span",null,{"className":"hljs-comment","children":"// Wait for fetches and our task in parallel"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," results = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"all"}],"([...fetchJobs, ourJob]);\n\n",["$","span",null,{"className":"hljs-comment","children":"// if controller.abort() is called from elsewhere,"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// it aborts all fetches and ourJob"}],"\n"]}]}],"\n",["$","h3",null,{"id":"53Promisification","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"Promisification"}]}],"\n",["$","p",null,{"children":["콜백을 받는 함수를 Promise를 반환하는 함수로 바꾸는 것을 ",["$","code",null,{"children":"Promisification"}]," 이라고 한다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(",["$","span",null,{"className":"hljs-params","children":"src, callback"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," script = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"\"script\""}],");\n  script.",["$","span",null,{"className":"hljs-property","children":"src"}]," = src;\n\n  script.",["$","span",null,{"className":"hljs-property","children":"onload"}]," = ",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"callback"}],"(",["$","span",null,{"className":"hljs-literal","children":"null"}],", script);\n  script.",["$","span",null,{"className":"hljs-property","children":"onerror"}]," = ",["$","span",null,{"className":"hljs-function","children":"() =>"}],"\n    ",["$","span",null,{"className":"hljs-title function_","children":"callback"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":["`",["$","span",null,{"className":"hljs-subst","children":"$${src}"}],"를 불러오는 도중에 에러가 발생함`"]}],"));\n\n  ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"head"}],".",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(script);\n}\n\n",["$","span",null,{"className":"hljs-comment","children":"// 사용법:"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// loadScript('path/script.js', (err, script) => {...})"}],"\n"]}]}],"\n",["$","p",null,{"children":["위 함수는 콜백 함수를 활용한 함수로써 이를 ",["$","code",null,{"children":"Promisification"}]," 해보자."]}],"\n",["$","p",null,{"children":"src라는 인수를 받아야 되고 콜백을 받지 않고 사용하는 단에서 제어할 수 있어야 한다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," loadScriptPromise = ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"src"}],")=>"]}],"{\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],")=>"]}],"{\n    ",["$","span",null,{"className":"hljs-comment","children":"// 여기서 (err, script)=>{...} 이건 위의 코드에서 보면 기존의 사용법에서 쓰이는 콜백 함수이다."}],"\n    ",["$","span",null,{"className":"hljs-comment","children":"// 콜백 함수가 내부로 숨겨진 것일 뿐이다."}],"\n    ",["$","span",null,{"className":"hljs-title function_","children":"loadScript"}],"(src,",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"err, script"}],")=>"]}],"{\n\t  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (err) ",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(err);\n\t  ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(script);\n    })\n  })\n}\n\n",["$","span",null,{"className":"hljs-comment","children":"// 사용법:"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// loadScriptPromise('path/script.js').then(...)"}],"\n"]}]}],"\n",["$","p",null,{"children":["이러한 ",["$","code",null,{"children":"Promisification"}]," 은 하나의 함수에서만 쓸 수 있다. 이를 확장성 있게 하려면 헬퍼 함수를 만들어 보자."]}],"\n",["$","p",null,{"children":["헬퍼 함수는 함수 ",["$","code",null,{"children":"f"}],"를 받아서 래퍼 함수를 반환해야 한다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"promisify"}],"(",["$","span",null,{"className":"hljs-params","children":"f"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"...args"}],") { ",["$","span",null,{"className":"hljs-comment","children":"// 래퍼 함수를 반환함"}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n      ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"callback"}],"(",["$","span",null,{"className":"hljs-params","children":"err, result"}],") {\n      ",["$","span",null,{"className":"hljs-comment","children":"// f에 사용할 커스텀 콜백"}],"\n        ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (err) {\n          ",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(err);\n        } ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," {\n          ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(result);\n        }\n      }\n\n      args.",["$","span",null,{"className":"hljs-title function_","children":"push"}],"(callback); ",["$","span",null,{"className":"hljs-comment","children":"// 위에서 만든 커스텀 콜백을 함수 f의 인수 끝에 추가합니다."}],"\n\n      ",["$","span",null,{"className":"hljs-comment","children":"// 처음 promisify를 선언할 때 넣었던 함수를 가져와서"}],"\n      ",["$","span",null,{"className":"hljs-comment","children":"// 호출할 때의 this, 그리고 호출할 때 넣은 args를 가져와서 실행시킨다."}],"\n      f.",["$","span",null,{"className":"hljs-title function_","children":"call"}],"(",["$","span",null,{"className":"hljs-variable language_","children":"this"}],", ...args); ",["$","span",null,{"className":"hljs-comment","children":"// 기존 함수를 호출합니다."}],"\n    });\n  };\n};\n\n",["$","span",null,{"className":"hljs-comment","children":"// 사용법:"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," loadScriptPromise = ",["$","span",null,{"className":"hljs-title function_","children":"promisify"}],"(loadScript);\n",["$","span",null,{"className":"hljs-title function_","children":"loadScriptPromise"}],"(...).",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(...);\n"]}]}],"\n",["$","p",null,{"children":"위 코드에서 여러 인수를 처리하기 위해선 다음과 같은 리팩토링이 필요하다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// 콜백의 성공 결과를 담은 배열을 얻게 해주는 promisify(f, true)"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"promisify"}],"(",["$","span",null,{"className":"hljs-params","children":["f, manyArgs = ",["$","span",null,{"className":"hljs-literal","children":"false"}]]}],") { ",["$","span",null,{"className":"hljs-comment","children":"// args 다수 여부 확인"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," (",["$","span",null,{"className":"hljs-params","children":"...args"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n      ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"callback"}],"(",["$","span",null,{"className":"hljs-params","children":"err, ...results"}],") { ",["$","span",null,{"className":"hljs-comment","children":"// f에 사용할 커스텀 콜백"}],"\n        ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (err) {\n          ",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(err);\n        } ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," {\n          ",["$","span",null,{"className":"hljs-comment","children":"// args 다수 여부로 판단해서 리턴될 Promise의 result에 하나만 넣을지 여러 개 넣을지 판단"}],"\n          ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(manyArgs ? results : results[",["$","span",null,{"className":"hljs-number","children":"0"}],"]);\n        }\n      }\n\n      args.",["$","span",null,{"className":"hljs-title function_","children":"push"}],"(callback);\n\n      f.",["$","span",null,{"className":"hljs-title function_","children":"call"}],"(",["$","span",null,{"className":"hljs-variable language_","children":"this"}],", ...args);\n    });\n  };\n};\n\n",["$","span",null,{"className":"hljs-comment","children":"// 사용법:"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// 여기서 promisify에 들어가는 f는 여러 인수가 필요하고 콜백이 마지막 인수로 들어가는 함수이다."}],"\n",["$","span",null,{"className":"hljs-comment","children":"// f(arg1, arg2, ..., (err, ...results)=>{});"}],"\nf = ",["$","span",null,{"className":"hljs-title function_","children":"promisify"}],"(f, ",["$","span",null,{"className":"hljs-literal","children":"true"}],");\n",["$","span",null,{"className":"hljs-title function_","children":"f"}],"(...).",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":[["$","span",null,{"className":"hljs-params","children":"arrayOfResults"}]," =>"]}]," ..., ",["$","span",null,{"className":"hljs-function","children":[["$","span",null,{"className":"hljs-params","children":"err"}]," =>"]}]," ...);\n"]}]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["단, ",["$","code",null,{"children":"Promisification"}]," 은 콜백을 완전히 대체하지는 못한다. 콜백은 여러 번 호출할 수 있고 Promise는 하나의 결과만 가질 수 있기 때문이다. ( Promisification한 함수의 콜백을 여러 번 호출해도 두 번째부터는 무시된다. )"]}],"\n"]}],"\n",["$","p",null,{"children":["사실 이를 미리 처리해주는 ",["$","code",null,{"children":"promisify"}]," 라이브러리나 ",["$","code",null,{"children":"Node.js"}]," 내장 함수가 존재한다."]}],"\n",["$","h3",null,{"id":"54Microtask 처리","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"Microtask 처리"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Promise"}]," 핸들러 (",["$","code",null,{"children":".then/catch/finally"}],")는 항상 비동기적으로 실행된다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Promise"}],"가 즉시 이행돼도 ",["$","code",null,{"children":".then/catch/finally"}]," 아래에 있는 코드들은 이 핸들러가 실행되기 전에 실행된다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"();\n\npromise.",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"Promise 성공!\""}],"));\n\n",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"코드 종료\""}],");\n\n",["$","span",null,{"className":"hljs-comment","children":"// 결과"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// alert(\"코드 종료\");"}],"\n",["$","span",null,{"className":"hljs-comment","children":"// alert(\"Promise 성공!\");"}],"\n"]}]}],"\n",["$","h4",null,{"id":"55Microtask Queue","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"Microtask Queue"}]}],"\n",["$","p",null,{"children":["비동기 작업을 처리하려면 적절한 관리가 필요하다.\n이를 위해 ECMA에선 ",["$","code",null,{"children":"PromiseJobs"}],"라는 내부 큐(",["$","code",null,{"children":"Internal Queue"}],")를 명시한다. ( ",["$","code",null,{"children":"V8"}],"엔진에서 이를 ",["$","code",null,{"children":"Microtask Queue"}]," 라고 부르기 때문에 ",["$","code",null,{"children":"Microtask Queue"}],"를 더 자주 쓴다. )"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Microtask Queue"}],"는 다음처럼 동작한다."]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["먼저 들어온 작업을 먼저 실행한다. (",["$","code",null,{"children":"FIFO"}],")"]}],"\n",["$","li",null,{"children":"실행할 것이 아무것도 남아있지 않을 때만 큐에 있는 작업이 실행되기 시작한다."}],"\n"]}],"\n",["$","p",null,{"children":["요약하면 어떤 ",["$","code",null,{"children":"Promise"}]," 가 준비되었을 때 이 ",["$","code",null,{"children":"Promise"}],"의 ",["$","code",null,{"children":".then/catch/finally"}]," 핸들러는 큐에 들어가게 되며 여전히 실행되지 않는다."]}],"\n",["$","p",null,{"children":"이후 현재 코드에서 자유로운 상태가 되었을 때 자바스크립트 엔진은 큐에서 작업을 꺼내 실행한다."}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241108195640.png","alt":""}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Promise"}]," 핸들러는 항상 내부 큐(",["$","code",null,{"children":"Promise jobs"}],"이자 ",["$","code",null,{"children":"Microtask Queue"}],")를 통과하게 된다."]}],"\n",["$","p",null,{"children":["여러 개의 ",["$","code",null,{"children":".then/catch/finally"}],"를 사용해 만든 체인의 경우, 각 핸들러는 비동기적으로 실행된다. 큐에 들어간 핸들러 각각은 현재 코드가 완료되고, 큐에 들어있는 이전 핸들러의 실행이 완료되었을 때 실행된다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"()\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"Promise Fulfilled\""}],"))\n  .",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(",["$","span",null,{"className":"hljs-string","children":"\"finish\""}],"));\n"]}]}],"\n",["$","p",null,{"children":"위와 같이 하면 비동기 동작을 차례대로 진행할 수 있다."}],"\n",["$","h4",null,{"id":"56처리되지 못한 거부","children":["$","mark",null,{"style":{"background":"#BBFABBA6"},"children":"처리되지 못한 거부"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"unhandledrejection"}]," 이벤트는 ",["$","code",null,{"children":"Promise"}],"를 실행할 때 ",["$","code",null,{"children":".catch"}]," 없이 에러가 전달돼서 전역 에러가 난 것을 의미한다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"Promise 실패!\""}],"));\n\n",["$","span",null,{"className":"hljs-comment","children":"// Promise 실패!"}],"\n",["$","span",null,{"className":"hljs-variable language_","children":"window"}],".",["$","span",null,{"className":"hljs-title function_","children":"addEventListener"}],"(",["$","span",null,{"className":"hljs-string","children":"\"unhandledrejection\""}],", ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"event"}],") =>"]}]," ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(event.",["$","span",null,{"className":"hljs-property","children":"reason"}],"));\n"]}]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"unhandled rejection"}]}],"\n",["$","p",null,{"children":["자바스크립트 엔진은 처리되지 못한 거부(unhandled rejection)를 찾을 때 ",["$","code",null,{"children":"Microtask Queue"}],"를 확인한다.\nMicrotask Queue 끝에도 Promise error가 처리되지 않았다면 발생한다."]}],"\n"]}],"\n",["$","h5",null,{"id":"57만약 catch를 나중에 처리한다면","children":["$","mark",null,{"style":{"background":"#ABF7F7A6"},"children":"만약 catch를 나중에 처리한다면"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"Promise 실패!\""}],"));\n",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," promise.",["$","span",null,{"className":"hljs-title function_","children":"catch"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"err"}],") =>"]}]," ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-string","children":"\"잡았다!\""}],")), ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n\n",["$","span",null,{"className":"hljs-comment","children":"// Error: Promise 실패!"}],"\n",["$","span",null,{"className":"hljs-variable language_","children":"window"}],".",["$","span",null,{"className":"hljs-title function_","children":"addEventListener"}],"(",["$","span",null,{"className":"hljs-string","children":"\"unhandledrejection\""}],", ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"event"}],") =>"]}],"\n  ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(event.",["$","span",null,{"className":"hljs-property","children":"reason"}],"),\n);\n"]}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241108205243.png","alt":""}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"unhandledrejection"}],"의 핸들러 함수 > rejected Promise 있다고 알림 > catch 소비 함수\n순서인 것을 확인할 수 있다."]}],"\n",["$","p",null,{"children":"이는 다음의 과정 때문에 그러하다."}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["현재 ",["$","code",null,{"children":"Macrotask"}],"가 끝나면 (",["$","code",null,{"children":"window.addEventListener"}],"까지 다 끝나고 나면) ",["$","code",null,{"children":"Microtask Queue"}],"를 확인한다."]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"unhandledrejection"}],"은 ",["$","code",null,{"children":"Microtask Queue"}],"에 있는 작업이 ",["$","code",null,{"children":"rejected"}],"된 상태로 남아있을 때 발동된다. 즉 ",["$","code",null,{"children":"rejected Promise"}]," 상태로 남아 있는 것을 발견하고 ",["$","code",null,{"children":"unhandledrejection"}],"을 발동시킨다."]}],"\n",["$","li",null,{"children":["등록된 핸들러 ",["$","code",null,{"children":"(console.log(event.reason))"}]," 실행"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"Web API"}],"에서 ",["$","code",null,{"children":"1,000ms"}],"가 끝나고 ",["$","code",null,{"children":"setTimeout"}],"의 콜백 함수 ",["$","code",null,{"children":"( ()=>promise.catch(()=>console.log('잡았다!')) )"}],"가 ",["$","code",null,{"children":"Macrotask Queue"}],"로 이동된다."]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"()=>promise.catch(()=>console.log('잡았다!'))"}],"를 실행해서 ",["$","code",null,{"children":"promise.catch(()=>console.log('잡았다!')"}]," 리턴한다."]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"rejected Promise"}],"가 담겨있는 변수 ",["$","code",null,{"children":"promise"}],"를 ",["$","code",null,{"children":".catch"}],"핸들러로 찍었기에 ",["$","code",null,{"children":"()=>console.log('잡았다!')"}],"를 ",["$","code",null,{"children":"Microtask Queue"}],"로 이동시킨다."]}],"\n",["$","li",null,{"children":["이동이 끝나면 ",["$","code",null,{"children":"Macrotask"}]," 하나가 끝났으니 ",["$","code",null,{"children":"Microtask Queue"}],"를 비워질 때까지 실행한다. 여기서 ",["$","code",null,{"children":"()=>console.log('잡았다!')"}],"가 실행된다."]}],"\n"]}],"\n",["$","h2",null,{"id":"58async, await","children":["$","mark",null,{"style":{"background":"#FFB86CA6"},"children":"async, await"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"Promise"}],"를 편하게 사용하기 위해 ",["$","code",null,{"children":"async"}],", ",["$","code",null,{"children":"await"}]," 문법이 탄생하게 되었다."]}],"\n",["$","h3",null,{"id":"59async function","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"async function"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"async"}]," funciton ",["$","span",null,{"className":"hljs-title function_","children":"f"}],"(",["$","span",null,{"className":"hljs-params"}],"){\n\t",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-number","children":"1"}],";\n}\n"]}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"function"}]," 앞에 ",["$","code",null,{"children":"async"}],"를 붙이면 해당 함수는 항상 Promise를 반환한다.\n만약 Promise가 아닌 값을 반환하더라도 fulfilled 상태의 Promise로 값을 감싸서 반환한다."]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241110152440.png","alt":""}]}],"\n",["$","p",null,{"children":"즉 다음의 코드들은 같은 기능을 한다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"async"}]," funciton ",["$","span",null,{"className":"hljs-title function_","children":"f1"}],"(",["$","span",null,{"className":"hljs-params"}],"){\n\t",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-number","children":"1"}],";\n}\n\n",["$","span",null,{"className":"hljs-keyword","children":"async"}]," funciton ",["$","span",null,{"className":"hljs-title function_","children":"f2"}],"(",["$","span",null,{"className":"hljs-params"}],"){\n\t",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],");\n}\n"]}]}],"\n",["$","h3",null,{"id":"60await","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"await"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// await는 async function 안에서만 동작한다."}],"\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," value = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," promise;\n"]}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"await"}]," 키워드를 만나면 Promise가 처리될 때까지 기다린다. ",["$","code",null,{"children":"await"}],"키워드 아래에 있는 동일 블록의 코드들은 ",["$","code",null,{"children":"Microtask Queue"}],"로 이동한다. ( 기능적으로 ",["$","code",null,{"children":".then"}],"으로 넘기는 것과 같다. )"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"async"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"f"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," promise = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-string","children":"\"완료!\""}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n  });\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," result = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," promise; ",["$","span",null,{"className":"hljs-comment","children":"// Promise가 이행될 때까지 기다림 (*)"}],"\n\n  ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(result); ",["$","span",null,{"className":"hljs-comment","children":"// \"완료!\""}],"\n}\n\n",["$","span",null,{"className":"hljs-title function_","children":"f"}],"();\n"]}]}],"\n",["$","p",null,{"children":"Promise가 처리될 때까지 기다리는 동안 엔진은 다른 일(다른 스크립트 실행, 이벤트 처리)을 처리할 수 있기 때문에 CPU 리소스가 낭비되지 않는다."}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["즉, ",["$","code",null,{"children":"await"}],"은 ",["$","code",null,{"children":"promise.then"}],"보다 좀 더 세련되게 Promise의 ",["$","code",null,{"children":"result"}]," 값을 얻을 수 있도록 해주는 문법이다."]}],"\n"]}],"\n",["$","p",null,{"children":[["$","strong",null,{"children":"fetch와 체이닝 함께 응용"}]," 파트에서 예시로 있었던 ",["$","code",null,{"children":"showAvatar"}]," 코드를 ",["$","code",null,{"children":"async / await"}]," 문법으로 정리해보면 다음과 같다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"async"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"showAvatar"}],"(",["$","span",null,{"className":"hljs-params","children":"url"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// JSON 읽기"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," loadJsonResponse = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(url);\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," { name } = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," loadJsonResponse.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"();\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// github 사용자 정보 읽기"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," githubUserResponse = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(\n    ",["$","span",null,{"className":"hljs-string","children":["`https://api.github.com/users/",["$","span",null,{"className":"hljs-subst","children":"$${name}"}],"`"]}],",\n  );\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," githubUser = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," githubUserResponse.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"();\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// 아바타 보여주기"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," img = ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-title function_","children":"createElement"}],"(",["$","span",null,{"className":"hljs-string","children":"\"img\""}],");\n  img.",["$","span",null,{"className":"hljs-property","children":"src"}]," = githubUser.",["$","span",null,{"className":"hljs-property","children":"avatar_url"}],";\n  img.",["$","span",null,{"className":"hljs-property","children":"className"}]," = ",["$","span",null,{"className":"hljs-string","children":"\"promise-avatar-example\""}],";\n  ",["$","span",null,{"className":"hljs-variable language_","children":"document"}],".",["$","span",null,{"className":"hljs-property","children":"body"}],".",["$","span",null,{"className":"hljs-title function_","children":"append"}],"(img);\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// 3초 대기"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") =>"]}]," ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(resolve, ",["$","span",null,{"className":"hljs-number","children":"3000"}],"));\n  ",["$","span",null,{"className":"hljs-comment","children":"// await가 실행되면 해당 Promise가 처리되는 동작을 executor로 잡고 그 아래의 코드들은 Microtask Queue로 간다고 생각하면 된다. (.then과 동작이 똑같음.)"}],"\n\n  img.",["$","span",null,{"className":"hljs-title function_","children":"remove"}],"();\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," githubUser;\n}\n\n",["$","span",null,{"className":"hljs-title function_","children":"showAvatar"}],"();\n"]}]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["await은 최상위 레벨 코드에서 동작하지 않는다.\n이를 위해서 ",["$","code",null,{"children":"IIFE ( Immediately Invoked function expression )"}],"를 사용할 수 있습니다."]}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":["(",["$","span",null,{"className":"hljs-title function_","children":"async"}]," ()=>{\n\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," response = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":"`/article/promise-chaining/user.json`"}],");\n\t",["$","span",null,{"className":"hljs-keyword","children":"let"}]," user = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"();\n\t...\n})();\n"]}]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":[["$","code",null,{"children":"promise.then"}],"처럼 ",["$","code",null,{"children":"await"}],"도 ",["$","code",null,{"children":"thenable"}]," 객체를 받을 수 있다."]}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"class"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Thenable"}]," {\n  ",["$","span",null,{"className":"hljs-title function_","children":"constructor"}],"(",["$","span",null,{"className":"hljs-params","children":"num"}],") {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"num"}]," = num;\n  }\n  ",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(",["$","span",null,{"className":"hljs-params","children":"resolve, reject"}],") {\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(resolve);\n    ",["$","span",null,{"className":"hljs-comment","children":"// 1000밀리 초 후에 이행됨(result는 this.num*2)"}],"\n    ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"num"}]," * ",["$","span",null,{"className":"hljs-number","children":"2"}],"), ",["$","span",null,{"className":"hljs-number","children":"1000"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// (*)"}],"\n  }\n}\n\n",["$","span",null,{"className":"hljs-keyword","children":"async"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"f"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-comment","children":"// 1초 후, 변수 result는 2가 됨"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," result = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Thenable"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],");\n  ",["$","span",null,{"className":"hljs-comment","children":"// new Promise((resolve)=>setTimeout(()=> resolve(this.num*2),1000)).then((result)=>alert(result)) 와 같다."}],"\n  ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(result);\n}\n\n",["$","span",null,{"className":"hljs-title function_","children":"f"}],"();\n"]}]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":[["$","code",null,{"children":"class method"}],"에도 ",["$","code",null,{"children":"async"}],"를 사용할 수 있다. ",["$","code",null,{"children":"async"}],"가 붙은 메서드는 ",["$","code",null,{"children":"async"}]," 함수와 같이 Promise를 반환하며 await을 사용할 수 있다."]}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"class"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Waiter"}]," {\n  ",["$","span",null,{"className":"hljs-keyword","children":"async"}]," ",["$","span",null,{"className":"hljs-title function_","children":"wait"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],");\n  }\n}\n\n",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Waiter"}],"().",["$","span",null,{"className":"hljs-title function_","children":"wait"}],"().",["$","span",null,{"className":"hljs-title function_","children":"then"}],"(alert); ",["$","span",null,{"className":"hljs-comment","children":"// 1"}],"\n"]}]}],"\n",["$","h3",null,{"id":"61에러 핸들링","children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"에러 핸들링"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"await promise"}],"는 Promise 객체의 ",["$","code",null,{"children":"result"}],"에 저장된 값을 반환한다.\n반면 ",["$","code",null,{"children":"Promise"}],"가 거부되면 마치 ",["$","code",null,{"children":"throw"}],"문을 작성한 것처럼 에러를 던진다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// 아래 두 코드의 기능은 같다."}],"\n",["$","span",null,{"className":"hljs-keyword","children":"async"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"f"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"reject"}],"(",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],"));\n}\n\n",["$","span",null,{"className":"hljs-keyword","children":"async"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"f"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"throw"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Error"}],"(",["$","span",null,{"className":"hljs-string","children":"\"에러 발생!\""}],");\n}\n"]}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"await"}],"가 던진 에러는 ",["$","code",null,{"children":"throw"}],"가 던진 에러를 잡을 때처럼 ",["$","code",null,{"children":"try...catch"}],"를 사용해 잡을 수 있다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"async"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"f"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"try"}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"let"}]," response = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-string","children":"\"http://유효하지-않은-주소\""}],");\n  } ",["$","span",null,{"className":"hljs-keyword","children":"catch"}]," (err) {\n    ",["$","span",null,{"className":"hljs-title function_","children":"alert"}],"(err); ",["$","span",null,{"className":"hljs-comment","children":"// TypeError: failed to fetch"}],"\n  }\n}\n\n",["$","span",null,{"className":"hljs-title function_","children":"f"}],"();\n"]}]}],"\n",["$","p",null,{"children":["에러가 발생하면 ",["$","code",null,{"children":"catch"}]," 블록으로 제어 흐름이 넘어가게 된다."]}],"\n",["$","p",null,{"children":["원래 ",["$","code",null,{"children":"async function"}],"에 리턴값이 없으면 ",["$","code",null,{"children":"fulfilled Promise"}],"에 ",["$","code",null,{"children":"undefined"}],"가 담겨서 리턴되지만"]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241110193617.png","alt":""}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"async function"}],"에서 ",["$","code",null,{"children":"await"}],"한 ",["$","code",null,{"children":"Promise"}],"가 ",["$","code",null,{"children":"reject"}],"된다면 ",["$","code",null,{"children":"rejected"}],"된 ",["$","code",null,{"children":"Promise"}],"에 에러가 담겨서 리턴된다. (또한,에러도 발생한다.)"]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241110193853.png","alt":""}]}],"\n",["$","p",null,{"children":["위의 코드에서 ",["$","code",null,{"children":".catch"}],"를 이어서 사용해서 해당 ",["$","code",null,{"children":"Error"}],"를 핸들링할 수 있다."]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241110193713.png","alt":""}]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["여기서 ",["$","code",null,{"children":".catch"}],"로 핸들링 되지 않은 에러는 전역 에러로 처리되는데 이는 ",["$","code",null,{"children":"unhandledrejection"}],"이벤트의 핸들러로 처리할 수 있다."]}],"\n"]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":[["$","code",null,{"children":".then"}],"을 ",["$","code",null,{"children":"await"}],"가 대신해주고 ",["$","code",null,{"children":".catch"}],"를 ",["$","code",null,{"children":"try..catch"}],"로 대신해주기 때문에 동일한 기능을 쓰지만 사용하는 쪽에서 훨씬 편하게 쓸 수 있다. 하지만 ",["$","code",null,{"children":"await"}],"은 최상위 레벨 코드에서는 사용할 수 없어서 (async가 없는 최상위 레벨 코드) ",["$","code",null,{"children":".then/ .catch"}],"를 사용해야만 하는 경우가 발생한다."]}],"\n"]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":[["$","code",null,{"children":"async/ await"}],"은 ",["$","code",null,{"children":"Promise.all"}],"과도 함께 쓸 수 있다, 에러 핸들링 역시 똑같이 ",["$","code",null,{"children":"try...catch"}],"를 활용할 수 있다."]}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// Promise 처리 결과가 담긴 배열을 기다립니다."}],"\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," results = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],".",["$","span",null,{"className":"hljs-title function_","children":"all"}],"([\n  ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(url1),\n  ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(url2),\n  ...\n]);\n"]}]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["감을 익히기 위한 세 가지 과제가 있습니다. 한번 풀어보면 좋을 것 같다.\n",["$","a",null,{"href":"https://ko.javascript.info/async-await#tasks","children":"https://ko.javascript.info/async-await#tasks"}]]}],"\n"]}],"\n",["$","h1",null,{"id":"62비동기 관련 문제 풀이","children":["$","mark",null,{"style":{"background":"#FF5582A6"},"children":"비동기 관련 문제 풀이"}]}],"\n",["$","p",null,{"children":["다음은 비동기 관련 로직을 완벽하게 이해하기 위해서 만들어 본 문제이다.\n각 ",["$","code",null,{"children":"queue"}],"와 ",["$","code",null,{"children":"Web API"}],"를 생각하면서 결과값은 무엇이고 왜인지 생각해보자."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"export"}]," ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," ",["$","span",null,{"className":"hljs-title function_","children":"testFn"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"async"}]," (",["$","span",null,{"className":"hljs-params"}],") => {\n  ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// 바로 실행"}],"\n  ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n    ",["$","span",null,{"className":"hljs-comment","children":"// setTimeout 바로 실행, Web API로 타이밍 함수 넘김"}],"\n    ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-number","children":"2"}],");\n  }, ",["$","span",null,{"className":"hljs-number","children":"500"}],");\n  ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-number","children":"3"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// 바로 실행"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-title function_","children":"async"}]," (resolve) => {\n    ",["$","span",null,{"className":"hljs-comment","children":"// executor 함수는 Promise 생성과 함께 바로 실행된다."}],"\n    ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-number","children":"4"}],", ",["$","span",null,{"className":"hljs-string","children":"\"전\""}],");\n    ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-built_in","children":"setTimeout"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n      ",["$","span",null,{"className":"hljs-comment","children":"// 여기까지 바로 실행, await 아래 내부 코드들은 전부 Microtask Queue로"}],"\n      ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-number","children":"4"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// console.log(4)라는 콜백은 setTimeout이 실행되고 Web API에서 5000이라는 ms가 지난 후에 Macrotask queue로 전달된다."}],"\n    }, ",["$","span",null,{"className":"hljs-number","children":"5000"}],");\n    ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-number","children":"4"}],", ",["$","span",null,{"className":"hljs-string","children":"\"다음\""}],");\n    ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-number","children":"4"}],");\n  });\n  ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-number","children":"5"}],"); ",["$","span",null,{"className":"hljs-comment","children":"// 바로 실행"}],"\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," t = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Promise"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"resolve"}],") =>"]}]," {\n    ",["$","span",null,{"className":"hljs-comment","children":"// Promise 내부의 executor는 바로 실행되고 아래 코드들은 전부 Microtask queue로 이동"}],"\n    ",["$","span",null,{"className":"hljs-comment","children":"// new Promise((resolve)=>{console.log(6); resolve('a')}).then((t)=>{console.log(t); console.log(7)})과 같다."}],"\n    ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-number","children":"6"}],");\n    ",["$","span",null,{"className":"hljs-title function_","children":"resolve"}],"(",["$","span",null,{"className":"hljs-string","children":"\"a\""}],");\n  });\n  ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(t);\n  ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(",["$","span",null,{"className":"hljs-number","children":"7"}],");\n};\n"]}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2024-11-10/Pasted%20image%2020241110155653.png","alt":""}]}],"\n",["$","h2",null,{"id":"63풀이","children":["$","mark",null,{"style":{"background":"#FFB86CA6"},"children":"풀이"}]}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"left"}}],["$","th",null,{"children":"1번째 task (testFn이라는 Macrotask 실행)"}],["$","th",null,{"children":"2번째 task (testFn 관련 Microtask 전부 실행)"}],["$","th",null,{"children":"코드 실행부터 500ms 지남"}],["$","th",null,{"children":"3번째 task ( 2를 출력하는 Macrotask 실행 )"}],["$","th",null,{"children":"Microtask Queue 비어있는 것 확인하고 다음으로 넘어감"}],["$","th",null,{"children":"코드 실행부터 5000ms 지남"}],["$","th",null,{"children":"4번째 task ( 4를 출력하는 Macrotask 실행)"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"left"},"children":"Macrotask queue 상태"}],["$","td",null,{}],["$","td",null,{}],["$","td",null,{"children":"()=>console.log(2)"}],["$","td",null,{}],["$","td",null,{}],["$","td",null,{"children":"()=>console.log(4)"}],["$","td",null,{}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"left"},"children":"Microtask queue 상태"}],["$","td",null,{"children":"console.log(4, \"다음\"), resolve(4), console.log(t), console.log(7)"}],["$","td",null,{}],["$","td",null,{}],["$","td",null,{}],["$","td",null,{}],["$","td",null,{}],["$","td",null,{}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"left"},"children":"Web API"}],["$","td",null,{"children":["500ms를 기다리면 ()=>console.log(2)를 task queue로 넘기는 동작 실행,",["$","br",null,{}],"5,000ms를 기다리면 ()=>console.log(4)를 taskqueue로 넘기는 동작 실행"]}],["$","td",null,{"children":["500ms를 기다리면 ()=>console.log(2)를 task queue로 넘기는 동작 실행,",["$","br",null,{}],"5,000ms를 기다리면 ()=>console.log(4)를 taskqueue로 넘기는 동작 실행"]}],["$","td",null,{"children":"5,000ms를 기다리면 ()=>console.log(4)를 taskqueue로 넘기는 동작 실행"}],["$","td",null,{"children":"5,000ms를 기다리면 ()=>console.log(4)를 taskqueue로 넘기는 동작 실행"}],["$","td",null,{"children":"5,000ms를 기다리면 ()=>console.log(4)를 taskqueue로 넘기는 동작 실행"}],["$","td",null,{}],["$","td",null,{}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"left"},"children":"출력"}],["$","td",null,{"children":"1, 3, 4 '전', 5, 6"}],["$","td",null,{"children":"4 \"다음\", a, 7"}],["$","td",null,{}],["$","td",null,{"children":"2"}],["$","td",null,{}],["$","td",null,{}],["$","td",null,{"children":"4"}]]}]]}]]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":[["$","code",null,{"children":"Macrotask"}]," > ",["$","code",null,{"children":"Microtask"}]," > ",["$","code",null,{"children":"requestAnimationFrame"}]," > ",["$","code",null,{"children":"브라우저 렌더링"}]," 순서로 렌더링이 진행되기 때문에 위의 코드 실행 중간에 이벤트가 발생해서 ",["$","code",null,{"children":"Macrotask"}],"가 하나 생기게 되면 해당 ",["$","code",null,{"children":"Macrotask"}],"에 관련된 브라우저 렌더링이 일어나고 위의 코드로 복귀하게 될 수 있다."]}],"\n"]}],"\n",["$","h1",null,{"id":"64마무리","children":["$","mark",null,{"style":{"background":"#FF5582A6"},"children":"마무리"}]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["기존에는 비동기 코드가 Microtask Queue와 이벤트 루프를 활용해서 돌아간다는 정도만 알고 있었다면, 이제는 브라우저 렌더링 흐름과 함께 이해하면서\n",["$","strong",null,{"children":"비동기 방식이 왜 필요한지"}],"를 더 정확히 알 수 있었다.",["$","br",null,{}],"\n","기본기를 탄탄하게 다져 보자는 생각으로 시작한 글이기에, 촘촘하게 배우려고 노력했고, 파편화된 지식을 모을 좋은 기회가 되었다.",["$","br",null,{}],"\n",["$","strong",null,{"children":"이 기술이 왜 필요한지에"}]," 집중하면서부터는 좀 더 다양한 시각으로 볼 수 있게 된 것 같다.",["$","br",null,{}],"\n","이제 더 나아가 보자."]}],"\n"]}],"\n",["$","h1",null,{"id":"65참고 문헌","children":["$","mark",null,{"style":{"background":"#FF5582A6"},"children":"참고 문헌"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://wikibook.co.kr/react-deep-dive/","children":"https://wikibook.co.kr/react-deep-dive/"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://ko.javascript.info/async","children":"https://ko.javascript.info/async"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://product.kyobobook.co.kr/detail/S000001766397","children":"https://product.kyobobook.co.kr/detail/S000001766397"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://inpa.tistory.com/entry/%F0%9F%8C%90-requestAnimationFrame-%EA%B0%80%EC%9D%B4%EB%93%9C","children":"https://inpa.tistory.com/entry/%F0%9F%8C%90-requestAnimationFrame-%EA%B0%80%EC%9D%B4%EB%93%9C"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://www.youtube.com/watch?v=8aGhZQkoFbQ","children":"https://www.youtube.com/watch?v=8aGhZQkoFbQ"}]}],"\n"]}]]}]]}]]}]
1a:I[9114,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","880","static/chunks/app/posts/%5Bid%5D/page-d9f0a2d13d9ca4de.js"],"default"]
19:["$","$L1a",null,{"headings":[{"text":"비동기 통신의 이해","level":1,"id":"0비동기 통신의 이해"},{"text":"싱글 스레드 자바스크립트","level":2,"id":"1싱글 스레드 자바스크립트"},{"text":"JS가 멀티 쓰레드가 아닌 이유","level":2,"id":"2JS가 멀티 쓰레드가 아닌 이유"},{"text":"Event Loop","level":2,"id":"3Event Loop"},{"text":"자바스크립트 엔진 동작 방식","level":3,"id":"4자바스크립트 엔진 동작 방식"},{"text":"예시 1: CPU 소모가 많은 task 쪼개기","level":3,"id":"5예시 1: CPU 소모가 많은 task 쪼개기"},{"text":"예시 2: Progress bar","level":3,"id":"6예시 2: Progress bar"},{"text":"예시 3: 이벤트 처리가 끝난 이후에 작업","level":3,"id":"7예시 3: 이벤트 처리가 끝난 이후에 작업"},{"text":"Macrotask와 Microtask","level":2,"id":"8Macrotask와 Microtask"},{"text":"Microtask","level":3,"id":"9Microtask"},{"text":"처리 로직","level":3,"id":"10처리 로직"},{"text":"비동기 작업의 역사와 개념","level":1,"id":"11비동기 작업의 역사와 개념"},{"text":"콜백","level":2,"id":"12콜백"},{"text":"에러 핸들링","level":3,"id":"13에러 핸들링"},{"text":"콜백 속 콜백","level":3,"id":"14콜백 속 콜백"},{"text":"콜백 지옥","level":4,"id":"15콜백 지옥"},{"text":"무조건 콜백을 사용하면 안될까?","level":3,"id":"16무조건 콜백을 사용하면 안될까?"},{"text":"Promise","level":2,"id":"17Promise"},{"text":"executor 함수","level":3,"id":"18executor 함수"},{"text":"executor 예시","level":4,"id":"19executor 예시"},{"text":"주의사항","level":3,"id":"20주의사항"},{"text":"1. 한번 처리된 Promise는 바뀌지 않는다.","level":4,"id":"211. 한번 처리된 Promise는 바뀌지 않는다."},{"text":"2. Error 객체와 함께 reject해야 한다.","level":4,"id":"222. Error 객체와 함께 reject해야 한다."},{"text":"3. 꼭 Promise가 비동기적인 것을 다루지 않아도 된다.","level":4,"id":"233. 꼭 Promise가 비동기적인 것을 다루지 않아도 된다."},{"text":"4. PromiseState와 PromiseResult는 내부 프로퍼티이기 때문에 직접 접근할 수 있다.","level":4,"id":"244. PromiseState와 PromiseResult는 내부 프로퍼티이기 때문에 직접 접근할 수 있다."},{"text":"소비함수","level":3,"id":"25소비함수"},{"text":".then","level":4,"id":"26.then"},{"text":".catch","level":4,"id":"27.catch"},{"text":".finally","level":4,"id":"28.finally"},{"text":"실제 사용 예시","level":4,"id":"29실제 사용 예시"},{"text":"Promise Chaining","level":3,"id":"30Promise Chaining"},{"text":"또 다른 Promise를 소비 함수 안에서 반환하기","level":4,"id":"31또 다른 Promise를 소비 함수 안에서 반환하기"},{"text":"실제 예시","level":4,"id":"32실제 예시"},{"text":"참고 사항","level":4,"id":"33참고 사항"},{"text":"thenable","level":5,"id":"34thenable"},{"text":"fetch와 체이닝 함께 응용","level":3,"id":"35fetch와 체이닝 함께 응용"},{"text":"Promise와 Error Handling","level":3,"id":"36Promise와 Error Handling"},{"text":"암시적 try...catch","level":4,"id":"37암시적 try...catch"},{"text":"다시 던지기","level":4,"id":"38다시 던지기"},{"text":"처리되지 못한 거부","level":4,"id":"39처리되지 못한 거부"},{"text":"Promise API","level":3,"id":"40Promise API"},{"text":"Promise.all","level":4,"id":"41Promise.all"},{"text":"Promise.all의 에러 핸들링","level":5,"id":"42Promise.all의 에러 핸들링"},{"text":"Promise.allSettled","level":4,"id":"43Promise.allSettled"},{"text":"Promise.race","level":4,"id":"44Promise.race"},{"text":"Promise.resolve와 Promise.reject","level":4,"id":"45Promise.resolve와 Promise.reject"},{"text":"Promise.resolve","level":5,"id":"46Promise.resolve"},{"text":"Promise.resolve를 이용한 Promise allSettled의 폴리필","level":6,"id":"47Promise.resolve를 이용한 Promise allSettled의 폴리필"},{"text":"Promise.reject","level":5,"id":"48Promise.reject"},{"text":"Fetch: Abort","level":3,"id":"49Fetch: Abort"},{"text":"AbortController Object","level":4,"id":"50AbortController Object"},{"text":"fetch와 함께 사용","level":4,"id":"51fetch와 함께 사용"},{"text":"AbortController는 확장성 있다.","level":4,"id":"52AbortController는 확장성 있다."},{"text":"Promisification","level":3,"id":"53Promisification"},{"text":"Microtask 처리","level":3,"id":"54Microtask 처리"},{"text":"Microtask Queue","level":4,"id":"55Microtask Queue"},{"text":"처리되지 못한 거부","level":4,"id":"56처리되지 못한 거부"},{"text":"만약 catch를 나중에 처리한다면","level":5,"id":"57만약 catch를 나중에 처리한다면"},{"text":"async, await","level":2,"id":"58async, await"},{"text":"async function","level":3,"id":"59async function"},{"text":"await","level":3,"id":"60await"},{"text":"에러 핸들링","level":3,"id":"61에러 핸들링"},{"text":"비동기 관련 문제 풀이","level":1,"id":"62비동기 관련 문제 풀이"},{"text":"풀이","level":2,"id":"63풀이"},{"text":"마무리","level":1,"id":"64마무리"},{"text":"참고 문헌","level":1,"id":"65참고 문헌"}]}]
