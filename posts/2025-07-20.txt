1:"$Sreact.fragment"
2:I[3666,["394","static/chunks/394-b91d8f6e30fcd427.js","435","static/chunks/435-bb158c2b7f0ba197.js","949","static/chunks/949-eed38da14489ed63.js","918","static/chunks/918-feca51313013d693.js","177","static/chunks/app/layout-1852ad078f57dc7c.js"],"GoogleTagManager"]
3:I[2631,["394","static/chunks/394-b91d8f6e30fcd427.js","435","static/chunks/435-bb158c2b7f0ba197.js","949","static/chunks/949-eed38da14489ed63.js","918","static/chunks/918-feca51313013d693.js","177","static/chunks/app/layout-1852ad078f57dc7c.js"],"default"]
4:I[3361,["394","static/chunks/394-b91d8f6e30fcd427.js","435","static/chunks/435-bb158c2b7f0ba197.js","949","static/chunks/949-eed38da14489ed63.js","918","static/chunks/918-feca51313013d693.js","177","static/chunks/app/layout-1852ad078f57dc7c.js"],"SidebarProvider"]
5:I[1626,["394","static/chunks/394-b91d8f6e30fcd427.js","435","static/chunks/435-bb158c2b7f0ba197.js","949","static/chunks/949-eed38da14489ed63.js","918","static/chunks/918-feca51313013d693.js","177","static/chunks/app/layout-1852ad078f57dc7c.js"],"default"]
c:I[1190,["219","static/chunks/app/global-error-60351f376de6edaa.js"],"default"]
:HL["https://codefug.github.io/_next/static/media/518331124efecf5c-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["https://codefug.github.io/_next/static/css/44942cfddccb620b.css","style"]
:HL["https://codefug.github.io/_next/static/css/0944061766e538e2.css","style"]
:HL["https://codefug.github.io/_next/static/css/fc37ac2b1a278e8c.css","style"]
0:{"P":null,"b":"KDjhJ6SrMXe6NHDZiFl4c","p":"https://codefug.github.io","c":["","posts","2025-07-20"],"i":false,"f":[[["",{"children":["posts",{"children":[["id","2025-07-20","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/44942cfddccb620b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/0944061766e538e2.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"ko","suppressHydrationWarning":true,"children":[["$","$L2",null,{"gtmId":"$undefined"}],["$","body",null,{"className":"__className_75a1fa antialiased","children":["$","$L3",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"children":["$","$L4",null,{"defaultOpen":false,"children":[["$","$L5",null,{"totalFrontMatterList":[{"id":"2025-07-20","title":"집합","excerpt":"JS의 집합에 대해서 알아보자.","date":"2025-07-20","categories":["data-structure","javascript"],"header":{"teaser":"/images/2025-07-20/Pasted image 20250720151432.png"}},{"id":"2025-06-21","title":"트리","excerpt":"JS의 트리에 대해서 알아보자.","date":"2025-06-21","categories":["data-structure","javascript"],"header":{"teaser":"/images/2025-06-21/Pasted image 20250621101921.png"}},{"id":"2025-06-14","title":"해시","excerpt":"JS의 해시에 대해서 알아보자.","date":"2025-06-14","categories":["data-structure","javascript"],"header":{"teaser":"/images/2025-06-14/Pasted image 20250617224108.png"}},{"id":"2025-06-07","title":"큐","excerpt":"JS의 큐에 대해서 알아보자.","date":"2025-06-07","categories":["data-structure","javascript"],"header":{"teaser":"/images/2025-06-07/Pasted image 20250617212028.png"}},{"id":"2025-05-31","title":"스택","excerpt":"JS의 스택에 대해서 알아보자.","date":"2025-05-31","categories":["data-structure","javascript"],"header":{"teaser":"/images/2025-05-31/Pasted image 20250617080823.png"}},{"id":"2025-05-24","title":"배열","excerpt":"JS의 배열에 대해서 알아보자.","date":"2025-05-24","categories":["data-structure","javascript"],"header":{"teaser":"/images/2025-05-24/Pasted image 20250615181200.png"}},{"id":"2024-11-10","title":"Asynchronous JavaScript","excerpt":"microtask queue, macrotask queue, call stack, web api와 관련된 비동기 동작 방식, 비동기 관련 역사와 비동기 코드의 다양한 활용법들을 알아보자.","date":"2024-11-10","categories":["javascript"],"header":{"teaser":"/images/logos/JS.svg"}},{"id":"2024-09-14-4","title":"(꼼꼼 프로젝트) streaming 방식의 tanstack query","excerpt":"infinite scroll, optimistic update 그리고 streaming 방식이 결합된 쿼리 처리 ( useSuspenseQuery, useSuspenseInfiniteQuery )","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/tanstackQuery.png"}},{"id":"2024-09-14-3","title":"(꼼꼼 프로젝트) 클라이언트와 서버 둘다 호환되는 fetch 구현","excerpt":"서버 액션을 활용한 refresh token rotation, 커링 함수를 이용한 리팩토링","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/fetch.png"}},{"id":"2024-09-14-2","title":"(꼼꼼 프로젝트) startTransition, progress bar 구현에 대한 고민","excerpt":"progress bar 로직 연구하기(startTransition), next-nprogress-bar","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/nprogress.png"}},{"id":"2024-09-14-1","title":"(꼼꼼 프로젝트) toss slash 분석, zustand와 연결된 커스텀 overlay 훅 구현","excerpt":"stacking context, compound pattern, 전역 상태를 활용한다는 것의 의미, 토스 개발자 실력 흡수하기","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/toss.png"}},{"id":"2024-09-11","title":"(꼼꼼 프로젝트) 공통 버튼 컴포넌트의 종류를 쉽게 관리하고 누구나 쉽게 확인할 수 있게 하는 방법","excerpt":"tailwind로 조건부 처리를 간편하게 하는 방법, 비개발자도 스타일을 쉽게 확인할 수 있도록 storybook 연동","date":"2024-09-11","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/storybook.png"}},{"id":"2024-07-22-2","title":"(급페이 프로젝트) 개발환경에만 집중하기 위한 여정","excerpt":"접근 제한을 위한 미들웨어 처리, vercel CLI을 이용한 organization 무료 자동 배포, 프리뷰","date":"2024-07-22","categories":["gheuppay"],"header":{"teaser":"/images/logos/vercel.png"}},{"id":"2024-07-22-1","title":"(급페이 프로젝트) 알림창 무한 스크롤을 위한 여정 (mock fetching을 위한 MSW 도입기)","excerpt":"msw를 활용해서 프론트엔드 개발이 다 되어있지 않은 상태에서도 무한 스크롤 구현을 확인할 수 있게 되었습니다.","date":"2024-07-22","categories":["gheuppay"],"header":{"teaser":"/images/logos/msw.png"}},{"id":"2024-07-21","title":"(급페이 프로젝트) 카드 렌더링을 최적화하여 UX를 향상시키기 위한 머나먼 여정","excerpt":"server component 설계를 이용한 suspense 적극 활용, 이를 위해서 next cookie를 사용하면서 겪은 문제들을 적은 글입니다.","date":"2024-07-21","categories":["gheuppay"],"header":{"teaser":"/images/logos/next-cookie.png"}},{"id":"2024-06-18","title":"React Testing","excerpt":"React Testing Library, Vitest, Jest","date":"2024-06-18","categories":["reactdeepdive"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-06-17","title":"로그인 구현 (zustand, zod + react-hook-form, RTR)","excerpt":"zustand를 이용한 로그인 상태 전역 관리, zod를 이용한 간단한 스키마 전개, react-hook-form을 이용한 간단한 validation, axios를 이용한 간단한 api 요청 처리","date":"2024-06-17","categories":["react"],"header":{"teaser":"/images/logos/zod.png"}},{"id":"2024-06-15","title":"Dev tool","excerpt":"리액트 과거, 현재, 미래","date":"2024-06-15","categories":["web"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-06-14","title":"마이그레이션 중 발생한 Vite 환경 변수 처리","excerpt":"Vite_ENV","date":"2024-06-14","categories":["react"],"header":{"teaser":"/images/logos/react.png"}},{"id":"2024-06-10","title":"React Debugging","excerpt":"react-dev-tools 정리, 실습","date":"2024-06-10","categories":["react"],"header":{"teaser":"/images/logos/react.png"}},{"id":"2024-06-08","title":"자잘한 Next.js 트러블 슈팅들","excerpt":"react-responsive를 사용하지 못하는 상황, dotenv 사용시 문제 발생","date":"2024-06-08","categories":["nextjs"],"header":{"teaser":"/images/logos/Nextjs.png"}},{"id":"2024-05-31","title":"Next는 왜 쓸까","excerpt":"CSR SSG SSR","date":"2024-05-31","categories":["nextjs"],"header":{"teaser":"/images/logos/Nextjs.png"}},{"id":"2024-05-23","title":"리액트는 왜 쓸까","excerpt":"리액트 과거, 현재, 미래","date":"2024-05-23","categories":["react"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-05-22","title":"TS는 왜 쓸까 (위대한 TS)","excerpt":"JS를 완벽하게 하기 위한 여정","date":"2024-05-22","categories":["typescript"],"header":{"teaser":"/images/logos/TS.png"}},{"id":"2024-05-20","title":"Fandom-k 프로젝트 회고3","excerpt":"Github Actions, 최종 결과","date":"2024-05-20","categories":["fandomk"],"header":{"teaser":"/images/logos/githubActions.png"}},{"id":"2024-05-19","title":"Fandom-k 프로젝트 회고2","excerpt":"fetch, scroll to Top, infinite scroll 라이브러리 제거","date":"2024-05-19","categories":["fandomk"],"header":{"teaser":"/images/logos/fetch.png"}},{"id":"2024-05-18","title":"Fandom-k 프로젝트 회고1","excerpt":"팀 프로젝트 세팅, infinite scroll, skeleton","date":"2024-05-18","categories":["fandomk"],"header":{"teaser":"/images/logos/infinite-scroll.png"}}]}],"$L6"]}]}]}]]}]]}],{"children":["posts","$L7",{"children":[["id","2025-07-20","d"],"$L8",{"children":["__PAGE__","$L9",{},null,false]},null,false]},null,false]},["$La",[],[]],false],"$Lb",false]],"m":"$undefined","G":["$c",[]],"s":false,"S":true}
d:I[1092,["394","static/chunks/394-b91d8f6e30fcd427.js","435","static/chunks/435-bb158c2b7f0ba197.js","949","static/chunks/949-eed38da14489ed63.js","918","static/chunks/918-feca51313013d693.js","177","static/chunks/app/layout-1852ad078f57dc7c.js"],"default"]
e:I[20,[],""]
f:I[9362,[],""]
10:I[2949,["949","static/chunks/949-eed38da14489ed63.js","345","static/chunks/app/not-found-9b7b6992e1e9de86.js"],""]
11:I[2678,["507","static/chunks/app/posts/%5Bid%5D/layout-871d8c40d0efc4d3.js"],"default"]
13:I[4580,[],"OutletBoundary"]
15:I[2508,[],"AsyncMetadataOutlet"]
17:I[6394,["394","static/chunks/394-b91d8f6e30fcd427.js","435","static/chunks/435-bb158c2b7f0ba197.js","949","static/chunks/949-eed38da14489ed63.js","880","static/chunks/app/posts/%5Bid%5D/page-9e5a802efb5bf832.js"],"Image"]
18:I[4580,[],"ViewportBoundary"]
1a:I[4580,[],"MetadataBoundary"]
1b:"$Sreact.suspense"
6:["$","$Ld",null,{"children":["$","$Le",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lf",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"children":[["$","h2",null,{"children":"Not Found"}],["$","p",null,{"children":"잘못된 페이지에요!"}],["$","$L10",null,{"href":"/","children":"홈으로 돌아가기"}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]
7:["$","$1","c",{"children":[null,["$","$Le",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lf",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
8:["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/fc37ac2b1a278e8c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","div",null,{"className":"prose mx-auto mb-10 overflow-auto dark:prose-invert","children":[["$","$Le",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lf",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}],["$","$L11",null,{}]]}]]}]
9:["$","$1","c",{"children":["$L12",null,["$","$L13",null,{"children":["$L14",["$","$L15",null,{"promise":"$@16"}]]}]]}]
a:["$","div","l",{"className":"flex h-full items-center justify-center","children":["$","div",null,{"className":"flex flex-col items-center","children":[["$","div",null,{"className":"scale-[1.15] animate-pulse transition-transform","children":["$","$L17",null,{"src":"/images/main-logo.png","alt":"로딩 중...","width":120,"height":120,"className":"drop-shadow-lg"}]}],["$","p",null,{"className":"mt-6 animate-pulse text-lg font-bold text-gray-600","children":"Codefug Blog"}]]}]}]
b:["$","$1","h",{"children":[null,[["$","$L18",null,{"children":"$L19"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$L1a",null,{"children":["$","div",null,{"hidden":true,"children":["$","$1b",null,{"fallback":null,"children":"$L1c"}]}]}]]}]
19:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
14:null
1d:I[4612,[],"IconMark"]
16:{"metadata":[["$","title","0",{"children":"Codefug Blog"}],["$","meta","1",{"name":"description","content":"프로젝트 경험과 개발 노트를 공유하는 블로그"}],["$","meta","2",{"name":"author","content":"Codefug"}],["$","meta","3",{"name":"keywords","content":"개발,프로그래밍,React,Next.js,JavaScript,TypeScript,블로그"}],["$","meta","4",{"name":"creator","content":"Codefug"}],["$","meta","5",{"name":"publisher","content":"Codefug"}],["$","meta","6",{"property":"og:title","content":"Codefug Blog"}],["$","meta","7",{"property":"og:description","content":"project experiences and development notes"}],["$","meta","8",{"property":"og:url","content":"https://codefug-blog.vercel.app"}],["$","meta","9",{"property":"og:image","content":"https://codefug.github.io/images/main-logo.png"}],["$","meta","10",{"property":"og:image:alt","content":"Codefug Blog"}],["$","meta","11",{"property":"og:type","content":"website"}],["$","meta","12",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","13",{"name":"twitter:title","content":"Codefug Blog"}],["$","meta","14",{"name":"twitter:description","content":"project experiences and development notes"}],["$","meta","15",{"name":"twitter:image","content":"https://codefug.github.io/images/main-logo.png"}],["$","meta","16",{"name":"twitter:image:alt","content":"Codefug Blog"}],["$","link","17",{"rel":"icon","href":"/icon.ico?f00882ffa3186f37","type":"image/x-icon","sizes":"16x16"}],["$","$L1d","18",{}]],"error":null,"digest":"$undefined"}
1c:"$16:metadata"
1e:I[1335,["394","static/chunks/394-b91d8f6e30fcd427.js","435","static/chunks/435-bb158c2b7f0ba197.js","949","static/chunks/949-eed38da14489ed63.js","880","static/chunks/app/posts/%5Bid%5D/page-9e5a802efb5bf832.js"],"GtmPageView"]
1f:I[9891,["394","static/chunks/394-b91d8f6e30fcd427.js","435","static/chunks/435-bb158c2b7f0ba197.js","949","static/chunks/949-eed38da14489ed63.js","880","static/chunks/app/posts/%5Bid%5D/page-9e5a802efb5bf832.js"],"default"]
12:["$","section",null,{"children":[["$","$L1e",null,{"slug":"2025-07-20"}],["$","header",null,{"className":"mb-8","children":[["$","div",null,{"className":"relative mb-6 h-[300px] w-full overflow-hidden rounded-xl sm:h-[400px] md:h-[450px]","children":[["$","$L17",null,{"src":"/images/2025-07-20/Pasted image 20250720151432.png","alt":"집합","fill":true,"sizes":"(max-width: 768px) 100vw, 1200px","priority":true,"className":"object-cover object-center transition-transform duration-500 hover:scale-105"}],["$","div",null,{"className":"absolute inset-0 bg-gradient-to-b from-transparent to-black/70"}],["$","div",null,{"className":"absolute left-4 top-4 flex flex-wrap gap-2 sm:left-6 sm:top-6","children":[["$","div","data-structure",{"className":"inline-flex items-center rounded-md border px-2.5 py-0.5 transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-white/90 text-xs font-medium text-gray-800 hover:bg-white sm:text-sm","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag mr-1 h-3 w-3","children":[["$","path","vktsd0",{"d":"M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z"}],["$","circle","kqv944",{"cx":"7.5","cy":"7.5","r":".5","fill":"currentColor"}],"$undefined"]}]," ","data-structure"]}],["$","div","javascript",{"className":"inline-flex items-center rounded-md border px-2.5 py-0.5 transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-white/90 text-xs font-medium text-gray-800 hover:bg-white sm:text-sm","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag mr-1 h-3 w-3","children":[["$","path","vktsd0",{"d":"M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z"}],["$","circle","kqv944",{"cx":"7.5","cy":"7.5","r":".5","fill":"currentColor"}],"$undefined"]}]," ","javascript"]}]]}]]}],["$","div",null,{"className":"mb-6 space-y-4","children":[["$","h1",null,{"className":"mb-0 text-3xl font-bold tracking-tight text-gray-900 dark:text-gray-50 sm:text-4xl md:text-5xl","children":"집합"}],["$","div",null,{"className":"flex items-center justify-end gap-4 text-sm text-gray-600 dark:text-gray-400","children":["$","div",null,{"className":"flex items-center","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar-days mr-2 h-4 w-4","children":[["$","path","1cmpym",{"d":"M8 2v4"}],["$","path","4m81vk",{"d":"M16 2v4"}],["$","rect","1hopcy",{"width":"18","height":"18","x":"3","y":"4","rx":"2"}],["$","path","8toen8",{"d":"M3 10h18"}],["$","path","6423bh",{"d":"M8 14h.01"}],["$","path","1etili",{"d":"M12 14h.01"}],["$","path","1gbofw",{"d":"M16 14h.01"}],["$","path","lrp35t",{"d":"M8 18h.01"}],["$","path","mhygvu",{"d":"M12 18h.01"}],["$","path","kzsmim",{"d":"M16 18h.01"}],"$undefined"]}],["$","time",null,{"dateTime":"2025-07-20","children":"2025-07-20"}]]}]}],["$","p",null,{"className":"text-lg leading-relaxed text-gray-600 dark:text-gray-300 md:text-xl","children":"JS의 집합에 대해서 알아보자."}]]}],["$","div",null,{"className":"border-b border-gray-200 dark:border-gray-800"}]]}],["$","section",null,{"className":"lg:flex lg:items-baseline","children":[["$","$L1f",null,{}],["$","section",null,{"className":"max-w-full","children":[["$","h1",null,{"id":0,"className":"hltr-red","children":"개념"}],"\n",["$","p",null,{"children":["집합: ",["$","strong",null,{"children":"순서"}],"와 ",["$","strong",null,{"children":"중복"}],"이 없는 원소들을 갖는 자료구조"]}],"\n",["$","h2",null,{"id":1,"className":"hltr-orange","children":"집합의 종류"}],"\n",["$","p",null,{"children":"특성에 따라 부르는 말이 다양합니다."}],"\n",["$","table",null,{"children":["$L20","$L21"]}],"\n","$L22","\n","$L23","\n","$L24","\n","$L25","\n","$L26","\n","$L27","\n","$L28","\n","$L29","\n","$L2a","\n","$L2b","\n","$L2c","\n","$L2d","\n","$L2e","\n","$L2f","\n","$L30","\n","$L31","\n","$L32","\n","$L33","\n","$L34","\n","$L35","\n","$L36","\n","$L37","\n","$L38","\n","$L39","\n","$L3a","\n","$L3b","\n","$L3c","\n","$L3d","\n","$L3e","\n","$L3f","\n","$L40","\n","$L41","\n","$L42","\n","$L43","\n","$L44","\n","$L45","\n","$L46","\n","$L47","\n","$L48","\n","$L49","\n","$L4a","\n","$L4b","\n","$L4c","\n","$L4d","\n","$L4e","\n","$L4f","\n","$L50","\n","$L51","\n","$L52","\n","$L53","\n","$L54","\n","$L55","\n","$L56","\n","$L57","\n","$L58","\n","$L59","\n","$L5a","\n","$L5b","\n","$L5c","\n","$L5d"]}]]}]]}]
20:["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"이름"}],["$","th",null,{"style":{"textAlign":"left"},"children":"설명"}]]}]}]
21:["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":"유한 집합"}],["$","td",null,{"style":{"textAlign":"left"},"children":"원소의 개수가 유한한 집합"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"무한 집합"}],["$","td",null,{"style":{"textAlign":"left"},"children":"원소의 개수가 무한한 집합"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"공집합"}],["$","td",null,{"style":{"textAlign":"left"},"children":"아무 원소도 없는 집합"}]]}]]}]
22:["$","p",null,{"children":["수학적으로는 더 많은 집합들이 있겠지만 ",["$","strong",null,{"children":"상호배타적 집합"}],"에 집중해봅시다."]}]
23:["$","h3",null,{"id":2,"className":"hltr-yellow","children":"상호배타적 집합"}]
24:["$","p",null,{"children":["교집합이 없는 집합 관계\n",["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720145721.png","alt":""}]]}]
25:["$","p",null,{"children":["위 그림은 A=",3,", B=",7,"을 나타낸 그림입니다. A와 B는 겹치는 원소가 없으므로 교집합이 없다고 볼 수 있죠."]}]
26:["$","p",null,{"children":[["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720145823.png","alt":""}],"\n만약 공통 원소가 있으면 상호배타적 집합에 해당하지 않아요."]}]
27:["$","h2",null,{"id":3,"className":"hltr-orange","children":"활용 분야"}]
28:["$","p",null,{"children":"흔히 코딩 테스트에서는 그래프 알고리즘에서 상호배타적 집합을 많이 활용합니다. 사이클을 확인할 때 상호배타적인지를 확인하면 되기 때문이죠. ( 무방향 그래프에서만 해당합니다. )"}]
29:["$","p",null,{"children":"이외에도 다음과 같은 활용도가 있어요."}]
2a:["$","ol",null,{"children":["\n",["$","li",null,{"children":"이미지 분할: 사람과 배경의 구분"}],"\n",["$","li",null,{"children":"도로 네트워크 구성: 도로가 교차하지 않도록 설계"}],"\n",["$","li",null,{"children":"최소 신장 트리 알고리즘: 간선을 추가할 때 사이클 형성 여부 체크"}],"\n",["$","li",null,{"children":"게임 개발: 플레이어와 적군이 충돌할 때 겹치지 않도록 구분"}],"\n",["$","li",null,{"children":"클러스터링 작업: 작업이 겹치지 않도록 구성"}],"\n"]}]
2b:["$","h2",null,{"id":4,"className":"hltr-orange","children":"구현"}]
2c:["$","p",null,{"children":["보통 집합은 트리로 표현되며 대표적인 연산은 ",["$","strong",null,{"children":"Union"}],"과 ",["$","strong",null,{"children":"Find"}],"가 있습니다. 우선 집합을 어떻게 표현하는지부터 살펴봅시다."]}]
2d:["$","h3",null,{"id":5,"className":"hltr-yellow","children":"배열을 활용한 트리로 집합 표현"}]
2e:["$","p",null,{"children":"배열을 활용하여 집합을 표현하기 위해선 각 집합에 대표 원소가 있어야 합니다."}]
2f:["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"대표 원소"}]}],"\n",["$","p",null,{"children":"집합의 원소 중 집합을 대표하는 역할\n개념적으로 집합의 대표 원소와 트리의 루트 노드는 같다."}],"\n"]}]
30:["$","p",null,{"children":"하나의 배열에 집합을 모두 표현하려면 다음의 법칙을 따라야 합니다."}]
31:["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"배열의 인덱스"}],"는 ",["$","strong",null,{"children":"자신"}],", ",["$","strong",null,{"children":"배열값"}],"은 ",["$","strong",null,{"children":"부모 노드"}],"를 의미한다."]}],"\n"]}]
32:["$","p",null,{"children":["예를들면 ",["$","code",null,{"children":"set[3] = 9"}]," 라면 노드 3의 부모는 9임을 의미하는 것이죠. 루트 노드의 경우에는 부모가 없기에 본인의 인덱스를 그대로 값으로 내려줍니다."]}]
33:["$","p",null,{"children":["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720151103.png","alt":""}]}]
34:["$","p",null,{"children":"이렇게 되면 자연스럽게 배열의 최소 크기는 원소 중에서 가장 큰 값보다 1 큰 값이 됩니다."}]
35:["$","h4",null,{"id":6,"className":"hltr-green","children":"예시"}]
36:["$","p",null,{"children":"루트 노드만 잘 관리하면 여러 개의 집합을 하나의 배열로 표현할 수 있게 됩니다. (집합의 개수는 루트 노드의 개수)"}]
37:["$","p",null,{"children":["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720151432.png","alt":""}]}]
38:["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"0"}],["$","th",null,{"children":"1"}],["$","th",null,{"children":"2"}],["$","th",null,{"children":"3"}],["$","th",null,{"children":"4"}],["$","th",null,{"children":"5"}],["$","th",null,{"children":"6"}],["$","th",null,{"children":"7"}],["$","th",null,{"children":"8"}],["$","th",null,{"children":"9"}]]}]}],["$","tbody",null,{"children":["$","tr",null,{"children":[["$","td",null,{"children":"null"}],["$","td",null,{"children":"1"}],["$","td",null,{"children":"1"}],["$","td",null,{"children":"2"}],["$","td",null,{"children":"4"}],["$","td",null,{"children":"1"}],["$","td",null,{"children":"null"}],["$","td",null,{"children":"null"}],["$","td",null,{"children":"4"}],["$","td",null,{"children":"3"}]]}]}]]}]
39:["$","h4",null,{"id":7,"className":"hltr-green","children":"구현 과정"}]
3a:["$","h5",null,{"id":8,"className":"hltr-cyan","children":"1. 초기 상태"}]
3b:["$","p",null,{"children":["초기 상태는 자기 자신을 루트 노드로 설정한 상태입니다. 집합에 없는 인덱스의 값은 -1로 임의로 정해봅시다.\n",["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720152506.png","alt":""}],"\n아래 집합 부분과 같이 각 원소들이 전부 루트 노드로 표현되고 있어요. ( 인덱스와 값이 같음 )"]}]
3c:["$","h5",null,{"id":9,"className":"hltr-cyan","children":"2. 집합 연결"}]
3d:["$","p",null,{"children":[["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720152949.png","alt":""}],"\n주어진 집합을 기준으로 적용하면 위와 같이 구성됩니다. 만약 노드 9가 루트 노드가 1인 집합 A에 속하는지 루트 노드가 4인 집합 B에 속하는지 확인하려면 ",["$","code",null,{"children":"set[9]=3 set[3]=2 set[2]=1 set[1]=1"}],"의 방향으로 탐색하면 돼요."]}]
3e:["$","p",null,{"children":"집합 자체를 주로 어떤 방식으로 구현하는지 확인해봤습니다. 이제 이 집합으로 어떤 연산을 하는지 확인해봅시다."}]
3f:["$","h3",null,{"id":10,"className":"hltr-yellow","children":"유니온-파인드 알고리즘"}]
40:["$","p",null,{"children":["$","strong",null,{"children":"union-find algorithm"}]}]
41:["$","p",null,{"children":"집합 알고리즘에 주로 쓰이는 연산은 합치기(union)와 탐색(find)입니다."}]
42:["$","h4",null,{"id":11,"className":"hltr-green","children":"find"}]
43:["$","p",null,{"children":"특정 노드의 루트 노드가 무엇인지 탐색하는 방법"}]
44:["$","p",null,{"children":"특정 노드부터 재귀로 거슬러 올라가며 루트 노드를 찾습니다."}]
45:["$","ol",null,{"children":["\n",["$","li",null,{"children":"현재 노드의 부모 노드를 확인"}],"\n",["$","li",null,{"children":"확인하다가 부모 노드가 루트 노드면 찾기 연산 종료"}],"\n"]}]
46:["$","p",null,{"children":["예시를 들어봅시다.\n",["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720153703.png","alt":""}],"\nfind(7)로 노드 7의 루트 노드를 찾아봅시다."]}]
47:["$","p",null,{"children":[["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720153835.png","alt":""}],"\n값을 인덱스로 바꾸면서 부모 노드로 올라가는 과정을 거치면서 값과 인덱스가 같은 노드(루트 노드)가 나올 때까지 반복해줍니다. find(7)은 다음의 과정을 거쳐서 루트 노드를 찾게 됩니다."]}]
48:["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":["set[",["$","span",null,{"className":"hljs-number","children":"7"}],"] = ",["$","span",null,{"className":"hljs-number","children":"6"}],";\nset[",["$","span",null,{"className":"hljs-number","children":"6"}],"] = ",["$","span",null,{"className":"hljs-number","children":"2"}],";\nset[",["$","span",null,{"className":"hljs-number","children":"2"}],"] = ",["$","span",null,{"className":"hljs-number","children":"1"}],";\nset[",["$","span",null,{"className":"hljs-number","children":"1"}],"] = ",["$","span",null,{"className":"hljs-number","children":"1"}],"; ",["$","span",null,{"className":"hljs-comment","children":"// 값과 인덱스가 같음 ( 찾음 )"}],"\n"]}]}]
49:["$","p",null,{"children":["하지만 이는 최악의 경우의 시간 복잡도가 ",["$","strong",null,{"children":"O"}],"(N)입니다.\n",["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720154108.png","alt":""}],"\n좀 더 최적화하기 위해 경로 압축을 활용할 수 있습니다."]}]
4a:["$","h5",null,{"id":12,"className":"hltr-cyan","children":"경로 압축"}]
4b:["$","p",null,{"children":["효율적인 find 연산을 위해서는 집합 형태를 유지하면서도 트리 높이를 줄이는 방식을 사용하면 됩니다.\n",["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720154301.png","alt":""}]]}]
4c:["$","p",null,{"children":["파인드 연산이 목표로 하는 것은 ",["$","strong",null,{"children":"루트 노드"}],"를 찾는 것이기에 루트 노드만 넣어둬서 최적화하는 방식인 것이죠."]}]
4d:["$","h4",null,{"id":13,"className":"hltr-green","children":"Union"}]
4e:["$","p",null,{"children":["두 집합을 하나로 합치는 연산, 두 집합의 ",["$","strong",null,{"children":"루트 노드"}],"를 같게 만드는 것입니다."]}]
4f:["$","ol",null,{"children":["\n",["$","li",null,{"children":"두 집합에서 find 연산을 통해 루트 노드를 찾습니다."}],"\n",["$","li",null,{"children":"찾은 두 루트 노드의 값을 비교합니다."}],"\n",["$","li",null,{"children":"두 집합을 합칩니다. (두 집합의 루트 노드를 같게 만듭니다.)"}],"\n"]}]
50:["$","p",null,{"children":["두 집합이 있다고 했을 때\n",["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720154725.png","alt":""}]]}]
51:["$","p",null,{"children":["find 연산으로 두 집합의 루트 노드를 찾은 후에\n",["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720154749.png","alt":""}]]}]
52:["$","p",null,{"children":["집합 A의 루트 노드 1을 루트 노드로 지정하고 집합 B의 루트 노드 2를 그 자식으로 두면 집합을 하나로 만들 수 있어요.\n",["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720154828.png","alt":""}]]}]
53:["$","p",null,{"children":"하지만 Union 연산은 트리의 깊이가 깊어지면 깊어질수록 연산 비용이 커진다는 단점이 있습니다."}]
54:["$","p",null,{"children":["이를 해결하기 위해 ",["$","strong",null,{"children":"랭크"}]," 라는 개념을 도입할 수 있어요."]}]
55:["$","h5",null,{"id":14,"className":"hltr-cyan","children":"랭크"}]
56:["$","p",null,{"children":["현재 노드를 기준으로 하였을 때 가장 깊은 노드까지의 경로 길이\n",["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720155206.png","alt":""}]]}]
57:["$","p",null,{"children":"랭크를 기반으로 Union 연산을 진행하면 다음과 같은 과정을 거쳐요."}]
58:["$","ol",null,{"children":["\n",["$","li",null,{"children":"두 노드의 루트 노드를 구해요. ( find )"}],"\n",["$","li",null,{"children":["루트 노드의 ",["$","strong",null,{"children":"랭크"}],"를 다음의 논리로 ",["$","strong",null,{"children":"비교"}],"합니다..","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"랭크값이 다르면"}]," 랭크값이 더 큰 루트 노드를 작은 루트 노드의 부모 노드로 바꿉니다. ( 트리의 깊이는 더 깊어지지 않는다. )"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"랭크값이 같으면"}]," 루트 노드를 아무거나 선택해서 바꾸고 최종 루트 노드의 랭크에 1을 더합니다."]}],"\n"]}],"\n"]}],"\n"]}]
59:["$","p",null,{"children":["그림으로 설명해보면 두 집합이 있을 때\n",["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720155543.png","alt":""}]]}]
5a:["$","p",null,{"children":["집합 A의 루트 노드 1의 ",["$","code",null,{"children":"랭크 2"}]," 와 집합 B의 루트 노드 5의 ",["$","code",null,{"children":"랭크 1"}],"을 비교합니다. 집합 A가 랭크가 더 크기 때문에 앞서 설명한 논리 1번에 의해서 집합 A의 루트 노드를 부모로, 집합 B의 루트 노드를 자식으로 연결하고 랭크는 바꾸지 않습니다.\n",["$","img",null,{"src":"/images/2025-07-20/Pasted%20image%2020250720155804.png","alt":""}]]}]
5b:["$","h1",null,{"id":15,"className":"hltr-red","children":"참고 문헌"}]
5c:["$","p",null,{"children":["$","a",null,{"href":"https://product.kyobobook.co.kr/detail/S000213641007","children":"https://product.kyobobook.co.kr/detail/S000213641007"}]}]
5d:["$","blockquote",null,{"className":"bg-quote-gray border-gray-500 rounded-xl border-y border-r border-y-gray-400 border-r-gray-400 border-opacity-30 p-4 not-italic","children":[["$","div",null,{"className":"text-gray-500 flex items-center gap-1 text-lg font-bold md:text-2xl","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-notepad-text","children":[["$","path","1cmpym",{"d":"M8 2v4"}],["$","path","3427ic",{"d":"M12 2v4"}],["$","path","4m81vk",{"d":"M16 2v4"}],["$","rect","1u9h20",{"width":"16","height":"18","x":"4","y":"4","rx":"2"}],["$","path","3oa6kw",{"d":"M8 10h6"}],["$","path","1fgep2",{"d":"M8 14h8"}],["$","path","17enja",{"d":"M8 18h5"}],"$undefined"]}],["$","div",null,{"children":"SUMMARY"}]]}],["$","section",null,{"className":"text-sm font-semibold text-black md:text-base","children":["\n",["$","p",null,{"children":"알고리즘은 꾸준히 공부해주지 않으면 개념들이 유독 빠르게 사라지는 것 같아요.\n사라지면 다시 채워넣을 수 있도록 꾸준히 공부해보겠습니다.\n잘못된 지식이 있다면 댓글 부탁드려요!"}],"\n",["$","p",null,{"children":"읽어주셔서 감사해요."}],"\n"]}]]}]
