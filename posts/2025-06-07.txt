1:"$Sreact.fragment"
2:I[1152,["893","static/chunks/893-1af1c230473151df.js","460","static/chunks/460-7903e3149ee4c004.js","252","static/chunks/252-c4d5671b15cb4929.js","203","static/chunks/203-05217b8f6621587d.js","843","static/chunks/843-bbd2e2ac43df39f2.js","177","static/chunks/app/layout-9250f22f01bbf6c6.js"],"GoogleTagManager"]
3:I[4953,["893","static/chunks/893-1af1c230473151df.js","460","static/chunks/460-7903e3149ee4c004.js","252","static/chunks/252-c4d5671b15cb4929.js","203","static/chunks/203-05217b8f6621587d.js","843","static/chunks/843-bbd2e2ac43df39f2.js","177","static/chunks/app/layout-9250f22f01bbf6c6.js"],"default"]
4:I[3777,["893","static/chunks/893-1af1c230473151df.js","460","static/chunks/460-7903e3149ee4c004.js","252","static/chunks/252-c4d5671b15cb4929.js","203","static/chunks/203-05217b8f6621587d.js","843","static/chunks/843-bbd2e2ac43df39f2.js","177","static/chunks/app/layout-9250f22f01bbf6c6.js"],"SidebarProvider"]
5:I[3577,["893","static/chunks/893-1af1c230473151df.js","460","static/chunks/460-7903e3149ee4c004.js","252","static/chunks/252-c4d5671b15cb4929.js","203","static/chunks/203-05217b8f6621587d.js","843","static/chunks/843-bbd2e2ac43df39f2.js","177","static/chunks/app/layout-9250f22f01bbf6c6.js"],"default"]
6:I[5440,["893","static/chunks/893-1af1c230473151df.js","460","static/chunks/460-7903e3149ee4c004.js","252","static/chunks/252-c4d5671b15cb4929.js","203","static/chunks/203-05217b8f6621587d.js","843","static/chunks/843-bbd2e2ac43df39f2.js","177","static/chunks/app/layout-9250f22f01bbf6c6.js"],"default"]
7:I[2329,[],""]
8:I[3725,[],""]
9:I[6252,["252","static/chunks/252-c4d5671b15cb4929.js","345","static/chunks/app/not-found-510f3dec4e3d85ef.js"],""]
a:I[9816,["507","static/chunks/app/posts/%5Bid%5D/layout-40b38b2a946b4cd6.js"],"default"]
c:I[2207,[],"MetadataBoundary"]
e:I[2207,[],"OutletBoundary"]
11:I[2533,[],"AsyncMetadataOutlet"]
13:I[4893,["893","static/chunks/893-1af1c230473151df.js","460","static/chunks/460-7903e3149ee4c004.js","252","static/chunks/252-c4d5671b15cb4929.js","880","static/chunks/app/posts/%5Bid%5D/page-a9de55f97c60b056.js"],"Image"]
14:I[2207,[],"ViewportBoundary"]
16:I[923,["219","static/chunks/app/global-error-b850cc9c33842b8e.js"],"default"]
:HL["https://codefug.github.io/_next/static/media/518331124efecf5c-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["https://codefug.github.io/_next/static/css/b4bcb52feb7ee4f0.css","style"]
:HL["https://codefug.github.io/_next/static/css/7b1838e6bdc2260c.css","style"]
:HL["https://codefug.github.io/_next/static/css/fc37ac2b1a278e8c.css","style"]
0:{"P":null,"b":"l4SKxb-XwYLvac2SYCqHs","p":"https://codefug.github.io","c":["","posts","2025-06-07"],"i":false,"f":[[["",{"children":["posts",{"children":[["id","2025-06-07","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/b4bcb52feb7ee4f0.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/7b1838e6bdc2260c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","$L2",null,{"gtmId":"$undefined"}],["$","body",null,{"className":"__className_7ee20e antialiased","children":["$","$L3",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"children":["$","$L4",null,{"defaultOpen":false,"children":[["$","$L5",null,{"totalFrontMatterList":[{"id":"2025-06-14","title":"해시","excerpt":"JS의 해시에 대해서 알아보자.","date":"2025-06-14","categories":["data-structure","javascript"],"header":{"teaser":"/images/2025-06-14/Pasted image 20250617224108.png"}},{"id":"2025-06-07","title":"큐","excerpt":"JS의 큐에 대해서 알아보자.","date":"2025-06-07","categories":["data-structure","javascript"],"header":{"teaser":"/images/2025-06-07/Pasted image 20250617212028.png"}},{"id":"2025-05-31","title":"스택","excerpt":"JS의 스택에 대해서 알아보자.","date":"2025-05-31","categories":["data-structure","javascript"],"header":{"teaser":"/images/2025-05-31/Pasted image 20250617080823.png"}},{"id":"2025-05-24","title":"배열","excerpt":"JS의 배열에 대해서 알아보자.","date":"2025-05-24","categories":["data-structure","javascript"],"header":{"teaser":"/images/2025-05-24/Pasted image 20250615181200.png"}},{"id":"2024-11-10","title":"Asynchronous JavaScript","excerpt":"microtask queue, macrotask queue, call stack, web api와 관련된 비동기 동작 방식, 비동기 관련 역사와 비동기 코드의 다양한 활용법들을 알아보자.","date":"2024-11-10","categories":["javascript"],"header":{"teaser":"/images/logos/JS.svg"}},{"id":"2024-09-14-4","title":"(꼼꼼 프로젝트) streaming 방식의 tanstack query","excerpt":"infinite scroll, optimistic update 그리고 streaming 방식이 결합된 쿼리 처리 ( useSuspenseQuery, useSuspenseInfiniteQuery )","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/tanstackQuery.png"}},{"id":"2024-09-14-3","title":"(꼼꼼 프로젝트) 클라이언트와 서버 둘다 호환되는 fetch 구현","excerpt":"서버 액션을 활용한 refresh token rotation, 커링 함수를 이용한 리팩토링","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/fetch.png"}},{"id":"2024-09-14-2","title":"(꼼꼼 프로젝트) startTransition, progress bar 구현에 대한 고민","excerpt":"progress bar 로직 연구하기(startTransition), next-nprogress-bar","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/nprogress.png"}},{"id":"2024-09-14-1","title":"(꼼꼼 프로젝트) toss slash 분석, zustand와 연결된 커스텀 overlay 훅 구현","excerpt":"stacking context, compound pattern, 전역 상태를 활용한다는 것의 의미, 토스 개발자 실력 흡수하기","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/toss.png"}},{"id":"2024-09-11","title":"(꼼꼼 프로젝트) 공통 버튼 컴포넌트의 종류를 쉽게 관리하고 누구나 쉽게 확인할 수 있게 하는 방법","excerpt":"tailwind로 조건부 처리를 간편하게 하는 방법, 비개발자도 스타일을 쉽게 확인할 수 있도록 storybook 연동","date":"2024-09-11","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/storybook.png"}},{"id":"2024-07-22-2","title":"(급페이 프로젝트) 개발환경에만 집중하기 위한 여정","excerpt":"접근 제한을 위한 미들웨어 처리, vercel CLI을 이용한 organization 무료 자동 배포, 프리뷰","date":"2024-07-22","categories":["gheuppay"],"header":{"teaser":"/images/logos/vercel.png"}},{"id":"2024-07-22-1","title":"(급페이 프로젝트) 알림창 무한 스크롤을 위한 여정 (mock fetching을 위한 MSW 도입기)","excerpt":"msw를 활용해서 프론트엔드 개발이 다 되어있지 않은 상태에서도 무한 스크롤 구현을 확인할 수 있게 되었습니다.","date":"2024-07-22","categories":["gheuppay"],"header":{"teaser":"/images/logos/msw.png"}},{"id":"2024-07-21","title":"(급페이 프로젝트) 카드 렌더링을 최적화하여 UX를 향상시키기 위한 머나먼 여정","excerpt":"server component 설계를 이용한 suspense 적극 활용, 이를 위해서 next cookie를 사용하면서 겪은 문제들을 적은 글입니다.","date":"2024-07-21","categories":["gheuppay"],"header":{"teaser":"/images/logos/next-cookie.png"}},{"id":"2024-06-18","title":"React Testing","excerpt":"React Testing Library, Vitest, Jest","date":"2024-06-18","categories":["reactdeepdive"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-06-17","title":"로그인 구현 (zustand, zod + react-hook-form, RTR)","excerpt":"zustand를 이용한 로그인 상태 전역 관리, zod를 이용한 간단한 스키마 전개, react-hook-form을 이용한 간단한 validation, axios를 이용한 간단한 api 요청 처리","date":"2024-06-17","categories":["react"],"header":{"teaser":"/images/logos/zod.png"}},{"id":"2024-06-15","title":"Dev tool","excerpt":"리액트 과거, 현재, 미래","date":"2024-06-15","categories":["web"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-06-14","title":"마이그레이션 중 발생한 Vite 환경 변수 처리","excerpt":"Vite_ENV","date":"2024-06-14","categories":["react"],"header":{"teaser":"/images/logos/react.png"}},{"id":"2024-06-10","title":"React Debugging","excerpt":"react-dev-tools 정리, 실습","date":"2024-06-10","categories":["react"],"header":{"teaser":"/images/logos/react.png"}},{"id":"2024-06-08","title":"자잘한 Next.js 트러블 슈팅들","excerpt":"react-responsive를 사용하지 못하는 상황, dotenv 사용시 문제 발생","date":"2024-06-08","categories":["nextjs"],"header":{"teaser":"/images/logos/Nextjs.png"}},{"id":"2024-05-31","title":"Next는 왜 쓸까","excerpt":"CSR SSG SSR","date":"2024-05-31","categories":["nextjs"],"header":{"teaser":"/images/logos/Nextjs.png"}},{"id":"2024-05-23","title":"리액트는 왜 쓸까","excerpt":"리액트 과거, 현재, 미래","date":"2024-05-23","categories":["react"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-05-22","title":"TS는 왜 쓸까 (위대한 TS)","excerpt":"JS를 완벽하게 하기 위한 여정","date":"2024-05-22","categories":["typescript"],"header":{"teaser":"/images/logos/TS.png"}},{"id":"2024-05-20","title":"Fandom-k 프로젝트 회고3","excerpt":"Github Actions, 최종 결과","date":"2024-05-20","categories":["fandomk"],"header":{"teaser":"/images/logos/githubActions.png"}},{"id":"2024-05-19","title":"Fandom-k 프로젝트 회고2","excerpt":"fetch, scroll to Top, infinite scroll 라이브러리 제거","date":"2024-05-19","categories":["fandomk"],"header":{"teaser":"/images/logos/fetch.png"}},{"id":"2024-05-18","title":"Fandom-k 프로젝트 회고1","excerpt":"팀 프로젝트 세팅, infinite scroll, skeleton","date":"2024-05-18","categories":["fandomk"],"header":{"teaser":"/images/logos/infinite-scroll.png"}}]}],["$","$L6",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"children":[["$","h2",null,{"children":"Not Found"}],["$","p",null,{"children":"잘못된 페이지에요!"}],["$","$L9",null,{"href":"/","children":"홈으로 돌아가기"}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]}]}]]}]]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L7",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["id","2025-06-07","d"],["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/fc37ac2b1a278e8c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","div",null,{"className":"prose mx-auto overflow-auto dark:prose-invert","children":[["$","$L7",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}],["$","$La",null,{}]]}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$Lb",["$","$Lc",null,{"children":"$Ld"}],null,["$","$Le",null,{"children":["$Lf","$L10",["$","$L11",null,{"promise":"$@12"}]]}]]}],{},null,false]},null,false]},null,false]},[["$","div","l",{"className":"flex h-full items-center justify-center","children":["$","div",null,{"className":"flex flex-col items-center","children":[["$","div",null,{"className":"scale-[1.15] animate-pulse transition-transform","children":["$","$L13",null,{"src":"/images/main-logo.png","alt":"로딩 중...","width":120,"height":120,"className":"drop-shadow-lg"}]}],["$","p",null,{"className":"mt-6 animate-pulse text-lg font-bold text-gray-600","children":"Codefug Blog"}]]}]}],[],[]],false],["$","$1","h",{"children":[null,["$","$1","kpEOK7IR_nzK_6DVJNoah",{"children":[["$","$L14",null,{"children":"$L15"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$16",[]],"s":false,"S":true}
17:"$Sreact.suspense"
18:I[2533,[],"AsyncMetadata"]
d:["$","$17",null,{"fallback":null,"children":["$","$L18",null,{"promise":"$@19"}]}]
10:null
15:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
f:null
19:{"metadata":[["$","title","0",{"children":"Codefug Blog"}],["$","meta","1",{"name":"description","content":"project experiences and development notes"}],["$","meta","2",{"property":"og:title","content":"Codefug Blog"}],["$","meta","3",{"property":"og:description","content":"project experiences and development notes"}],["$","meta","4",{"property":"og:url","content":"https://codefug-blog.vercel.app"}],["$","meta","5",{"property":"og:image","content":"http://localhost:3000/images/main-logo.png"}],["$","meta","6",{"property":"og:image:alt","content":"Codefug Blog"}],["$","meta","7",{"property":"og:type","content":"website"}],["$","meta","8",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","9",{"name":"twitter:title","content":"Codefug Blog"}],["$","meta","10",{"name":"twitter:description","content":"project experiences and development notes"}],["$","meta","11",{"name":"twitter:image","content":"http://localhost:3000/images/main-logo.png"}],["$","meta","12",{"name":"twitter:image:alt","content":"Codefug Blog"}],["$","link","13",{"rel":"icon","href":"/icon.ico?f00882ffa3186f37","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
12:{"metadata":"$19:metadata","error":null,"digest":"$undefined"}
1a:I[448,["893","static/chunks/893-1af1c230473151df.js","460","static/chunks/460-7903e3149ee4c004.js","252","static/chunks/252-c4d5671b15cb4929.js","880","static/chunks/app/posts/%5Bid%5D/page-a9de55f97c60b056.js"],"GtmPageView"]
1b:I[4329,["893","static/chunks/893-1af1c230473151df.js","460","static/chunks/460-7903e3149ee4c004.js","252","static/chunks/252-c4d5671b15cb4929.js","880","static/chunks/app/posts/%5Bid%5D/page-a9de55f97c60b056.js"],"default"]
b:["$","section",null,{"children":[["$","$L1a",null,{"slug":"2025-06-07"}],["$","header",null,{"className":"mb-8","children":[["$","div",null,{"className":"relative mb-6 h-[300px] w-full overflow-hidden rounded-xl sm:h-[400px] md:h-[450px]","children":[["$","$L13",null,{"src":"/images/2025-06-07/Pasted image 20250617212028.png","alt":"큐","fill":true,"sizes":"(max-width: 768px) 100vw, 1200px","priority":true,"className":"object-cover object-center transition-transform duration-500 hover:scale-105"}],["$","div",null,{"className":"absolute inset-0 bg-gradient-to-b from-transparent to-black/70"}],["$","div",null,{"className":"absolute left-4 top-4 flex flex-wrap gap-2 sm:left-6 sm:top-6","children":[["$","div","data-structure",{"className":"inline-flex items-center rounded-md border px-2.5 py-0.5 transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-white/90 text-xs font-medium text-gray-800 hover:bg-white sm:text-sm","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag mr-1 h-3 w-3","children":[["$","path","vktsd0",{"d":"M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z"}],["$","circle","kqv944",{"cx":"7.5","cy":"7.5","r":".5","fill":"currentColor"}],"$undefined"]}]," ","data-structure"]}],["$","div","javascript",{"className":"inline-flex items-center rounded-md border px-2.5 py-0.5 transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-white/90 text-xs font-medium text-gray-800 hover:bg-white sm:text-sm","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag mr-1 h-3 w-3","children":[["$","path","vktsd0",{"d":"M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z"}],["$","circle","kqv944",{"cx":"7.5","cy":"7.5","r":".5","fill":"currentColor"}],"$undefined"]}]," ","javascript"]}]]}]]}],["$","div",null,{"className":"mb-6 space-y-4","children":[["$","h1",null,{"className":"mb-0 text-3xl font-bold tracking-tight text-gray-900 dark:text-gray-50 sm:text-4xl md:text-5xl","children":"큐"}],["$","div",null,{"className":"flex items-center justify-end gap-4 text-sm text-gray-600 dark:text-gray-400","children":["$","div",null,{"className":"flex items-center","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar-days mr-2 h-4 w-4","children":[["$","path","1cmpym",{"d":"M8 2v4"}],["$","path","4m81vk",{"d":"M16 2v4"}],["$","rect","1hopcy",{"width":"18","height":"18","x":"3","y":"4","rx":"2"}],["$","path","8toen8",{"d":"M3 10h18"}],["$","path","6423bh",{"d":"M8 14h.01"}],["$","path","1etili",{"d":"M12 14h.01"}],["$","path","1gbofw",{"d":"M16 14h.01"}],["$","path","lrp35t",{"d":"M8 18h.01"}],["$","path","mhygvu",{"d":"M12 18h.01"}],["$","path","kzsmim",{"d":"M16 18h.01"}],"$undefined"]}],["$","time",null,{"dateTime":"2025-06-07","children":"2025-06-07"}]]}]}],["$","p",null,{"className":"text-lg leading-relaxed text-gray-600 dark:text-gray-300 md:text-xl","children":"JS의 큐에 대해서 알아보자."}]]}],["$","div",null,{"className":"border-b border-gray-200 dark:border-gray-800"}]]}],["$","section",null,{"className":"lg:flex lg:items-baseline","children":[["$","$L1b",null,{}],["$","section",null,{"className":"max-w-full","children":[["$","p",null,{"children":"큐는 먼저 들어간 데이터가 먼저 나오는 자료구조입니다."}],"\n",["$","h1",null,{"id":0,"className":"hltr-red","children":"개념"}],"\n",["$","h2",null,{"id":1,"className":"hltr-orange","children":"FIFO"}],"\n",["$","p",null,{"children":"First In First Out"}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/2025-06-07/Pasted%20image%2020250617210033.png","alt":""}]}],"\n",["$","p",null,{"children":"스택과 마찬가지로 큐도 삽입하는 연산을 push, 꺼내는 연산을 pop이라고 합니다."}],"\n",["$","h2",null,{"id":2,"className":"hltr-orange","children":"동작 과정"}],"\n",["$","p",null,{"children":["빈 큐를 하나 선언합니다.\n",["$","img",null,{"src":"/images/2025-06-07/Pasted%20image%2020250617210119.png","alt":""}]]}],"\n",["$","p",null,{"children":["2, 5를 삽입해봅시다. FIFO 규칙에 의해서 2는 5보다 뒤에 있게 됩니다.\n",["$","img",null,{"src":"/images/2025-06-07/Pasted%20image%2020250617210209.png","alt":""}]]}],"\n",["$","p",null,{"children":["여기서 pop을 해봅시다. 5가 아닌 2가 먼저 나오는 것을 보실 수 있어요. pop을 한 번 더 진행하면 5가 빠져나옵니다.\n",["$","img",null,{"src":"/images/2025-06-07/Pasted%20image%2020250617210308.png","alt":""}]]}],"\n",["$","blockquote",null,{"className":"bg-quote-blue border-blue-500 rounded-xl border-y border-r border-y-gray-400 border-r-gray-400 border-opacity-30 p-4 not-italic","children":[["$","div",null,{"className":"text-blue-500 flex items-center gap-1 text-lg font-bold md:text-2xl","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-pencil","children":[["$","path","1a8usu",{"d":"M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"}],["$","path","1mk7zo",{"d":"m15 5 4 4"}],"$undefined"]}],["$","div",null,{"children":"다양한 분야에서 사용되는 큐"}]]}],["$","section",null,{"className":"text-sm font-semibold text-black md:text-base","children":["\n",["$","p",null,{"children":"먼저 들어온 것을 먼저 처리하는 큐의 동작 방식은 프로그래밍에서 굉장히 많이 활용됩니다. 다음과 같은 사례들이 있습니다."}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"작업 대기열 : 네트워크 통신을 할 때 다수의 클라이언트에서 서버에 작업을 요청하면 서버는 요청이 들어온 순서대로 작업을 처리합니다."}],"\n",["$","li",null,{"children":"이벤트 처리 : 어떤 애플리케이션이나 시스템에서 사용자의 이벤트, 예를 들어 키보드 입력이나 마우스 움직임을 처리할 때 큐를 활용할 수 있습니다."}],"\n"]}],"\n"]}]]}],"\n",["$","h2",null,{"id":3,"className":"hltr-orange","children":"큐의 ADT (Abstract Data Type)"}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"구분"}],["$","th",null,{"children":"정의"}],["$","th",null,{"children":"설명"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":"연산"}],["$","td",null,{"children":"boolean isFull()"}],["$","td",null,{"children":"큐에 들어있는 데이터의 개수가 maxsize인지 확인합니다."}]]}],["$","tr",null,{"children":[["$","td",null,{}],["$","td",null,{"children":"boolean isEmpty()"}],["$","td",null,{"children":"큐에 들어있는 데이터의 개수가 0인지 확인합니다."}]]}],["$","tr",null,{"children":[["$","td",null,{}],["$","td",null,{"children":"void push"}],["$","td",null,{"children":"큐에 데이터를 넣습니다."}]]}],["$","tr",null,{"children":[["$","td",null,{}],["$","td",null,{"children":"ItemType pop"}],["$","td",null,{"children":"큐에서 처음에 넣은 데이터를 꺼냅니다."}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"상태"}],["$","td",null,{"children":"int front"}],["$","td",null,{"children":"큐의 맨 앞을 기록합니다."}]]}],["$","tr",null,{"children":[["$","td",null,{}],["$","td",null,{"children":"int rear"}],["$","td",null,{"children":"큐의 맨 뒤를 기록합니다."}]]}],["$","tr",null,{"children":[["$","td",null,{}],["$","td",null,{"children":["ItemType data",["$","code",null,{"children":"[maxsize]"}]]}],["$","td",null,{"children":"큐의 데이터를 관리하는 배열입니다. 최대 maxsize개의 데이터를 관리합니다."}]]}]]}]]}],"\n",["$","p",null,{"children":["테이블에 정의된 상태, 연산을 기반으로 ADT를 그려보면 다음과 같아요.\n",["$","img",null,{"src":"/images/2025-06-07/Pasted%20image%2020240909094927.png","alt":""}]]}],"\n",["$","blockquote",null,{"className":"bg-quote-yellow border-yellow-500 rounded-xl border-y border-r border-y-gray-400 border-r-gray-400 border-opacity-30 p-4 not-italic","children":[["$","div",null,{"className":"text-yellow-500 flex items-center gap-1 text-lg font-bold md:text-2xl","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-info","children":[["$","circle","1mglay",{"cx":"12","cy":"12","r":"10"}],["$","path","1dtifu",{"d":"M12 16v-4"}],["$","path","e9boi3",{"d":"M12 8h.01"}],"$undefined"]}],["$","div",null,{"children":"INFO"}]]}],["$","section",null,{"className":"text-sm font-semibold text-black md:text-base","children":["\n",["$","p",null,{"children":"front와 rear가 -1인 것을 주목해주세요. front는 큐의 앞, rear는 큐의 뒤를 뜻하는데요. front를 이용해서 데이터를 빼고 rear를 통해서 데이터를 더하는 구조입니다. 아무런 데이터가 없다면 큐의 앞, 뒤 모두에 데이터가 없다는 것을 표현해줘야 하는데요. 이를 위해 -1을 사용합니다."}],"\n"]}]]}],"\n",["$","p",null,{"children":["큐에 데이터를 추가하는 경우 다음과 같이 표현할 수 있어요.\n",["$","img",null,{"src":"/images/2025-06-07/Pasted%20image%2020250617212028.png","alt":""}]]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["먼저 큐가 가득 찼는지 확인합니다.","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"가득 찼다면 종료"}],"\n",["$","li",null,{"children":"가득차지 않았다면 rear를 1 높혀주고 rear의 위치에 데이터를 넣습니다."}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":["큐에서 데이터를 제거하면 다음과 같이 표현할 수 있어요\n",["$","img",null,{"src":"/images/2025-06-07/Pasted%20image%2020250617212214.png","alt":""}]]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["큐가 비었는지 확인합니다.","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"비었다면 종료"}],"\n",["$","li",null,{"children":"비어있지 않다면 front를 1 높혀줘서 isEmpty를 다음에 실행했을 때 true가 되도록 합니다."}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":[["$","img",null,{"src":"/images/2025-06-07/Pasted%20image%2020250617212315.png","alt":""}],"\nfront를 이용해서 실제 데이터를 삭제하지 않지만 데이터를 삭제한 것처럼 관리하는 것이죠."]}],"\n",["$","h2",null,{"id":4,"className":"hltr-orange","children":"선형 큐의 한계"}],"\n",["$","p",null,{"children":"선형 큐를 이용한 방식은 구조적으로 front의 다음부터 rear까지의 데이터를 관리하는 것을 볼 수 있어요. front와 front 이전 위치의 데이터는 사용할 수 없기 때문에 비효율적입니다."}],"\n",["$","p",null,{"children":"현재 선형인 구조를 원형으로 만들면 공간을 계속 재활용하게 만들어 이 문제를 해결할 수 있게 됩니다. 원형으로 된 구조의 큐를 원형 큐라고 합니다. 공간을 재활용하여 메모리 공간을 효율적으로 사용할 수 있죠."}],"\n",["$","h1",null,{"id":5,"className":"hltr-red","children":"JS로 큐 구현"}],"\n",["$","p",null,{"children":"큐를 구현하는 방법에는 3가지가 있습니다."}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"배열의 push, shift로 큐 흉내내기"}],"\n",["$","li",null,{"children":"배열을 이용하여 큐를 구현하기"}],"\n",["$","li",null,{"children":"연결 리스트를 이용하여 큐를 구현하기"}],"\n"]}],"\n",["$","p",null,{"children":"자세히 알아봅시다."}],"\n",["$","h2",null,{"id":6,"className":"hltr-orange","children":"배열의 push, shift로 큐를 흉내"}],"\n",["$","p",null,{"children":["큐의 FIFO의 구조는 흉내낼 수 있지만 배열의 메소드 ",["$","code",null,{"children":"shift"}],"는 ",["$","code",null,{"children":"O(n)"}],"의 시간 복잡도를 가지고 있기 때문에 Queue의 pop의 시간복잡도",["$","code",null,{"children":"O(1)"}],"보다 느립니다."]}],"\n",["$","blockquote",null,{"className":"bg-quote-yellow border-yellow-500 rounded-xl border-y border-r border-y-gray-400 border-r-gray-400 border-opacity-30 p-4 not-italic","children":[["$","div",null,{"className":"text-yellow-500 flex items-center gap-1 text-lg font-bold md:text-2xl","children":["$b:props:children:2:props:children:1:props:children:28:props:children:0:props:children:0",["$","div",null,{"children":"shift 시간 복잡도"}]]}],["$","section",null,{"className":"text-sm font-semibold text-black md:text-base","children":["\n",["$","p",null,{"children":["JS에서 배열은 동적 배열입니다. 메모리 공간 상으로 첫번째 원소를 기준으로 뒤쪽 공간에 다음 원소들을 생성합니다. 이 원리에 의해서 ",["$","code",null,{"children":"push"}]," 메소드를 실행하게 되면 메모리 공간 뒤쪽에 원소를 추가하기만 하기 때문에 ",["$","code",null,{"children":"O(1)"}],"의 시간 복잡도를 갖습니다."]}],"\n",["$","p",null,{"children":["하지만 ",["$","code",null,{"children":"shift"}],"로 메모리 공간의 첫번째 원소를 없애버리게 되면 두번째 원소부터 끝 원소까지 이전 원소로 한 칸씩 이동하는 동작을 하게 됩니다. 이 때문에 ",["$","code",null,{"children":"O(n)"}],"이라는 시간 복잡도를 가지게 됩니다.\n( 참고: ",["$","a",null,{"href":"https://codefug.github.io/posts/2025-05-24","children":"https://codefug.github.io/posts/2025-05-24"}]," )"]}],"\n"]}]]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// 배열 생성"}],"\n",["$","span",null,{"className":"hljs-keyword","children":"const"}]," queue = [];\n\nqueue.",["$","span",null,{"className":"hljs-title function_","children":"push"}],"(",["$","span",null,{"className":"hljs-number","children":"1"}],");\nqueue.",["$","span",null,{"className":"hljs-title function_","children":"push"}],"(",["$","span",null,{"className":"hljs-number","children":"2"}],");\nqueue.",["$","span",null,{"className":"hljs-title function_","children":"push"}],"(",["$","span",null,{"className":"hljs-number","children":"3"}],");\n\n",["$","span",null,{"className":"hljs-keyword","children":"const"}]," firstItem = queue.",["$","span",null,{"className":"hljs-title function_","children":"shift"}],"();\n",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(firstItem); ",["$","span",null,{"className":"hljs-comment","children":"// 1"}],"\n\nqueue.",["$","span",null,{"className":"hljs-title function_","children":"push"}],"(",["$","span",null,{"className":"hljs-number","children":"4"}],");\nqueue.",["$","span",null,{"className":"hljs-title function_","children":"push"}],"(",["$","span",null,{"className":"hljs-number","children":"5"}],");\n\nfirstItem = queue.",["$","span",null,{"className":"hljs-title function_","children":"shift"}],"();\n",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(firstItem); ",["$","span",null,{"className":"hljs-comment","children":"// 2"}],"\n"]}]}],"\n",["$","h2",null,{"id":7,"className":"hltr-orange","children":"배열을 이용하여 큐 구현"}],"\n",["$","p",null,{"children":"클래스의 프로퍼티로 배열을 넣고 이를 front와 rear로 제어하는 방식으로 큐를 구현할 수 있습니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"class"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Queue"}]," {\n  items = [];\n  front = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n  rear = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n\n  ",["$","span",null,{"className":"hljs-title function_","children":"push"}],"(",["$","span",null,{"className":"hljs-params","children":"item"}],") {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"items"}],".",["$","span",null,{"className":"hljs-title function_","children":"push"}],"(item);\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"rear"}],"++;\n  }\n\n  ",["$","span",null,{"className":"hljs-title function_","children":"pop"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"items"}],"[",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"front"}],"++];\n  }\n\n  ",["$","span",null,{"className":"hljs-title function_","children":"isEmpty"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"front"}]," === ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"rear"}],";\n  }\n}\n"]}]}],"\n",["$","p",null,{"children":"언뜻 보기에는 잘 구현된 큐로 볼 수 있으나 rear와 front가 계속해서 증가하고 배열 메모리도 계속해서 증가하는 문제가 있어요. 완벽한 구현을 위해서는 연결 리스트를 활용해야 합니다."}],"\n",["$","h2",null,{"id":8,"className":"hltr-orange","children":"연결 리스트를 이용하는 방식"}],"\n",["$","p",null,{"children":"JS에서는 연결 리스트를 기본 제공하지 않아요. 그래서 직접 구현해야 합니다. ( 시간 복잡도를 줄이는 멋진 개발자가 되기 위해선 알아야 합니다. )"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-comment","children":"// 노드 하나를 정의합니다. 연결 리스트는 이 노드를 하나의 값으로 취급하여 연결한 리스트에요."}],"\n",["$","span",null,{"className":"hljs-keyword","children":"class"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Node"}]," {\n  ",["$","span",null,{"className":"hljs-title function_","children":"constructor"}],"(",["$","span",null,{"className":"hljs-params","children":"data"}],") {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"data"}]," = data; ",["$","span",null,{"className":"hljs-comment","children":"// 인스턴스의 현재 값"}],"\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"next"}]," = ",["$","span",null,{"className":"hljs-literal","children":"null"}],"; ",["$","span",null,{"className":"hljs-comment","children":"// 다음 값"}],"\n  }\n}\n\n",["$","span",null,{"className":"hljs-comment","children":"// Node를 사용할 Queue입니다."}],"\n",["$","span",null,{"className":"hljs-keyword","children":"class"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Queue"}]," {\n  ",["$","span",null,{"className":"hljs-comment","children":"// head, tail, size를 초기화합니다."}],"\n  ",["$","span",null,{"className":"hljs-title function_","children":"constructor"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"head"}]," = ",["$","span",null,{"className":"hljs-literal","children":"null"}],";\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"tail"}]," = ",["$","span",null,{"className":"hljs-literal","children":"null"}],";\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"size"}]," = ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n  }\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// 노드를 추가해줍니다."}],"\n  ",["$","span",null,{"className":"hljs-title function_","children":"push"}],"(",["$","span",null,{"className":"hljs-params","children":"item"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// newNode를 만들어서 두가지 경우의 수를 처리합니다."}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," newNode = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Node"}],"(item);\n\n    ",["$","span",null,{"className":"hljs-comment","children":"// 1. 첫 노드일 경우: head와 tail을 여기에 연결해줍니다."}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (!",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"head"}],") {\n      ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"head"}]," = newNode;\n      ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"tail"}]," = newNode;\n      ",["$","span",null,{"className":"hljs-comment","children":"// 2. 첫 노드가 아닐 경우: tail과 새 노드를 연결해줍니다."}],"\n    } ",["$","span",null,{"className":"hljs-keyword","children":"else"}]," {\n      ",["$","span",null,{"className":"hljs-comment","children":"// 현재 tail의 다음값을 newNode로 하고"}],"\n      ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"tail"}],".",["$","span",null,{"className":"hljs-property","children":"next"}]," = newNode;\n      ",["$","span",null,{"className":"hljs-comment","children":"// 현재 tail을 newNode로 바꿔줍니다."}],"\n      ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"tail"}]," = newNode;\n    }\n\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"size"}],"++;\n  }\n\n  ",["$","span",null,{"className":"hljs-comment","children":"// 지울 노드를 꺼내고 반환해줍니다."}],"\n  ",["$","span",null,{"className":"hljs-title function_","children":"pop"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n    ",["$","span",null,{"className":"hljs-comment","children":"// 데이터가 없다면 null을 반환하고 끝냅니다."}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (!",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"head"}],") {\n      ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-literal","children":"null"}],";\n    }\n\n    ",["$","span",null,{"className":"hljs-comment","children":"// 데이터가 있다면 반환할 노드를 미리 removeNode에 저장해놓고"}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," removeNode = ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"head"}],";\n    ",["$","span",null,{"className":"hljs-comment","children":"// head를 다음 값으로 이동시킵니다."}],"\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"head"}]," = ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"head"}],".",["$","span",null,{"className":"hljs-property","children":"next"}],";\n\n    ",["$","span",null,{"className":"hljs-comment","children":"// 만약 다음 값이 null이었다면 데이터가 비었으므로 tail도 초기화시켜줍니다."}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (!",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"head"}],") {\n      ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"tail"}]," = ",["$","span",null,{"className":"hljs-literal","children":"null"}],";\n    }\n\n    ",["$","span",null,{"className":"hljs-comment","children":"// 배열의 크기를 줄여주고"}],"\n    ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"size"}],"--;\n\n    ",["$","span",null,{"className":"hljs-comment","children":"// 미리 저장했던 removeNode를 꺼내줍니다."}],"\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," removeNode.",["$","span",null,{"className":"hljs-property","children":"data"}],";\n  }\n\n  ",["$","span",null,{"className":"hljs-title function_","children":"isEmpty"}],"(",["$","span",null,{"className":"hljs-params"}],") {\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-variable language_","children":"this"}],".",["$","span",null,{"className":"hljs-property","children":"size"}]," === ",["$","span",null,{"className":"hljs-number","children":"0"}],";\n  }\n}\n"]}]}],"\n",["$","p",null,{"children":"이제 잔여 메모리 공간 문제와 시간 복잡도 문제를 해결한 멋진 개발자가 되었습니다."}]]}]]}]]}]
