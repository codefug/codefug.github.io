1:"$Sreact.fragment"
2:I[6424,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","584","static/chunks/584-131c0b3bf6034f9e.js","668","static/chunks/668-d1e9350793e28fea.js","177","static/chunks/app/layout-e5095dc886e81597.js"],"GoogleTagManager"]
3:I[9229,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","584","static/chunks/584-131c0b3bf6034f9e.js","668","static/chunks/668-d1e9350793e28fea.js","177","static/chunks/app/layout-e5095dc886e81597.js"],"default"]
4:I[2943,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","584","static/chunks/584-131c0b3bf6034f9e.js","668","static/chunks/668-d1e9350793e28fea.js","177","static/chunks/app/layout-e5095dc886e81597.js"],"SidebarProvider"]
5:I[6226,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","584","static/chunks/584-131c0b3bf6034f9e.js","668","static/chunks/668-d1e9350793e28fea.js","177","static/chunks/app/layout-e5095dc886e81597.js"],"default"]
6:I[323,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","584","static/chunks/584-131c0b3bf6034f9e.js","668","static/chunks/668-d1e9350793e28fea.js","177","static/chunks/app/layout-e5095dc886e81597.js"],"default"]
7:I[831,[],""]
8:I[8307,[],""]
9:I[70,["70","static/chunks/70-d82343500dd0d9ac.js","345","static/chunks/app/not-found-8b0af7c225bbe321.js"],""]
a:I[8092,["507","static/chunks/app/posts/%5Bid%5D/layout-6a37c5d18e0b4ffc.js"],"default"]
c:I[9757,[],"MetadataBoundary"]
e:I[9757,[],"OutletBoundary"]
11:I[8475,[],"AsyncMetadataOutlet"]
13:I[4299,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","880","static/chunks/app/posts/%5Bid%5D/page-a37ccfd5df9b4a85.js"],"Image"]
14:I[9757,[],"ViewportBoundary"]
16:I[7882,["219","static/chunks/app/global-error-e65e17ac78cfa06a.js"],"default"]
:HL["https://codefug.github.io/_next/static/media/518331124efecf5c-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["https://codefug.github.io/_next/static/css/b318621365172a1a.css","style"]
:HL["https://codefug.github.io/_next/static/css/7b1838e6bdc2260c.css","style"]
:HL["https://codefug.github.io/_next/static/css/fc37ac2b1a278e8c.css","style"]
0:{"P":null,"b":"IcYWrRwwqycgCILiEqq27","p":"https://codefug.github.io","c":["","posts","2024-05-19"],"i":false,"f":[[["",{"children":["posts",{"children":[["id","2024-05-19","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/b318621365172a1a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/7b1838e6bdc2260c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","$L2",null,{"gtmId":"$undefined"}],["$","body",null,{"className":"__className_7ee20e antialiased","children":["$","$L3",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"children":["$","$L4",null,{"defaultOpen":false,"children":[["$","$L5",null,{"totalFrontMatterList":[{"id":"2024-11-10","title":"Asynchronous JavaScript","excerpt":"microtask queue, macrotask queue, call stack, web api와 관련된 비동기 동작 방식, 비동기 관련 역사와 비동기 코드의 다양한 활용법들을 알아보자.","date":"2024-11-10","categories":["javascript"],"header":{"teaser":"/images/logos/JS.svg"}},{"id":"2024-09-14-4","title":"(꼼꼼 프로젝트) streaming 방식의 tanstack query","excerpt":"infinite scroll, optimistic update 그리고 streaming 방식이 결합된 쿼리 처리 ( useSuspenseQuery, useSuspenseInfiniteQuery )","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/tanstackQuery.png"}},{"id":"2024-09-14-3","title":"(꼼꼼 프로젝트) 클라이언트와 서버 둘다 호환되는 fetch 구현","excerpt":"서버 액션을 활용한 refresh token rotation, 커링 함수를 이용한 리팩토링","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/fetch.png"}},{"id":"2024-09-14-2","title":"(꼼꼼 프로젝트) startTransition, progress bar 구현에 대한 고민","excerpt":"progress bar 로직 연구하기(startTransition), next-nprogress-bar","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/nprogress.png"}},{"id":"2024-09-14-1","title":"(꼼꼼 프로젝트) toss slash 분석, zustand와 연결된 커스텀 overlay 훅 구현","excerpt":"stacking context, compound pattern, 전역 상태를 활용한다는 것의 의미, 토스 개발자 실력 흡수하기","date":"2024-09-14","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/toss.png"}},{"id":"2024-09-11","title":"(꼼꼼 프로젝트) 공통 버튼 컴포넌트의 종류를 쉽게 관리하고 누구나 쉽게 확인할 수 있게 하는 방법","excerpt":"tailwind로 조건부 처리를 간편하게 하는 방법, 비개발자도 스타일을 쉽게 확인할 수 있도록 storybook 연동","date":"2024-09-11","categories":["kkom-kkom"],"header":{"teaser":"/images/logos/storybook.png"}},{"id":"2024-07-22-2","title":"(급페이 프로젝트) 개발환경에만 집중하기 위한 여정","excerpt":"접근 제한을 위한 미들웨어 처리, vercel CLI을 이용한 organization 무료 자동 배포, 프리뷰","date":"2024-07-22","categories":["gheuppay"],"header":{"teaser":"/images/logos/vercel.png"}},{"id":"2024-07-22-1","title":"(급페이 프로젝트) 알림창 무한 스크롤을 위한 여정 (mock fetching을 위한 MSW 도입기)","excerpt":"msw를 활용해서 프론트엔드 개발이 다 되어있지 않은 상태에서도 무한 스크롤 구현을 확인할 수 있게 되었습니다.","date":"2024-07-22","categories":["gheuppay"],"header":{"teaser":"/images/logos/msw.png"}},{"id":"2024-07-21","title":"(급페이 프로젝트) 카드 렌더링을 최적화하여 UX를 향상시키기 위한 머나먼 여정","excerpt":"server component 설계를 이용한 suspense 적극 활용, 이를 위해서 next cookie를 사용하면서 겪은 문제들을 적은 글입니다.","date":"2024-07-21","categories":["gheuppay"],"header":{"teaser":"/images/logos/next-cookie.png"}},{"id":"2024-06-18","title":"React Testing","excerpt":"React Testing Library, Vitest, Jest","date":"2024-06-18","categories":["reactdeepdive"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-06-17","title":"로그인 구현 (zustand, zod + react-hook-form, RTR)","excerpt":"zustand를 이용한 로그인 상태 전역 관리, zod를 이용한 간단한 스키마 전개, react-hook-form을 이용한 간단한 validation, axios를 이용한 간단한 api 요청 처리","date":"2024-06-17","categories":["react"],"header":{"teaser":"/images/logos/zod.png"}},{"id":"2024-06-15","title":"Dev tool","excerpt":"리액트 과거, 현재, 미래","date":"2024-06-15","categories":["web"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-06-14","title":"마이그레이션 중 발생한 Vite 환경 변수 처리","excerpt":"Vite_ENV","date":"2024-06-14","categories":["react"],"header":{"teaser":"/images/logos/react.png"}},{"id":"2024-06-10","title":"React Debugging","excerpt":"react-dev-tools 정리, 실습","date":"2024-06-10","categories":["react"],"header":{"teaser":"/images/logos/react.png"}},{"id":"2024-06-08","title":"자잘한 Next.js 트러블 슈팅들","excerpt":"react-responsive를 사용하지 못하는 상황, dotenv 사용시 문제 발생","date":"2024-06-08","categories":["nextjs"],"header":{"teaser":"/images/logos/Nextjs.png"}},{"id":"2024-05-31","title":"Next는 왜 쓸까","excerpt":"CSR SSG SSR","date":"2024-05-31","categories":["nextjs"],"header":{"teaser":"/images/logos/Nextjs.png"}},{"id":"2024-05-23","title":"리액트는 왜 쓸까","excerpt":"리액트 과거, 현재, 미래","date":"2024-05-23","categories":["react"],"header":{"teaser":"/images/logos/reactdeepdive.jpg"}},{"id":"2024-05-22","title":"TS는 왜 쓸까 (위대한 TS)","excerpt":"JS를 완벽하게 하기 위한 여정","date":"2024-05-22","categories":["typescript"],"header":{"teaser":"/images/logos/TS.png"}},{"id":"2024-05-20","title":"Fandom-k 프로젝트 회고3","excerpt":"Github Actions, 최종 결과","date":"2024-05-20","categories":["fandomk"],"header":{"teaser":"/images/logos/githubActions.png"}},{"id":"2024-05-19","title":"Fandom-k 프로젝트 회고2","excerpt":"fetch, scroll to Top, infinite scroll 라이브러리 제거","date":"2024-05-19","categories":["fandomk"],"header":{"teaser":"/images/logos/fetch.png"}},{"id":"2024-05-18","title":"Fandom-k 프로젝트 회고1","excerpt":"팀 프로젝트 세팅, infinite scroll, skeleton","date":"2024-05-18","categories":["fandomk"],"header":{"teaser":"/images/logos/infinite-scroll.png"}}]}],["$","$L6",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"children":[["$","h2",null,{"children":"Not Found"}],["$","p",null,{"children":"잘못된 페이지에요!"}],["$","$L9",null,{"href":"/","children":"홈으로 돌아가기"}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]}]}]]}]]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L7",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["id","2024-05-19","d"],["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"https://codefug.github.io/_next/static/css/fc37ac2b1a278e8c.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","div",null,{"className":"prose mx-auto overflow-auto dark:prose-invert","children":[["$","$L7",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}],["$","$La",null,{}]]}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$Lb",["$","$Lc",null,{"children":"$Ld"}],null,["$","$Le",null,{"children":["$Lf","$L10",["$","$L11",null,{"promise":"$@12"}]]}]]}],{},null,false]},null,false]},null,false]},[["$","div","l",{"className":"flex h-full items-center justify-center","children":["$","div",null,{"className":"flex flex-col items-center","children":[["$","div",null,{"className":"scale-[1.15] animate-pulse transition-transform","children":["$","$L13",null,{"src":"/images/main-logo.png","alt":"로딩 중...","width":120,"height":120,"className":"drop-shadow-lg"}]}],["$","p",null,{"className":"mt-6 animate-pulse text-lg font-bold text-gray-600","children":"Codefug Blog"}]]}]}],[],[]],false],["$","$1","h",{"children":[null,["$","$1","pmA9dCAKr5EiXxoBxAs4i",{"children":[["$","$L14",null,{"children":"$L15"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$16",[]],"s":false,"S":true}
17:"$Sreact.suspense"
18:I[8475,[],"AsyncMetadata"]
d:["$","$17",null,{"fallback":null,"children":["$","$L18",null,{"promise":"$@19"}]}]
10:null
15:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
f:null
19:{"metadata":[["$","title","0",{"children":"Codefug Blog"}],["$","meta","1",{"name":"description","content":"project experiences and development notes"}],["$","meta","2",{"property":"og:title","content":"Codefug Blog"}],["$","meta","3",{"property":"og:description","content":"project experiences and development notes"}],["$","meta","4",{"property":"og:url","content":"https://codefug-blog.vercel.app"}],["$","meta","5",{"property":"og:image","content":"http://localhost:3000/images/main-logo.png"}],["$","meta","6",{"property":"og:image:alt","content":"Codefug Blog"}],["$","meta","7",{"property":"og:type","content":"website"}],["$","meta","8",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","9",{"name":"twitter:title","content":"Codefug Blog"}],["$","meta","10",{"name":"twitter:description","content":"project experiences and development notes"}],["$","meta","11",{"name":"twitter:image","content":"http://localhost:3000/images/main-logo.png"}],["$","meta","12",{"name":"twitter:image:alt","content":"Codefug Blog"}],["$","link","13",{"rel":"icon","href":"/icon.ico?f00882ffa3186f37","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
12:{"metadata":"$19:metadata","error":null,"digest":"$undefined"}
1a:I[2464,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","880","static/chunks/app/posts/%5Bid%5D/page-a37ccfd5df9b4a85.js"],"GtmPageView"]
1b:I[9792,["299","static/chunks/299-20a67a2580c87e66.js","635","static/chunks/635-8456b2984470c35f.js","70","static/chunks/70-d82343500dd0d9ac.js","880","static/chunks/app/posts/%5Bid%5D/page-a37ccfd5df9b4a85.js"],"default"]
b:["$","section",null,{"children":[["$","$L1a",null,{"slug":"2024-05-19"}],["$","header",null,{"className":"mb-8","children":[["$","div",null,{"className":"relative mb-6 h-[300px] w-full overflow-hidden rounded-xl sm:h-[400px] md:h-[450px]","children":[["$","$L13",null,{"src":"/images/logos/fetch.png","alt":"Fandom-k 프로젝트 회고2","fill":true,"sizes":"(max-width: 768px) 100vw, 1200px","priority":true,"className":"object-cover object-center transition-transform duration-500 hover:scale-105"}],["$","div",null,{"className":"absolute inset-0 bg-gradient-to-b from-transparent to-black/70"}],["$","div",null,{"className":"absolute left-4 top-4 flex flex-wrap gap-2 sm:left-6 sm:top-6","children":[["$","div","fandomk",{"className":"inline-flex items-center rounded-md border px-2.5 py-0.5 transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-white/90 text-xs font-medium text-gray-800 hover:bg-white sm:text-sm","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag mr-1 h-3 w-3","children":[["$","path","vktsd0",{"d":"M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z"}],["$","circle","kqv944",{"cx":"7.5","cy":"7.5","r":".5","fill":"currentColor"}],"$undefined"]}]," ","fandomk"]}]]}]]}],["$","div",null,{"className":"mb-6 space-y-4","children":[["$","h1",null,{"className":"mb-0 text-3xl font-bold tracking-tight text-gray-900 dark:text-gray-50 sm:text-4xl md:text-5xl","children":"Fandom-k 프로젝트 회고2"}],["$","div",null,{"className":"flex items-center justify-end gap-4 text-sm text-gray-600 dark:text-gray-400","children":["$","div",null,{"className":"flex items-center","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar-days mr-2 h-4 w-4","children":[["$","path","1cmpym",{"d":"M8 2v4"}],["$","path","4m81vk",{"d":"M16 2v4"}],["$","rect","1hopcy",{"width":"18","height":"18","x":"3","y":"4","rx":"2"}],["$","path","8toen8",{"d":"M3 10h18"}],["$","path","6423bh",{"d":"M8 14h.01"}],["$","path","1etili",{"d":"M12 14h.01"}],["$","path","1gbofw",{"d":"M16 14h.01"}],["$","path","lrp35t",{"d":"M8 18h.01"}],["$","path","mhygvu",{"d":"M12 18h.01"}],["$","path","kzsmim",{"d":"M16 18h.01"}],"$undefined"]}],["$","time",null,{"dateTime":"2024-05-19","children":"2024-05-19"}]]}]}],["$","p",null,{"className":"text-lg leading-relaxed text-gray-600 dark:text-gray-300 md:text-xl","children":"fetch, scroll to Top, infinite scroll 라이브러리 제거"}]]}],["$","div",null,{"className":"border-b border-gray-200 dark:border-gray-800"}]]}],["$","section",null,{"className":"lg:flex lg:items-baseline","children":[["$","$L1b",null,{}],["$","section",null,{"className":"max-w-full","children":[["$","h2",null,{"id":0,"children":["$","mark",null,{"style":{"background":"#FFB86CA6"},"children":"fetch"}]}],"\n",["$","h3",null,{"id":1,"children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"투표를 하기 위한 POST 요청"}]}],"\n",["$","p",null,{"children":"setState의 비동기 호출"}],"\n",["$","p",null,{"children":["setState는 비동기로 호출되기 때문에(setState 호출이 비동기인 거임, setState 자체는 동기 함수이다. ",["$","a",null,{"href":"https://velog.io/@jay/setStateisnotasync","children":"https://velog.io/@jay/setStateisnotasync"}]," ) fetch에 state를 담아서 전달할 때 이전 state가 들어가는 경우가 발생할 수 있다. 이때 필요한 게 useEffect이다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-jsx","children":[["$","span",null,{"className":"hljs-keyword","children":"const"}]," [id, setId] = ",["$","span",null,{"className":"hljs-title function_","children":"useState"}],"(",["$","span",null,{"className":"hljs-literal","children":"false"}],");\n",["$","span",null,{"className":"hljs-keyword","children":"let"}]," idolId = ",["$","span",null,{"className":"hljs-literal","children":"false"}],";\n\n",["$","span",null,{"className":"hljs-keyword","children":"const"}]," ",["$","span",null,{"className":"hljs-title function_","children":"handleClick"}]," = (",["$","span",null,{"className":"hljs-params","children":"e"}],") => {\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (!idolId) ",["$","span",null,{"className":"hljs-keyword","children":"return"}],";\n  ",["$","span",null,{"className":"hljs-title function_","children":"setCredit"}],"(credit - ",["$","span",null,{"className":"hljs-number","children":"1000"}],");\n  ",["$","span",null,{"className":"hljs-title function_","children":"wrappedFunction"}],"(idolId);\n};\n\n",["$","span",null,{"className":"hljs-title function_","children":"useEffect"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n  ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (id !== ",["$","span",null,{"className":"hljs-literal","children":"false"}],") {\n    idolId = id;\n  }\n}, [id]);\n"]}]}],"\n",["$","p",null,{"children":"wrappedFunction에 fetch가 들어가 있다. fetch에 state인 id를 그대로 전달하게 되면 setId가 바뀐지 아닌지 모르는 상태에서 id가 전달되기 때문에 로직이 꼬일 수 있다."}],"\n",["$","p",null,{"children":"이때 id가 바뀌면 변수 하나가 바뀐다고 해놓고 handler에는 해당 변수를 넣는 식으로 비동기 함수가 처리완료 된 state를 얻을 수 있다."}],"\n",["$","p",null,{"children":"리액트에서는 가상돔에서의 변경사항들을 한번에 보내는 batching이라는 방법을 사용하는데 한번에 보내기 전에 fetch를 보내면서 에러가 났었다."}],"\n",["$","p",null,{"children":"useEffect로 id에따라서 idolId가 갱신되는 식으로 sideEffect처리를 해주면 이를 해결하고 바뀐 Id로 fetch요청을 보낼 수 있다."}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"fetch에서 POST를 보낼 때 header에 존재하는 Content-Type은 실제 보내는 데이터의 Type과 일치해야 한다."}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-js","children":[["$","span",null,{"className":"hljs-keyword","children":"export"}]," ",["$","span",null,{"className":"hljs-keyword","children":"async"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"postVotes"}],"(",["$","span",null,{"className":"hljs-params","children":"Id"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," ",["$","span",null,{"className":"hljs-variable constant_","children":"URL"}]," = ",["$","span",null,{"className":"hljs-string","children":["`",["$","span",null,{"className":"hljs-subst","children":"$${BASE_URL}"}],"/votes`"]}],";\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," response = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetch"}],"(",["$","span",null,{"className":"hljs-variable constant_","children":"URL"}],", {\n    ",["$","span",null,{"className":"hljs-attr","children":"method"}],": ",["$","span",null,{"className":"hljs-string","children":"\"POST\""}],",\n    ",["$","span",null,{"className":"hljs-attr","children":"mode"}],": ",["$","span",null,{"className":"hljs-string","children":"\"cors\""}],",\n    ",["$","span",null,{"className":"hljs-attr","children":"headers"}],": { ",["$","span",null,{"className":"hljs-string","children":"\"Content-Type\""}],": ",["$","span",null,{"className":"hljs-string","children":"\"application/json\""}]," },\n    ",["$","span",null,{"className":"hljs-attr","children":"body"}],": ",["$","span",null,{"className":"hljs-title class_","children":"JSON"}],".",["$","span",null,{"className":"hljs-title function_","children":"stringify"}],"({ ",["$","span",null,{"className":"hljs-attr","children":"idolId"}],": +",["$","span",null,{"className":"hljs-title class_","children":"Id"}]," }),\n  });\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," response.",["$","span",null,{"className":"hljs-title function_","children":"json"}],"();\n}\n"]}]}],"\n",["$","img",null,{"src":"/images/2024-05-19/requestheader.png","alt":"requestHeader"}],"\n",["$","h3",null,{"id":2,"children":["$","mark",null,{"style":{"background":"#FFF3A3A6"},"children":"Trouble Shooting"}]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"setter와 state 무한 루프"}],"\n"]}],"\n",["$","p",null,{"children":"네트워크 처리를 할 때 관련 state를 정의하는 함수에 해당 state의 setter함수를 같은 스코프에 넣을 경우에 setter가 돌아가면서 state를 바꾸고 다시 렌더링 되는 식으로 무한 루프가 발생할 수 있다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-jsx","children":[["$","span",null,{"className":"hljs-keyword","children":"const"}]," [status, setStatus] = ",["$","span",null,{"className":"hljs-title function_","children":"useState"}],"({\n  ",["$","span",null,{"className":"hljs-attr","children":"isLoading"}],": ",["$","span",null,{"className":"hljs-literal","children":"true"}],",\n  ",["$","span",null,{"className":"hljs-attr","children":"errorMessage"}],": ",["$","span",null,{"className":"hljs-literal","children":"null"}],",\n});\n",["$","span",null,{"className":"hljs-keyword","children":"const"}]," ",["$","span",null,{"className":"hljs-title function_","children":"wrappedFunction"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"async"}]," (",["$","span",null,{"className":"hljs-params","children":"...args"}],") => {\n  ",["$","span",null,{"className":"hljs-keyword","children":"try"}]," {\n    ",["$","span",null,{"className":"hljs-title function_","children":"setStatus"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"prevStatus"}],") =>"]}]," ({\n      ...prevStatus,\n      ",["$","span",null,{"className":"hljs-attr","children":"isLoading"}],": ",["$","span",null,{"className":"hljs-literal","children":"true"}],",\n      ",["$","span",null,{"className":"hljs-attr","children":"errorMessage"}],": ",["$","span",null,{"className":"hljs-literal","children":"null"}],",\n    }));\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"funcAsync"}],"(...args);\n  } ",["$","span",null,{"className":"hljs-keyword","children":"catch"}]," (error) {\n    ",["$","span",null,{"className":"hljs-title function_","children":"setStatus"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"prevStatus"}],") =>"]}]," ({\n      ...prevStatus,\n      ",["$","span",null,{"className":"hljs-attr","children":"errorMessage"}],": error,\n    }));\n  } ",["$","span",null,{"className":"hljs-keyword","children":"finally"}]," {\n    ",["$","span",null,{"className":"hljs-title function_","children":"setStatus"}],"(",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"prevStatus"}],") =>"]}]," ({\n      ...prevStatus,\n      ",["$","span",null,{"className":"hljs-attr","children":"isLoading"}],": ",["$","span",null,{"className":"hljs-literal","children":"false"}],",\n    }));\n  }\n};\n"]}]}],"\n",["$","p",null,{"children":"이것 뿐만 아니라 그냥 일단 state가 돌아가고 있는 곳에 fetch처리를 하면 계속 fetch를 하게 되서 오류가 발생한다. useEffect를 이용해서 deps에 따라서만 fetch를 호출하도록 해준다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-jsx","children":[["$","span",null,{"className":"hljs-title function_","children":"useEffect"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," ",["$","span",null,{"className":"hljs-title function_","children":"fetchData"}]," = ",["$","span",null,{"className":"hljs-keyword","children":"async"}]," (",["$","span",null,{"className":"hljs-params"}],") => {\n    ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," data = ",["$","span",null,{"className":"hljs-keyword","children":"await"}]," ",["$","span",null,{"className":"hljs-title function_","children":"wrappedFunction"}],"({ gender });\n    ",["$","span",null,{"className":"hljs-variable language_","children":"console"}],".",["$","span",null,{"className":"hljs-title function_","children":"log"}],"(data);\n  };\n  ",["$","span",null,{"className":"hljs-title function_","children":"fetchData"}],"();\n}, [gender]);\n"]}]}],"\n",["$","ol",null,{"start":"2","children":["\n",["$","li",null,{"children":"useEffect로 인한 fetch 중복"}],"\n"]}],"\n",["$","p",null,{"children":"1번과 얻은 지식은 비슷했다."}],"\n",["$","p",null,{"children":"useEffect는 렌더링마다 cleanup > setup > cleanup 로직을 갖는데 development환경에서는 2번을 더하게 된다."}],"\n",["$","p",null,{"children":["이번에 inView deps인 useEffect에 fetch를 넣고 다른 곳에서도 넣었더니 기본 4번 fetch에 첫 화면에 interception observer api도 작동하게끔 로직을 짜서 fetch를 8번 보내버렸다. ",["$","s",null,{"children":"대참사가 벌여지며 컴퓨터가 꺼졌었다 하하.."}]]}],"\n",["$","p",null,{"children":"useEffect는 deps가 있어도 첫 렌더링 때 실행되기 때문에 useEffect에 들어간 fetch는 같은 로직에 다른 deps일경우 둘을 합쳐서 한번만 쓰도록 해야 한다."}],"\n",["$","h2",null,{"id":3,"children":["$","mark",null,{"style":{"background":"#FFB86CA6"},"children":"scroll to Top"}]}],"\n",["$","p",null,{"children":"페이지 이동시 router를 사용하게 되는데 이때 router의 기본 동작이 브라우저의 기본 동작을 막기 때문에 스크롤 위치를 따로 처리하기 힘들게 된다."}],"\n",["$","p",null,{"children":"또한 React는 기본적으로 SPA 특성을 가지고 있어 페이지가 직접 바뀌는 것이 아니라 JS로 페이지의 일부만 변경하기 때문에 단일 페이지가 변화하는 방식이다. 따라서 스크롤 위치가 그대로인 것은 어떻게 보면 당연하다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-jsx","children":[["$","span",null,{"className":"hljs-comment","children":"// ScrollToTop.js"}],"\n\n",["$","span",null,{"className":"hljs-keyword","children":"import"}]," { useEffect } ",["$","span",null,{"className":"hljs-keyword","children":"from"}]," ",["$","span",null,{"className":"hljs-string","children":"\"react\""}],";\n",["$","span",null,{"className":"hljs-keyword","children":"import"}]," { useLocation } ",["$","span",null,{"className":"hljs-keyword","children":"from"}]," ",["$","span",null,{"className":"hljs-string","children":"\"react-router-dom\""}],";\n\n",["$","span",null,{"className":"hljs-keyword","children":"export"}]," ",["$","span",null,{"className":"hljs-keyword","children":"default"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"ScrollToTop"}],"(",["$","span",null,{"className":"hljs-params","children":"props"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," { pathname } = ",["$","span",null,{"className":"hljs-title function_","children":"useLocation"}],"();\n\n  ",["$","span",null,{"className":"hljs-title function_","children":"useEffect"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n    ",["$","span",null,{"className":"hljs-variable language_","children":"window"}],".",["$","span",null,{"className":"hljs-title function_","children":"scrollTo"}],"(",["$","span",null,{"className":"hljs-number","children":"0"}],", ",["$","span",null,{"className":"hljs-number","children":"0"}],");\n  }, [pathname]);\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"xml","children":[["$","span",null,{"className":"hljs-tag","children":"<>"}],"{props.children}",["$","span",null,{"className":"hljs-tag","children":"</>"}]]}],";\n}\n"]}]}],"\n",["$","p",null,{"children":"코드로 위와 같이 해결한다."}],"\n",["$","p",null,{"children":"useLocation 훅으로 현재 위치를 가져온 후에 useEffect로 현재위치가 변경되면 sideEffect로 window.scrollTo로 상단으로 올린다."}],"\n",["$","h2",null,{"id":4,"children":["$","mark",null,{"style":{"background":"#FFB86CA6"},"children":"useInview 제거"}]}],"\n",["$","p",null,{"children":"팀원 중에 라이브러리 없이 순수 interception observer API를 사용해서 infinite scroll을 구현해보자는 의견이 있었다."}],"\n",["$","p",null,{"children":"useInView를 기존에 사용했기 때문에 useInView를 interception observer API로 구현하는 방법을 찾아서 구현하였다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"hljs language-jsx","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," { useEffect, useRef, useState } ",["$","span",null,{"className":"hljs-keyword","children":"from"}]," ",["$","span",null,{"className":"hljs-string","children":"\"react\""}],";\n\n",["$","span",null,{"className":"hljs-keyword","children":"export"}]," ",["$","span",null,{"className":"hljs-keyword","children":"default"}]," ",["$","span",null,{"className":"hljs-keyword","children":"function"}]," ",["$","span",null,{"className":"hljs-title function_","children":"useCustomInView"}],"(",["$","span",null,{"className":"hljs-params","children":"option"}],") {\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," [inView, setInView] = ",["$","span",null,{"className":"hljs-title function_","children":"useState"}],"(",["$","span",null,{"className":"hljs-literal","children":"false"}],");\n  ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," ref = ",["$","span",null,{"className":"hljs-title function_","children":"useRef"}],"(",["$","span",null,{"className":"hljs-literal","children":"null"}],");\n  ",["$","span",null,{"className":"hljs-title function_","children":"useEffect"}],"(",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n    ",["$","span",null,{"className":"hljs-keyword","children":"const"}]," observer = ",["$","span",null,{"className":"hljs-keyword","children":"new"}]," ",["$","span",null,{"className":"hljs-title class_","children":"IntersectionObserver"}],"(\n      ",["$","span",null,{"className":"hljs-function","children":["(",["$","span",null,{"className":"hljs-params","children":"[{ isIntersecting }]"}],") =>"]}]," {\n        ",["$","span",null,{"className":"hljs-title function_","children":"setInView"}],"(isIntersecting);\n      },\n      { ...option },\n    );\n\n    ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (ref.",["$","span",null,{"className":"hljs-property","children":"current"}]," && ref.",["$","span",null,{"className":"hljs-property","children":"current"}]," ",["$","span",null,{"className":"hljs-keyword","children":"instanceof"}]," ",["$","span",null,{"className":"hljs-title class_","children":"Element"}],") {\n      observer.",["$","span",null,{"className":"hljs-title function_","children":"observe"}],"(ref.",["$","span",null,{"className":"hljs-property","children":"current"}],");\n    }\n    ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," ",["$","span",null,{"className":"hljs-function","children":"() =>"}]," {\n      ",["$","span",null,{"className":"hljs-keyword","children":"if"}]," (observer) observer.",["$","span",null,{"className":"hljs-title function_","children":"disconnect"}],"();\n    };\n  }, [option]);\n\n  ",["$","span",null,{"className":"hljs-keyword","children":"return"}]," { ref, inView };\n}\n"]}]}],"\n",["$","p",null,{"children":"useInview와 똑같이 ref와 inView를 받기 때문에 기존 코드에서 useInView를 useCustomInView로 바꾸는 작업 이외에는 추가 작업이 없었다."}],"\n",["$","blockquote",null,{"className":"bg-quote-blue border-blue-500 rounded-xl border-y border-r border-y-gray-400 border-r-gray-400 border-opacity-30 py-4 not-italic","children":[["$","div",null,{"className":"text-blue-500 flex items-center gap-1 text-lg font-bold md:text-2xl","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-pencil","children":[["$","path","1a8usu",{"d":"M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"}],["$","path","1mk7zo",{"d":"m15 5 4 4"}],"$undefined"]}],["$","div",null,{"children":" 기타 구현 지식"}]]}],["$","section",null,{"className":"text-sm font-semibold text-black md:text-base","children":[["$","br","0",{}],["$","div","0=0",{"children":""}],["$","div","0=1",{"children":""}],["$","div","1=0",{"children":"svg component를 사용해서 svg 타입 이미지를 쉽게 커스터마이징 할 수 있다. svgr"}],["$","div","1=1",{"children":"사이트를 통해서 svg를 컴포넌트로 변환하고 export로 받아오면 된다."}],["$","br","2",{}],["$","div","2=0",{"children":""}],["$","div","2=1",{"children":""}]]}]]}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"코드잇 프로젝트 진행 중에 겪은 경험들입니다."}],"\n",["$","p",null,{"children":"문제가 되는 부분이 있다고 요청 주시면 삭제하겠습니다."}],"\n",["$","p",null,{"children":"감사합니다."}],"\n"]}]]}]]}]]}]
